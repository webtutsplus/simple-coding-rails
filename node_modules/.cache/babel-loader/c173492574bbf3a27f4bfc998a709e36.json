{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { fetchSearch } from '../../utilities/search';\nvar KEYS = {\n  UP: 'ArrowUp',\n  DOWN: 'ArrowDown',\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n  TAB: 'Tab',\n  RETURN: 'Enter',\n  COMMA: ',',\n  DELETE: 'Backspace'\n};\nvar NAVIGATION_KEYS = [KEYS.COMMA, KEYS.DELETE, KEYS.LEFT, KEYS.RIGHT, KEYS.TAB];\nvar LETTERS_NUMBERS = /[a-z0-9]/i;\n/* TODO: Remove all instances of this.props.listing\n   and refactor this component to be more generic */\n\nvar Tags = /*#__PURE__*/function (_Component) {\n  _inherits(Tags, _Component);\n\n  var _super = _createSuper(Tags);\n\n  function Tags(props) {\n    var _this;\n\n    _classCallCheck(this, Tags);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getCurrentTagAtSelectionIndex\", function (value, index) {\n      var tagIndex = 0;\n      var tagByCharacterIndex = {};\n      value.split('').forEach(function (letter, letterIndex) {\n        if (letter === ',') {\n          tagIndex += 1;\n        } else {\n          tagByCharacterIndex[letterIndex] = tagIndex;\n        }\n      });\n      var tag = value.split(',')[tagByCharacterIndex[index]];\n\n      if (tag === undefined) {\n        return '';\n      }\n\n      return tag.trim();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRangeBetweenCommas\", function (value, index) {\n      var start = 0;\n      var end = value.length;\n      var toPreviousComma = value.slice(0, index).split('').reverse().indexOf(',');\n      var toNextComma = value.slice(index).indexOf(',');\n\n      if (toPreviousComma !== -1) {\n        start = index - toPreviousComma + 1;\n      }\n\n      if (toNextComma !== -1) {\n        end = index + toNextComma;\n      }\n\n      return [start, end];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (e) {\n      var component = _assertThisInitialized(_this);\n\n      var maxTags = _this.props.maxTags;\n\n      if (component.selected.length === maxTags && e.key === KEYS.COMMA) {\n        e.preventDefault();\n        return;\n      }\n\n      if ((e.key === KEYS.DOWN || e.key === KEYS.TAB) && !_this.isBottomOfSearchResults && component.props.defaultValue !== '') {\n        e.preventDefault();\n\n        _this.moveDownInSearchResults();\n      } else if (e.key === KEYS.UP && !_this.isTopOfSearchResults) {\n        e.preventDefault();\n\n        _this.moveUpInSearchResults();\n      } else if (e.key === KEYS.RETURN && _this.isSearchResultSelected) {\n        e.preventDefault();\n\n        _this.insertTag(component.state.searchResults[component.state.selectedIndex].name);\n\n        setTimeout(function () {\n          document.getElementById('tag-input').focus();\n        }, 10);\n      } else if (e.key === KEYS.COMMA && !_this.isSearchResultSelected) {\n        _this.resetSearchResults();\n\n        _this.clearSelectedSearchResult();\n      } else if (e.key === KEYS.DELETE) {\n        if (component.props.defaultValue[component.props.defaultValue.length - 1] === ',') {\n          _this.clearSelectedSearchResult();\n        }\n      } else if (!LETTERS_NUMBERS.test(e.key) && !NAVIGATION_KEYS.includes(e.key)) {\n        e.preventDefault();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRulesClick\", function (e) {\n      e.preventDefault();\n      var showingRulesForTag = _this.state.showingRulesForTag;\n\n      if (showingRulesForTag === e.target.dataset.content) {\n        _this.setState({\n          showingRulesForTag: null\n        });\n      } else {\n        _this.setState({\n          showingRulesForTag: e.target.dataset.content\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTagClick\", function (e) {\n      if (e.target.className === 'articleform__tagsoptionrulesbutton') {\n        return;\n      }\n\n      var input = document.getElementById('tag-input');\n      input.focus(); // the rules container (__tagoptionrow) is the real target of the event,\n      // by using currentTarget we let the event propagation work\n      // from the inner rules box as well (__tagrules)\n\n      _this.insertTag(e.currentTarget.dataset.content);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInput\", function (e) {\n      var value = e.target.value; // If we start typing immediately after a comma, add a space\n      // before what we typed.\n      // e.g. If value = \"javascript,\" and we type a \"p\",\n      // the result should be \"javascript, p\".\n\n      if (e.inputType === 'insertText') {\n        var isTypingAfterComma = e.target.value[e.target.selectionStart - 2] === ',';\n\n        if (isTypingAfterComma) {\n          value = _this.insertSpace(value, e.target.selectionStart - 1);\n        }\n      }\n\n      if (e.data === ',') {\n        value += ' ';\n      }\n      /* eslint-disable-next-line react/destructuring-assignment */\n\n\n      _this.props.onInput(value);\n\n      var query = _this.getCurrentTagAtSelectionIndex(e.target.value, e.target.selectionStart - 1);\n\n      _this.setState({\n        selectedIndex: 0,\n        cursorIdx: e.target.selectionStart,\n        prevLen: _this.textArea.value.length\n      });\n\n      return _this.search(query);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFocusChange\", function () {\n      var component = _assertThisInitialized(_this);\n\n      setTimeout(function () {\n        if (document.activeElement.id === 'tag-input') {\n          return;\n        }\n\n        component.forceUpdate();\n      }, 250);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"insertSpace\", function (value, position) {\n      return \"\".concat(value.slice(0, position), \" \").concat(value.slice(position, value.length));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTagEnter\", function (e) {\n      if (e.key === KEYS.RETURN) {\n        _this.handleTagClick();\n      }\n    });\n\n    var listing = props.listing;\n    var listingState = listing ? {\n      additionalTags: {\n        jobs: ['remote', 'remoteoptional', 'lgbtbenefits', 'greencard', 'senior', 'junior', 'intermediate', '401k', 'fulltime', 'contract', 'temp'],\n        forhire: ['remote', 'remoteoptional', 'lgbtbenefits', 'greencard', 'senior', 'junior', 'intermediate', '401k', 'fulltime', 'contract', 'temp'],\n        forsale: ['laptop', 'desktopcomputer', 'new', 'used'],\n        events: ['conference', 'meetup'],\n        collabs: ['paid', 'temp']\n      }\n    } : null;\n    _this.state = _objectSpread({\n      selectedIndex: -1,\n      searchResults: [],\n      additionalTags: [],\n      cursorIdx: 0,\n      prevLen: 0,\n      showingRulesForTag: null\n    }, listingState);\n    return _this;\n  }\n\n  _createClass(Tags, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // stop cursor jumping if the user goes back to edit previous tags\n      var _this$state = this.state,\n          cursorIdx = _this$state.cursorIdx,\n          prevLen = _this$state.prevLen;\n\n      if (cursorIdx < this.textArea.value.length && this.textArea.value.length < prevLen + 1) {\n        this.textArea.selectionEnd = cursorIdx;\n        this.textArea.selectionStart = this.textArea.selectionEnd;\n      }\n    }\n  }, {\n    key: \"insertTag\",\n    value: function insertTag(tag) {\n      var input = document.getElementById('tag-input');\n      var maxTags = this.props.maxTags;\n      var range = this.getRangeBetweenCommas(input.value, input.selectionStart);\n      var insertingAtEnd = range[1] === input.value.length;\n      var maxTagsWillBeReached = this.selected.length === maxTags;\n      var tagValue = tag;\n\n      if (insertingAtEnd && !maxTagsWillBeReached) {\n        tagValue = \"\".concat(tagValue, \", \");\n      } // Insert new tag between commas if there are any.\n\n\n      var newInput = input.value.slice(0, range[0]) + tagValue + input.value.slice(range[1], input.value.length);\n      /* eslint-disable-next-line react/destructuring-assignment */\n\n      this.props.onInput(newInput);\n      this.resetSearchResults();\n      this.clearSelectedSearchResult();\n    }\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      var _this2 = this;\n\n      if (query === '') {\n        return new Promise(function (resolve) {\n          setTimeout(function () {\n            _this2.resetSearchResults();\n\n            resolve();\n          }, 5);\n        });\n      }\n\n      var listing = this.props.listing;\n      var dataHash = {\n        name: query\n      };\n      var responsePromise = fetchSearch('tags', dataHash);\n      return responsePromise.then(function (response) {\n        if (listing === true) {\n          var additionalTags = _this2.state.additionalTags;\n          var category = _this2.props.category;\n          var additionalItems = (additionalTags[category] || []).filter(function (t) {\n            return t.includes(query);\n          });\n          var resultsArray = response.result;\n          additionalItems.forEach(function (t) {\n            if (!resultsArray.includes(t)) {\n              resultsArray.push({\n                name: t\n              });\n            }\n          });\n        } // updates searchResults array according to what is being typed by user\n        // allows user to choose a tag when they've typed the partial or whole word\n\n\n        _this2.setState({\n          searchResults: response.result.filter(function (t) {\n            return !_this2.selected.includes(t.name);\n          })\n        });\n      });\n    }\n  }, {\n    key: \"resetSearchResults\",\n    value: function resetSearchResults() {\n      this.setState({\n        searchResults: []\n      });\n    }\n  }, {\n    key: \"moveUpInSearchResults\",\n    value: function moveUpInSearchResults() {\n      this.setState(function (prevState) {\n        return {\n          selectedIndex: prevState.selectedIndex - 1\n        };\n      });\n    }\n  }, {\n    key: \"moveDownInSearchResults\",\n    value: function moveDownInSearchResults() {\n      this.setState(function (prevState) {\n        return {\n          selectedIndex: prevState.selectedIndex + 1\n        };\n      });\n    }\n  }, {\n    key: \"clearSelectedSearchResult\",\n    value: function clearSelectedSearchResult() {\n      this.setState({\n        selectedIndex: -1\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var searchResultsHTML = '';\n      var _this$state2 = this.state,\n          searchResults = _this$state2.searchResults,\n          selectedIndex = _this$state2.selectedIndex,\n          showingRulesForTag = _this$state2.showingRulesForTag;\n      var _this$props = this.props,\n          classPrefix = _this$props.classPrefix,\n          defaultValue = _this$props.defaultValue,\n          maxTags = _this$props.maxTags,\n          listing = _this$props.listing,\n          fieldClassName = _this$props.fieldClassName,\n          onFocus = _this$props.onFocus,\n          pattern = _this$props.pattern;\n      var _document = document,\n          activeElement = _document.activeElement;\n      var searchResultsRows = searchResults.map(function (tag, index) {\n        return h(\"div\", {\n          tabIndex: \"-1\",\n          role: \"button\",\n          className: \"\".concat(classPrefix, \"__tagoptionrow \").concat(classPrefix, \"__tagoptionrow--\").concat(selectedIndex === index ? 'active' : 'inactive'),\n          onClick: _this3.handleTagClick,\n          onKeyDown: _this3.handleTagEnter,\n          \"data-content\": tag.name\n        }, h(\"span\", {\n          className: \"\".concat(classPrefix, \"__tagname\")\n        }, tag.name), tag.rules_html && tag.rules_html.length > 0 ? h(\"button\", {\n          type: \"button\",\n          className: \"\".concat(classPrefix, \"__tagsoptionrulesbutton\"),\n          onClick: _this3.handleRulesClick,\n          \"data-content\": tag.name\n        }, showingRulesForTag === tag.name ? 'Hide Rules' : 'View Rules') : '', h(\"div\", {\n          className: \"\".concat(classPrefix, \"__tagrules--\").concat(showingRulesForTag === tag.name ? 'active' : 'inactive') // eslint-disable-next-line react/no-danger\n          ,\n          dangerouslySetInnerHTML: {\n            __html: tag.rules_html\n          }\n        }));\n      });\n\n      if (searchResults.length > 0 && (activeElement.id === 'tag-input' || activeElement.classList.contains('articleform__tagsoptionrulesbutton') || activeElement.classList.contains('articleform__tagoptionrow'))) {\n        searchResultsHTML = h(\"div\", {\n          className: \"\".concat(classPrefix, \"__tagsoptions\")\n        }, searchResultsRows, h(\"div\", {\n          className: \"\".concat(classPrefix, \"__tagsoptionsbottomrow\")\n        }, \"Some tags have rules and guidelines determined by community moderators\"));\n      }\n\n      return h(\"div\", {\n        className: \"\".concat(classPrefix, \"__tagswrapper crayons-field\")\n      }, listing && h(\"label\", {\n        htmlFor: \"Tags\",\n        \"class\": \"crayons-field__label\"\n      }, \"Tags\"), h(\"input\", {\n        \"data-testid\": \"tag-input\",\n        \"aria-label\": \"Post Tags\",\n        id: \"tag-input\",\n        type: \"text\",\n        ref: function ref(t) {\n          _this3.textArea = t;\n          return _this3.textArea;\n        },\n        className: \"\".concat(\"\".concat(fieldClassName, \" \").concat(classPrefix), \"__tags\"),\n        name: \"listing[tag_list]\",\n        placeholder: \"Add up to \".concat(maxTags, \" tags...\"),\n        autoComplete: \"off\",\n        value: defaultValue,\n        onInput: this.handleInput,\n        onKeyDown: this.handleKeyDown,\n        onBlur: this.handleFocusChange,\n        onFocus: onFocus,\n        pattern: pattern\n      }), searchResultsHTML);\n    }\n  }, {\n    key: \"selected\",\n    get: function get() {\n      var defaultValue = this.props.defaultValue;\n      return defaultValue.split(',').map(function (item) {\n        return item !== undefined && item.trim();\n      }).filter(function (item) {\n        return item.length > 0;\n      });\n    }\n  }, {\n    key: \"isTopOfSearchResults\",\n    get: function get() {\n      var selectedIndex = this.state.selectedIndex;\n      return selectedIndex <= 0;\n    }\n  }, {\n    key: \"isBottomOfSearchResults\",\n    get: function get() {\n      var _this$state3 = this.state,\n          selectedIndex = _this$state3.selectedIndex,\n          searchResults = _this$state3.searchResults;\n      return selectedIndex >= searchResults.length - 1;\n    }\n  }, {\n    key: \"isSearchResultSelected\",\n    get: function get() {\n      var selectedIndex = this.state.selectedIndex;\n      return selectedIndex > -1;\n    }\n  }]);\n\n  return Tags;\n}(Component);\n\nTags.propTypes = {\n  defaultValue: PropTypes.string.isRequired,\n  onInput: PropTypes.func.isRequired,\n  maxTags: PropTypes.number.isRequired,\n  classPrefix: PropTypes.string.isRequired,\n  fieldClassName: PropTypes.string.isRequired,\n  listing: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  onFocus: PropTypes.func.isRequired,\n  pattern: PropTypes.string.isRequired\n};\nexport default Tags;","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/shared/components/tags.jsx"],"names":["h","Component","PropTypes","fetchSearch","KEYS","UP","DOWN","LEFT","RIGHT","TAB","RETURN","COMMA","DELETE","NAVIGATION_KEYS","LETTERS_NUMBERS","Tags","props","value","index","tagIndex","tagByCharacterIndex","split","forEach","letter","letterIndex","tag","undefined","trim","start","end","length","toPreviousComma","slice","reverse","indexOf","toNextComma","e","component","maxTags","selected","key","preventDefault","isBottomOfSearchResults","defaultValue","moveDownInSearchResults","isTopOfSearchResults","moveUpInSearchResults","isSearchResultSelected","insertTag","state","searchResults","selectedIndex","name","setTimeout","document","getElementById","focus","resetSearchResults","clearSelectedSearchResult","test","includes","showingRulesForTag","target","dataset","content","setState","className","input","currentTarget","inputType","isTypingAfterComma","selectionStart","insertSpace","data","onInput","query","getCurrentTagAtSelectionIndex","cursorIdx","prevLen","textArea","search","activeElement","id","forceUpdate","position","handleTagClick","listing","listingState","additionalTags","jobs","forhire","forsale","events","collabs","selectionEnd","range","getRangeBetweenCommas","insertingAtEnd","maxTagsWillBeReached","tagValue","newInput","Promise","resolve","dataHash","responsePromise","then","response","category","additionalItems","filter","t","resultsArray","result","push","prevState","searchResultsHTML","classPrefix","fieldClassName","onFocus","pattern","searchResultsRows","map","handleTagEnter","rules_html","handleRulesClick","__html","classList","contains","handleInput","handleKeyDown","handleFocusChange","item","propTypes","string","isRequired","func","number"],"mappings":"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","sourcesContent":["import { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { fetchSearch } from '../../utilities/search';\n\nconst KEYS = {\n  UP: 'ArrowUp',\n  DOWN: 'ArrowDown',\n  LEFT: 'ArrowLeft',\n  RIGHT: 'ArrowRight',\n  TAB: 'Tab',\n  RETURN: 'Enter',\n  COMMA: ',',\n  DELETE: 'Backspace',\n};\n\nconst NAVIGATION_KEYS = [\n  KEYS.COMMA,\n  KEYS.DELETE,\n  KEYS.LEFT,\n  KEYS.RIGHT,\n  KEYS.TAB,\n];\n\nconst LETTERS_NUMBERS = /[a-z0-9]/i;\n\n/* TODO: Remove all instances of this.props.listing\n   and refactor this component to be more generic */\n\nclass Tags extends Component {\n  constructor(props) {\n    super(props);\n    const { listing } = props;\n\n    const listingState = listing\n      ? {\n          additionalTags: {\n            jobs: [\n              'remote',\n              'remoteoptional',\n              'lgbtbenefits',\n              'greencard',\n              'senior',\n              'junior',\n              'intermediate',\n              '401k',\n              'fulltime',\n              'contract',\n              'temp',\n            ],\n            forhire: [\n              'remote',\n              'remoteoptional',\n              'lgbtbenefits',\n              'greencard',\n              'senior',\n              'junior',\n              'intermediate',\n              '401k',\n              'fulltime',\n              'contract',\n              'temp',\n            ],\n            forsale: ['laptop', 'desktopcomputer', 'new', 'used'],\n            events: ['conference', 'meetup'],\n            collabs: ['paid', 'temp'],\n          },\n        }\n      : null;\n\n    this.state = {\n      selectedIndex: -1,\n      searchResults: [],\n      additionalTags: [],\n      cursorIdx: 0,\n      prevLen: 0,\n      showingRulesForTag: null,\n      ...listingState,\n    };\n  }\n\n  componentDidUpdate() {\n    // stop cursor jumping if the user goes back to edit previous tags\n    const { cursorIdx, prevLen } = this.state;\n    if (\n      cursorIdx < this.textArea.value.length &&\n      this.textArea.value.length < prevLen + 1\n    ) {\n      this.textArea.selectionEnd = cursorIdx;\n      this.textArea.selectionStart = this.textArea.selectionEnd;\n    }\n  }\n\n  get selected() {\n    const { defaultValue } = this.props;\n    return defaultValue\n      .split(',')\n      .map((item) => item !== undefined && item.trim())\n      .filter((item) => item.length > 0);\n  }\n\n  get isTopOfSearchResults() {\n    const { selectedIndex } = this.state;\n    return selectedIndex <= 0;\n  }\n\n  get isBottomOfSearchResults() {\n    const { selectedIndex, searchResults } = this.state;\n    return selectedIndex >= searchResults.length - 1;\n  }\n\n  get isSearchResultSelected() {\n    const { selectedIndex } = this.state;\n    return selectedIndex > -1;\n  }\n\n  getCurrentTagAtSelectionIndex = (value, index) => {\n    let tagIndex = 0;\n    const tagByCharacterIndex = {};\n\n    value.split('').forEach((letter, letterIndex) => {\n      if (letter === ',') {\n        tagIndex += 1;\n      } else {\n        tagByCharacterIndex[letterIndex] = tagIndex;\n      }\n    });\n\n    const tag = value.split(',')[tagByCharacterIndex[index]];\n\n    if (tag === undefined) {\n      return '';\n    }\n    return tag.trim();\n  };\n\n  // Given an index of the String value, finds the range between commas.\n  // This is useful when we want to insert a new tag anywhere in the\n  // comma separated list of tags.\n  getRangeBetweenCommas = (value, index) => {\n    let start = 0;\n    let end = value.length;\n\n    const toPreviousComma = value\n      .slice(0, index)\n      .split('')\n      .reverse()\n      .indexOf(',');\n    const toNextComma = value.slice(index).indexOf(',');\n\n    if (toPreviousComma !== -1) {\n      start = index - toPreviousComma + 1;\n    }\n\n    if (toNextComma !== -1) {\n      end = index + toNextComma;\n    }\n\n    return [start, end];\n  };\n\n  handleKeyDown = (e) => {\n    const component = this;\n    const { maxTags } = this.props;\n    if (component.selected.length === maxTags && e.key === KEYS.COMMA) {\n      e.preventDefault();\n      return;\n    }\n\n    if (\n      (e.key === KEYS.DOWN || e.key === KEYS.TAB) &&\n      !this.isBottomOfSearchResults &&\n      component.props.defaultValue !== ''\n    ) {\n      e.preventDefault();\n      this.moveDownInSearchResults();\n    } else if (e.key === KEYS.UP && !this.isTopOfSearchResults) {\n      e.preventDefault();\n      this.moveUpInSearchResults();\n    } else if (e.key === KEYS.RETURN && this.isSearchResultSelected) {\n      e.preventDefault();\n      this.insertTag(\n        component.state.searchResults[component.state.selectedIndex].name,\n      );\n\n      setTimeout(() => {\n        document.getElementById('tag-input').focus();\n      }, 10);\n    } else if (e.key === KEYS.COMMA && !this.isSearchResultSelected) {\n      this.resetSearchResults();\n      this.clearSelectedSearchResult();\n    } else if (e.key === KEYS.DELETE) {\n      if (\n        component.props.defaultValue[\n          component.props.defaultValue.length - 1\n        ] === ','\n      ) {\n        this.clearSelectedSearchResult();\n      }\n    } else if (\n      !LETTERS_NUMBERS.test(e.key) &&\n      !NAVIGATION_KEYS.includes(e.key)\n    ) {\n      e.preventDefault();\n    }\n  };\n\n  handleRulesClick = (e) => {\n    e.preventDefault();\n    const { showingRulesForTag } = this.state;\n    if (showingRulesForTag === e.target.dataset.content) {\n      this.setState({ showingRulesForTag: null });\n    } else {\n      this.setState({ showingRulesForTag: e.target.dataset.content });\n    }\n  };\n\n  handleTagClick = (e) => {\n    if (e.target.className === 'articleform__tagsoptionrulesbutton') {\n      return;\n    }\n\n    const input = document.getElementById('tag-input');\n    input.focus();\n\n    // the rules container (__tagoptionrow) is the real target of the event,\n    // by using currentTarget we let the event propagation work\n    // from the inner rules box as well (__tagrules)\n    this.insertTag(e.currentTarget.dataset.content);\n  };\n\n  handleInput = (e) => {\n    let { value } = e.target;\n    // If we start typing immediately after a comma, add a space\n    // before what we typed.\n    // e.g. If value = \"javascript,\" and we type a \"p\",\n    // the result should be \"javascript, p\".\n    if (e.inputType === 'insertText') {\n      const isTypingAfterComma =\n        e.target.value[e.target.selectionStart - 2] === ',';\n      if (isTypingAfterComma) {\n        value = this.insertSpace(value, e.target.selectionStart - 1);\n      }\n    }\n\n    if (e.data === ',') {\n      value += ' ';\n    }\n\n    /* eslint-disable-next-line react/destructuring-assignment */\n    this.props.onInput(value);\n\n    const query = this.getCurrentTagAtSelectionIndex(\n      e.target.value,\n      e.target.selectionStart - 1,\n    );\n\n    this.setState({\n      selectedIndex: 0,\n      cursorIdx: e.target.selectionStart,\n      prevLen: this.textArea.value.length,\n    });\n    return this.search(query);\n  };\n\n  handleFocusChange = () => {\n    const component = this;\n    setTimeout(() => {\n      if (document.activeElement.id === 'tag-input') {\n        return;\n      }\n      component.forceUpdate();\n    }, 250);\n  };\n\n  insertSpace = (value, position) => {\n    return `${value.slice(0, position)} ${value.slice(position, value.length)}`;\n  };\n\n  handleTagEnter = (e) => {\n    if (e.key === KEYS.RETURN) {\n      this.handleTagClick();\n    }\n  };\n\n  insertTag(tag) {\n    const input = document.getElementById('tag-input');\n    const { maxTags } = this.props;\n    const range = this.getRangeBetweenCommas(input.value, input.selectionStart);\n    const insertingAtEnd = range[1] === input.value.length;\n    const maxTagsWillBeReached = this.selected.length === maxTags;\n    let tagValue = tag;\n    if (insertingAtEnd && !maxTagsWillBeReached) {\n      tagValue = `${tagValue}, `;\n    }\n\n    // Insert new tag between commas if there are any.\n    const newInput =\n      input.value.slice(0, range[0]) +\n      tagValue +\n      input.value.slice(range[1], input.value.length);\n    /* eslint-disable-next-line react/destructuring-assignment */\n    this.props.onInput(newInput);\n    this.resetSearchResults();\n    this.clearSelectedSearchResult();\n  }\n\n  search(query) {\n    if (query === '') {\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          this.resetSearchResults();\n          resolve();\n        }, 5);\n      });\n    }\n    const { listing } = this.props;\n\n    const dataHash = { name: query };\n    const responsePromise = fetchSearch('tags', dataHash);\n\n    return responsePromise.then((response) => {\n      if (listing === true) {\n        const { additionalTags } = this.state;\n        const { category } = this.props;\n        const additionalItems = (additionalTags[category] || []).filter((t) =>\n          t.includes(query),\n        );\n        const resultsArray = response.result;\n        additionalItems.forEach((t) => {\n          if (!resultsArray.includes(t)) {\n            resultsArray.push({ name: t });\n          }\n        });\n      }\n      // updates searchResults array according to what is being typed by user\n      // allows user to choose a tag when they've typed the partial or whole word\n      this.setState({\n        searchResults: response.result.filter((t) => !this.selected.includes(t.name)),\n      });\n    });\n  }\n\n  resetSearchResults() {\n    this.setState({\n      searchResults: [],\n    });\n  }\n\n  moveUpInSearchResults() {\n    this.setState((prevState) => ({\n      selectedIndex: prevState.selectedIndex - 1,\n    }));\n  }\n\n  moveDownInSearchResults() {\n    this.setState((prevState) => ({\n      selectedIndex: prevState.selectedIndex + 1,\n    }));\n  }\n\n  clearSelectedSearchResult() {\n    this.setState({\n      selectedIndex: -1,\n    });\n  }\n\n  render() {\n    let searchResultsHTML = '';\n    const { searchResults, selectedIndex, showingRulesForTag } = this.state;\n    const {\n      classPrefix,\n      defaultValue,\n      maxTags,\n      listing,\n      fieldClassName,\n      onFocus,\n      pattern,\n    } = this.props;\n    const { activeElement } = document;\n    const searchResultsRows = searchResults.map((tag, index) => (\n      <div\n        tabIndex=\"-1\"\n        role=\"button\"\n        className={`${classPrefix}__tagoptionrow ${classPrefix}__tagoptionrow--${\n          selectedIndex === index ? 'active' : 'inactive'\n        }`}\n        onClick={this.handleTagClick}\n        onKeyDown={this.handleTagEnter}\n        data-content={tag.name}\n      >\n        <span className={`${classPrefix}__tagname`}>{tag.name}</span>\n        {tag.rules_html && tag.rules_html.length > 0 ? (\n          <button\n            type=\"button\"\n            className={`${classPrefix}__tagsoptionrulesbutton`}\n            onClick={this.handleRulesClick}\n            data-content={tag.name}\n          >\n            {showingRulesForTag === tag.name ? 'Hide Rules' : 'View Rules'}\n          </button>\n        ) : (\n          ''\n        )}\n        <div\n          className={`${classPrefix}__tagrules--${\n            showingRulesForTag === tag.name ? 'active' : 'inactive'\n          }`}\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{ __html: tag.rules_html }}\n        />\n      </div>\n    ));\n    if (\n      searchResults.length > 0 &&\n      (activeElement.id === 'tag-input' ||\n        activeElement.classList.contains(\n          'articleform__tagsoptionrulesbutton',\n        ) ||\n        activeElement.classList.contains('articleform__tagoptionrow'))\n    ) {\n      searchResultsHTML = (\n        <div className={`${classPrefix}__tagsoptions`}>\n          {searchResultsRows}\n          <div className={`${classPrefix}__tagsoptionsbottomrow`}>\n            Some tags have rules and guidelines determined by community\n            moderators\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`${classPrefix}__tagswrapper crayons-field`}>\n        {listing && (\n          <label htmlFor=\"Tags\" class=\"crayons-field__label\">\n            Tags\n          </label>\n        )}\n        <input\n          data-testid=\"tag-input\"\n          aria-label=\"Post Tags\"\n          id=\"tag-input\"\n          type=\"text\"\n          ref={(t) => {\n            this.textArea = t;\n            return this.textArea;\n          }}\n          className={`${`${fieldClassName} ${classPrefix}`}__tags`}\n          name=\"listing[tag_list]\"\n          placeholder={`Add up to ${maxTags} tags...`}\n          autoComplete=\"off\"\n          value={defaultValue}\n          onInput={this.handleInput}\n          onKeyDown={this.handleKeyDown}\n          onBlur={this.handleFocusChange}\n          onFocus={onFocus}\n          pattern={pattern}\n        />\n        {searchResultsHTML}\n      </div>\n    );\n  }\n}\n\nTags.propTypes = {\n  defaultValue: PropTypes.string.isRequired,\n  onInput: PropTypes.func.isRequired,\n  maxTags: PropTypes.number.isRequired,\n  classPrefix: PropTypes.string.isRequired,\n  fieldClassName: PropTypes.string.isRequired,\n  listing: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  onFocus: PropTypes.func.isRequired,\n  pattern: PropTypes.string.isRequired,\n};\n\nexport default Tags;\n"]},"metadata":{},"sourceType":"module"}