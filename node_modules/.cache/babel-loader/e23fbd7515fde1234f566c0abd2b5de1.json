{"ast":null,"code":"import { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport InviteForm from './InviteForm';\nimport SettingsForm from './SettingsForm';\n\nvar ModSection = function ModSection(_ref) {\n  var handleChannelInvitations = _ref.handleChannelInvitations,\n      invitationUsernames = _ref.invitationUsernames,\n      handleInvitationUsernames = _ref.handleInvitationUsernames,\n      channelDescription = _ref.channelDescription,\n      handleDescriptionChange = _ref.handleDescriptionChange,\n      channelDiscoverable = _ref.channelDiscoverable,\n      handleChannelDiscoverableStatus = _ref.handleChannelDiscoverableStatus,\n      handleChannelDescriptionChanges = _ref.handleChannelDescriptionChanges,\n      currentMembershipRole = _ref.currentMembershipRole;\n\n  if (currentMembershipRole === 'member') {\n    return null;\n  }\n\n  return h(\"div\", {\n    className: \"mod-section\"\n  }, h(InviteForm, {\n    handleInvitationUsernames: handleInvitationUsernames,\n    invitationUsernames: invitationUsernames,\n    handleChannelInvitations: handleChannelInvitations\n  }), h(SettingsForm, {\n    channelDescription: channelDescription,\n    handleDescriptionChange: handleDescriptionChange,\n    channelDiscoverable: channelDiscoverable,\n    handleChannelDiscoverableStatus: handleChannelDiscoverableStatus,\n    handleChannelDescriptionChanges: handleChannelDescriptionChanges\n  }));\n};\n\nModSection.propTypes = {\n  handleInvitationUsernames: PropTypes.func.isRequired,\n  handleChannelInvitations: PropTypes.func.isRequired,\n  invitationUsernames: PropTypes.func.isRequired,\n  channelDescription: PropTypes.string.isRequired,\n  handleDescriptionChange: PropTypes.func.isRequired,\n  handleChannelDiscoverableStatus: PropTypes.func.isRequired,\n  handleChannelDescriptionChanges: PropTypes.func.isRequired,\n  channelDiscoverable: PropTypes.bool.isRequired\n};\nexport default ModSection;","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/chat/ChatChannelSettings/ModSection.jsx"],"names":["h","PropTypes","InviteForm","SettingsForm","ModSection","handleChannelInvitations","invitationUsernames","handleInvitationUsernames","channelDescription","handleDescriptionChange","channelDiscoverable","handleChannelDiscoverableStatus","handleChannelDescriptionChanges","currentMembershipRole","propTypes","func","isRequired","string","bool"],"mappings":"AAAA,SAASA,CAAT,QAAkB,QAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAUb;AAAA,MATJC,wBASI,QATJA,wBASI;AAAA,MARJC,mBAQI,QARJA,mBAQI;AAAA,MAPJC,yBAOI,QAPJA,yBAOI;AAAA,MANJC,kBAMI,QANJA,kBAMI;AAAA,MALJC,uBAKI,QALJA,uBAKI;AAAA,MAJJC,mBAII,QAJJA,mBAII;AAAA,MAHJC,+BAGI,QAHJA,+BAGI;AAAA,MAFJC,+BAEI,QAFJA,+BAEI;AAAA,MADJC,qBACI,QADJA,qBACI;;AACJ,MAAIA,qBAAqB,KAAK,QAA9B,EAAwC;AACtC,WAAO,IAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,EAAC,UAAD;AACE,IAAA,yBAAyB,EAAEN,yBAD7B;AAEE,IAAA,mBAAmB,EAAED,mBAFvB;AAGE,IAAA,wBAAwB,EAAED;AAH5B,IADF,EAME,EAAC,YAAD;AACE,IAAA,kBAAkB,EAAEG,kBADtB;AAEE,IAAA,uBAAuB,EAAEC,uBAF3B;AAGE,IAAA,mBAAmB,EAAEC,mBAHvB;AAIE,IAAA,+BAA+B,EAAEC,+BAJnC;AAKE,IAAA,+BAA+B,EAAEC;AALnC,IANF,CADF;AAgBD,CA/BD;;AAiCAR,UAAU,CAACU,SAAX,GAAuB;AACrBP,EAAAA,yBAAyB,EAAEN,SAAS,CAACc,IAAV,CAAeC,UADrB;AAErBX,EAAAA,wBAAwB,EAAEJ,SAAS,CAACc,IAAV,CAAeC,UAFpB;AAGrBV,EAAAA,mBAAmB,EAAEL,SAAS,CAACc,IAAV,CAAeC,UAHf;AAIrBR,EAAAA,kBAAkB,EAAEP,SAAS,CAACgB,MAAV,CAAiBD,UAJhB;AAKrBP,EAAAA,uBAAuB,EAAER,SAAS,CAACc,IAAV,CAAeC,UALnB;AAMrBL,EAAAA,+BAA+B,EAAEV,SAAS,CAACc,IAAV,CAAeC,UAN3B;AAOrBJ,EAAAA,+BAA+B,EAAEX,SAAS,CAACc,IAAV,CAAeC,UAP3B;AAQrBN,EAAAA,mBAAmB,EAAET,SAAS,CAACiB,IAAV,CAAeF;AARf,CAAvB;AAWA,eAAeZ,UAAf","sourcesContent":["import { h } from 'preact';\nimport PropTypes from 'prop-types';\n\nimport InviteForm from './InviteForm';\nimport SettingsForm from './SettingsForm';\n\nconst ModSection = ({\n  handleChannelInvitations,\n  invitationUsernames,\n  handleInvitationUsernames,\n  channelDescription,\n  handleDescriptionChange,\n  channelDiscoverable,\n  handleChannelDiscoverableStatus,\n  handleChannelDescriptionChanges,\n  currentMembershipRole,\n}) => {\n  if (currentMembershipRole === 'member') {\n    return null;\n  }\n\n  return (\n    <div className=\"mod-section\">\n      <InviteForm\n        handleInvitationUsernames={handleInvitationUsernames}\n        invitationUsernames={invitationUsernames}\n        handleChannelInvitations={handleChannelInvitations}\n      />\n      <SettingsForm\n        channelDescription={channelDescription}\n        handleDescriptionChange={handleDescriptionChange}\n        channelDiscoverable={channelDiscoverable}\n        handleChannelDiscoverableStatus={handleChannelDiscoverableStatus}\n        handleChannelDescriptionChanges={handleChannelDescriptionChanges}\n      />\n    </div>\n  );\n};\n\nModSection.propTypes = {\n  handleInvitationUsernames: PropTypes.func.isRequired,\n  handleChannelInvitations: PropTypes.func.isRequired,\n  invitationUsernames: PropTypes.func.isRequired,\n  channelDescription: PropTypes.string.isRequired,\n  handleDescriptionChange: PropTypes.func.isRequired,\n  handleChannelDiscoverableStatus: PropTypes.func.isRequired,\n  handleChannelDescriptionChanges: PropTypes.func.isRequired,\n  channelDiscoverable: PropTypes.bool.isRequired,\n};\n\nexport default ModSection;\n"]},"metadata":{},"sourceType":"module"}