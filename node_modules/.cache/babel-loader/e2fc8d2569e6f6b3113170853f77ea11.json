{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport linkState from 'linkstate';\nimport Tags from '../shared/components/tags';\nimport { OrganizationPicker } from '../organization/OrganizationPicker';\nimport { DEFAULT_TAG_FORMAT } from '../article-form/components/TagsField';\nimport Title from './components/Title';\nimport BodyMarkdown from './components/BodyMarkdown';\nimport Categories from './components/Categories';\nimport ContactViaConnect from './components/ContactViaConnect';\nimport ExpireDate from './components/ExpireDate';\n\nvar ListingForm = /*#__PURE__*/function (_Component) {\n  _inherits(ListingForm, _Component);\n\n  var _super = _createSuper(ListingForm);\n\n  function ListingForm(props) {\n    var _this;\n\n    _classCallCheck(this, ListingForm);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOrgIdChange\", function (e) {\n      var organizationId = e.target.selectedOptions[0].value;\n\n      _this.setState({\n        organizationId: organizationId\n      });\n    });\n\n    var _this$props = _this.props,\n        listing = _this$props.listing,\n        categoriesForDetails = _this$props.categoriesForDetails,\n        categoriesForSelect = _this$props.categoriesForSelect,\n        unparsedOrganizations = _this$props.organizations;\n    _this.listing = JSON.parse(listing);\n    _this.categoriesForDetails = JSON.parse(categoriesForDetails);\n    _this.categoriesForSelect = JSON.parse(categoriesForSelect);\n    var organizations = JSON.parse(unparsedOrganizations);\n    _this.url = window.location.href;\n    _this.state = {\n      id: _this.listing.id || null,\n      title: _this.listing.title || '',\n      category: _this.listing.category || '',\n      tagList: _this.listing.cached_tag_list || '',\n      bodyMarkdown: _this.listing.body_markdown || '',\n      categoriesForSelect: _this.categoriesForSelect,\n      categoriesForDetails: _this.categoriesForDetails,\n      organizations: organizations,\n      organizationId: null,\n      // change this for /edit later\n      contactViaConnect: _this.listing.contact_via_connect || 'checked',\n      expireDate: _this.listing.expires_at || ''\n    };\n    return _this;\n  }\n\n  _createClass(ListingForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          id = _this$state.id,\n          title = _this$state.title,\n          bodyMarkdown = _this$state.bodyMarkdown,\n          tagList = _this$state.tagList,\n          category = _this$state.category,\n          categoriesForDetails = _this$state.categoriesForDetails,\n          categoriesForSelect = _this$state.categoriesForSelect,\n          organizations = _this$state.organizations,\n          organizationId = _this$state.organizationId,\n          contactViaConnect = _this$state.contactViaConnect,\n          expireDate = _this$state.expireDate;\n      var selectOrg = organizations && organizations.length > 0 ? h(\"div\", {\n        className: \"crayons-field\"\n      }, h(\"label\", {\n        htmlFor: \"organizationId\",\n        className: \"crayons-field__label\"\n      }, \"Post under an organization\"), h(OrganizationPicker, {\n        name: \"listing[organization_id]\",\n        id: \"listing_organization_id\",\n        className: \"crayons-select m:max-w-50\",\n        organizations: organizations,\n        organizationId: organizationId,\n        onToggle: this.handleOrgIdChange\n      }), h(\"p\", {\n        className: \"crayons-field__description\"\n      }, \"Posting on behalf of an organization spends the organization's credits.\")) : null;\n\n      if (id === null) {\n        return h(\"div\", {\n          className: \"grid gap-6\"\n        }, h(Title, {\n          defaultValue: title,\n          onChange: linkState(this, 'title')\n        }), h(BodyMarkdown, {\n          defaultValue: bodyMarkdown,\n          onChange: linkState(this, 'bodyMarkdown')\n        }), h(Categories, {\n          categoriesForSelect: categoriesForSelect,\n          categoriesForDetails: categoriesForDetails,\n          onChange: linkState(this, 'category'),\n          category: category\n        }), h(\"div\", {\n          className: \"relative\"\n        }, h(Tags, {\n          defaultValue: tagList,\n          category: category,\n          onInput: linkState(this, 'tagList'),\n          classPrefix: \"listingform\",\n          fieldClassName: \"crayons-textfield\",\n          maxTags: 8,\n          autocomplete: \"off\",\n          listing: true,\n          pattern: DEFAULT_TAG_FORMAT\n        })), h(ExpireDate, {\n          defaultValue: expireDate,\n          onChange: linkState(this, 'expireDate')\n        }), selectOrg, h(ContactViaConnect, {\n          checked: contactViaConnect,\n          onChange: linkState(this, 'contactViaConnect')\n        }));\n      } // WIP code for edit\n\n\n      return h(\"div\", null, h(Title, {\n        defaultValue: title,\n        onChange: linkState(this, 'title')\n      }), h(BodyMarkdown, {\n        defaultValue: bodyMarkdown,\n        onChange: linkState(this, 'bodyMarkdown')\n      }), h(Tags, {\n        defaultValue: tagList,\n        onInput: linkState(this, 'tagList')\n      }), selectOrg, h(ContactViaConnect, {\n        checked: contactViaConnect,\n        onChange: linkState(this, 'contactViaConnect')\n      }));\n    }\n  }]);\n\n  return ListingForm;\n}(Component);\n\nexport { ListingForm as default };\nListingForm.propTypes = {\n  listing: PropTypes.string.isRequired,\n  categoriesForDetails: PropTypes.string.isRequired,\n  categoriesForSelect: PropTypes.string.isRequired,\n  organizations: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/listings/listingForm.jsx"],"names":["h","Component","PropTypes","linkState","Tags","OrganizationPicker","DEFAULT_TAG_FORMAT","Title","BodyMarkdown","Categories","ContactViaConnect","ExpireDate","ListingForm","props","e","organizationId","target","selectedOptions","value","setState","listing","categoriesForDetails","categoriesForSelect","unparsedOrganizations","organizations","JSON","parse","url","window","location","href","state","id","title","category","tagList","cached_tag_list","bodyMarkdown","body_markdown","contactViaConnect","contact_via_connect","expireDate","expires_at","selectOrg","length","handleOrgIdChange","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport linkState from 'linkstate';\nimport Tags from '../shared/components/tags';\nimport { OrganizationPicker } from '../organization/OrganizationPicker';\nimport { DEFAULT_TAG_FORMAT } from '../article-form/components/TagsField';\nimport Title from './components/Title';\nimport BodyMarkdown from './components/BodyMarkdown';\nimport Categories from './components/Categories';\nimport ContactViaConnect from './components/ContactViaConnect';\nimport ExpireDate from './components/ExpireDate';\n\nexport default class ListingForm extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      listing,\n      categoriesForDetails,\n      categoriesForSelect,\n      organizations: unparsedOrganizations,\n    } = this.props;\n    this.listing = JSON.parse(listing);\n    this.categoriesForDetails = JSON.parse(categoriesForDetails);\n    this.categoriesForSelect = JSON.parse(categoriesForSelect);\n\n    const organizations = JSON.parse(unparsedOrganizations);\n\n    this.url = window.location.href;\n\n    this.state = {\n      id: this.listing.id || null,\n      title: this.listing.title || '',\n      category: this.listing.category || '',\n      tagList: this.listing.cached_tag_list || '',\n      bodyMarkdown: this.listing.body_markdown || '',\n      categoriesForSelect: this.categoriesForSelect,\n      categoriesForDetails: this.categoriesForDetails,\n      organizations,\n      organizationId: null, // change this for /edit later\n      contactViaConnect: this.listing.contact_via_connect || 'checked',\n      expireDate: this.listing.expires_at || '',\n    };\n  }\n\n  handleOrgIdChange = (e) => {\n    const organizationId = e.target.selectedOptions[0].value;\n    this.setState({ organizationId });\n  };\n\n  render() {\n    const {\n      id,\n      title,\n      bodyMarkdown,\n      tagList,\n      category,\n      categoriesForDetails,\n      categoriesForSelect,\n      organizations,\n      organizationId,\n      contactViaConnect,\n      expireDate,\n    } = this.state;\n\n    const selectOrg =\n      organizations && organizations.length > 0 ? (\n        <div className=\"crayons-field\">\n          <label htmlFor=\"organizationId\" className=\"crayons-field__label\">\n            Post under an organization\n          </label>\n          <OrganizationPicker\n            name=\"listing[organization_id]\"\n            id=\"listing_organization_id\"\n            className=\"crayons-select m:max-w-50\"\n            organizations={organizations}\n            organizationId={organizationId}\n            onToggle={this.handleOrgIdChange}\n          />\n          <p className=\"crayons-field__description\">\n            Posting on behalf of an organization spends the organization's\n            credits.\n          </p>\n        </div>\n      ) : null;\n\n    if (id === null) {\n      return (\n        <div className=\"grid gap-6\">\n          <Title defaultValue={title} onChange={linkState(this, 'title')} />\n          <BodyMarkdown\n            defaultValue={bodyMarkdown}\n            onChange={linkState(this, 'bodyMarkdown')}\n          />\n          <Categories\n            categoriesForSelect={categoriesForSelect}\n            categoriesForDetails={categoriesForDetails}\n            onChange={linkState(this, 'category')}\n            category={category}\n          />\n          <div className=\"relative\">\n            <Tags\n              defaultValue={tagList}\n              category={category}\n              onInput={linkState(this, 'tagList')}\n              classPrefix=\"listingform\"\n              fieldClassName=\"crayons-textfield\"\n              maxTags={8}\n              autocomplete=\"off\"\n              listing\n              pattern={DEFAULT_TAG_FORMAT}\n            />\n          </div>\n          <ExpireDate\n            defaultValue={expireDate}\n            onChange={linkState(this, 'expireDate')}\n          />\n          {selectOrg}\n          <ContactViaConnect\n            checked={contactViaConnect}\n            onChange={linkState(this, 'contactViaConnect')}\n          />\n        </div>\n      );\n    }\n    // WIP code for edit\n    return (\n      <div>\n        <Title defaultValue={title} onChange={linkState(this, 'title')} />\n        <BodyMarkdown\n          defaultValue={bodyMarkdown}\n          onChange={linkState(this, 'bodyMarkdown')}\n        />\n        <Tags defaultValue={tagList} onInput={linkState(this, 'tagList')} />\n        {selectOrg}\n        <ContactViaConnect\n          checked={contactViaConnect}\n          onChange={linkState(this, 'contactViaConnect')}\n        />\n      </div>\n    );\n  }\n}\n\nListingForm.propTypes = {\n  listing: PropTypes.string.isRequired,\n  categoriesForDetails: PropTypes.string.isRequired,\n  categoriesForSelect: PropTypes.string.isRequired,\n  organizations: PropTypes.string.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}