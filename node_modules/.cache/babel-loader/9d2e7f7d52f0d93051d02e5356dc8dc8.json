{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from 'prop-types';\nimport { h, Component } from 'preact';\n\nvar Categories = /*#__PURE__*/function (_Component) {\n  _inherits(Categories, _Component);\n\n  var _super = _createSuper(Categories);\n\n  function Categories() {\n    var _this;\n\n    _classCallCheck(this, Categories);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"options\", function () {\n      var _this$props = _this.props,\n          categoriesForSelect = _this$props.categoriesForSelect,\n          category = _this$props.category;\n      return categoriesForSelect.map(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            text = _ref2[0],\n            value = _ref2[1];\n\n        // array example: [\"Education/Courses (1 Credit)\", \"education\"]\n        if (category === value) {\n          return h(\"option\", {\n            value: value,\n            selected: true\n          }, text);\n        }\n\n        return h(\"option\", {\n          value: value\n        }, text);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"details\", function () {\n      var categoriesForDetails = _this.props.categoriesForDetails;\n      var rules = categoriesForDetails.map(function (category) {\n        var paragraphText = h(\"li\", null, h(\"strong\", null, category.name, \":\"), \" \", category.rules);\n        return h(\"ul\", null, paragraphText);\n      });\n      return h(\"details\", null, h(\"summary\", null, \"Category details/rules\"), rules);\n    });\n\n    return _this;\n  }\n\n  _createClass(Categories, [{\n    key: \"render\",\n    value: function render() {\n      var onChange = this.props.onChange;\n      return h(\"div\", null, h(\"div\", {\n        className: \"crayons-field mb-4\"\n      }, h(\"label\", {\n        className: \"crayons-field__label\",\n        htmlFor: \"category\"\n      }, \"Category\"), h(\"select\", {\n        id: \"category\",\n        className: \"crayons-select\",\n        name: \"listing[listing_category_id]\",\n        onChange: onChange,\n        onBlur: onChange\n      }, this.options())), this.details());\n    }\n  }]);\n\n  return Categories;\n}(Component);\n\nCategories.propTypes = {\n  categoriesForSelect: PropTypes.arrayOf(PropTypes.string).isRequired,\n  categoriesForDetails: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    rules: PropTypes.string\n  })).isRequired,\n  category: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default Categories;","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/listings/components/Categories.jsx"],"names":["PropTypes","h","Component","Categories","props","categoriesForSelect","category","map","text","value","categoriesForDetails","rules","paragraphText","name","onChange","options","details","propTypes","arrayOf","string","isRequired","shape","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,CAAT,EAAYC,SAAZ,QAA6B,QAA7B;;IAEMC,U;;;;;;;;;;;;;;;;8DACM,YAAM;AAAA,wBAC4B,MAAKC,KADjC;AAAA,UACNC,mBADM,eACNA,mBADM;AAAA,UACeC,QADf,eACeA,QADf;AAEd,aAAOD,mBAAmB,CAACE,GAApB,CAAwB,gBAAmB;AAAA;AAAA,YAAjBC,IAAiB;AAAA,YAAXC,KAAW;;AAChD;AACA,YAAIH,QAAQ,KAAKG,KAAjB,EAAwB;AACtB,iBACE;AAAQ,YAAA,KAAK,EAAEA,KAAf;AAAsB,YAAA,QAAQ;AAA9B,aACGD,IADH,CADF;AAKD;;AACD,eAAO;AAAQ,UAAA,KAAK,EAAEC;AAAf,WAAuBD,IAAvB,CAAP;AACD,OAVM,CAAP;AAWD,K;;8DAES,YAAM;AAAA,UACNE,oBADM,GACmB,MAAKN,KADxB,CACNM,oBADM;AAEd,UAAMC,KAAK,GAAGD,oBAAoB,CAACH,GAArB,CAAyB,UAACD,QAAD,EAAc;AACnD,YAAMM,aAAa,GACjB,cACE,kBAASN,QAAQ,CAACO,IAAlB,MADF,OACqCP,QAAQ,CAACK,KAD9C,CADF;AAKA,eAAO,cAAKC,aAAL,CAAP;AACD,OAPa,CAAd;AASA,aACE,mBACE,4CADF,EAEGD,KAFH,CADF;AAMD,K;;;;;;;6BAEQ;AAAA,UACCG,QADD,GACc,KAAKV,KADnB,CACCU,QADD;AAEP,aACE,eACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAwC,QAAA,OAAO,EAAC;AAAhD,oBADF,EAIE;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,SAAS,EAAC,gBAFZ;AAGE,QAAA,IAAI,EAAC,8BAHP;AAIE,QAAA,QAAQ,EAAEA,QAJZ;AAKE,QAAA,MAAM,EAAEA;AALV,SAOG,KAAKC,OAAL,EAPH,CAJF,CADF,EAeG,KAAKC,OAAL,EAfH,CADF;AAmBD;;;;EAxDsBd,S;;AA2DzBC,UAAU,CAACc,SAAX,GAAuB;AACrBZ,EAAAA,mBAAmB,EAAEL,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,MAA5B,EAAoCC,UADpC;AAErBV,EAAAA,oBAAoB,EAAEV,SAAS,CAACkB,OAAV,CACpBlB,SAAS,CAACqB,KAAV,CAAgB;AACdR,IAAAA,IAAI,EAAEb,SAAS,CAACmB,MADF;AAEdR,IAAAA,KAAK,EAAEX,SAAS,CAACmB;AAFH,GAAhB,CADoB,EAKpBC,UAPmB;AAQrBd,EAAAA,QAAQ,EAAEN,SAAS,CAACmB,MAAV,CAAiBC,UARN;AASrBN,EAAAA,QAAQ,EAAEd,SAAS,CAACsB,IAAV,CAAeF;AATJ,CAAvB;AAYA,eAAejB,UAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport { h, Component } from 'preact';\n\nclass Categories extends Component {\n  options = () => {\n    const { categoriesForSelect, category } = this.props;\n    return categoriesForSelect.map(([text, value]) => {\n      // array example: [\"Education/Courses (1 Credit)\", \"education\"]\n      if (category === value) {\n        return (\n          <option value={value} selected>\n            {text}\n          </option>\n        );\n      }\n      return <option value={value}>{text}</option>;\n    });\n  };\n\n  details = () => {\n    const { categoriesForDetails } = this.props;\n    const rules = categoriesForDetails.map((category) => {\n      const paragraphText = (\n        <li>\n          <strong>{category.name}:</strong> {category.rules}\n        </li>\n      );\n      return <ul>{paragraphText}</ul>;\n    });\n\n    return (\n      <details>\n        <summary>Category details/rules</summary>\n        {rules}\n      </details>\n    );\n  };\n\n  render() {\n    const { onChange } = this.props;\n    return (\n      <div>\n        <div className=\"crayons-field mb-4\">\n          <label className=\"crayons-field__label\" htmlFor=\"category\">\n            Category\n          </label>\n          <select\n            id=\"category\"\n            className=\"crayons-select\"\n            name=\"listing[listing_category_id]\"\n            onChange={onChange}\n            onBlur={onChange}\n          >\n            {this.options()}\n          </select>\n        </div>\n        {this.details()}\n      </div>\n    );\n  }\n}\n\nCategories.propTypes = {\n  categoriesForSelect: PropTypes.arrayOf(PropTypes.string).isRequired,\n  categoriesForDetails: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      rules: PropTypes.string,\n    }),\n  ).isRequired,\n  category: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}