{"ast":null,"code":"/**\n * Checks if an element is visible in the viewport\n *\n * @example\n * const element = document.getElementById('element');\n * isInViewport(element); // true or false\n *\n * @param {object} element - The HTML element to check\n * @param {number} [offsetTop=0] - Part of the screen to ignore counting from the top\n *\n * @returns {boolean} isInViewport - true if the element is visible in the viewport\n */\nexport function isInViewport(element) {\n  var offsetTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var boundingRect = element.getBoundingClientRect();\n  var clientHeight = window.innerHeight || document.documentElement.clientHeight;\n  var clientWidth = window.innerWidth || document.documentElement.clientWidth;\n  return boundingRect.top >= offsetTop && boundingRect.left >= 0 && boundingRect.bottom <= clientHeight && boundingRect.right <= clientWidth;\n}","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/utilities/viewport.js"],"names":["isInViewport","element","offsetTop","boundingRect","getBoundingClientRect","clientHeight","window","innerHeight","document","documentElement","clientWidth","innerWidth","top","left","bottom","right"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAT,CAAsBC,OAAtB,EAA8C;AAAA,MAAfC,SAAe,uEAAH,CAAG;AACnD,MAAMC,YAAY,GAAGF,OAAO,CAACG,qBAAR,EAArB;AACA,MAAMC,YAAY,GAChBC,MAAM,CAACC,WAAP,IAAsBC,QAAQ,CAACC,eAAT,CAAyBJ,YADjD;AAEA,MAAMK,WAAW,GAAGJ,MAAM,CAACK,UAAP,IAAqBH,QAAQ,CAACC,eAAT,CAAyBC,WAAlE;AACA,SACEP,YAAY,CAACS,GAAb,IAAoBV,SAApB,IACAC,YAAY,CAACU,IAAb,IAAqB,CADrB,IAEAV,YAAY,CAACW,MAAb,IAAuBT,YAFvB,IAGAF,YAAY,CAACY,KAAb,IAAsBL,WAJxB;AAMD","sourcesContent":["/**\n * Checks if an element is visible in the viewport\n *\n * @example\n * const element = document.getElementById('element');\n * isInViewport(element); // true or false\n *\n * @param {object} element - The HTML element to check\n * @param {number} [offsetTop=0] - Part of the screen to ignore counting from the top\n *\n * @returns {boolean} isInViewport - true if the element is visible in the viewport\n */\nexport function isInViewport(element, offsetTop = 0) {\n  const boundingRect = element.getBoundingClientRect();\n  const clientHeight =\n    window.innerHeight || document.documentElement.clientHeight;\n  const clientWidth = window.innerWidth || document.documentElement.clientWidth;\n  return (\n    boundingRect.top >= offsetTop &&\n    boundingRect.left >= 0 &&\n    boundingRect.bottom <= clientHeight &&\n    boundingRect.right <= clientWidth\n  );\n}\n"]},"metadata":{},"sourceType":"module"}