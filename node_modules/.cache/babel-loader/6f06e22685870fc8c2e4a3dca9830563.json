{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Controller } from 'stimulus';\n\nvar ImageUploadController = /*#__PURE__*/function (_Controller) {\n  _inherits(ImageUploadController, _Controller);\n\n  var _super = _createSuper(ImageUploadController);\n\n  function ImageUploadController() {\n    _classCallCheck(this, ImageUploadController);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ImageUploadController, [{\n    key: \"onFormSubmit\",\n    value: function onFormSubmit(event) {\n      var _this = this;\n\n      event.preventDefault();\n      var token = document.getElementsByName('authenticity_token')[0].value;\n      var image = this.fileFieldTarget.files[0];\n      var formData = new FormData();\n      formData.append('authenticity_token', token);\n      formData.append('image', image);\n      fetch(this.urlValue, {\n        method: 'POST',\n        headers: {\n          'X-CSRF-Token': window.csrfToken\n        },\n        body: formData,\n        credentials: 'same-origin'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        if (json.error) {\n          throw new Error(json.error);\n        }\n\n        var links = json.links;\n        return _this.onUploadSuccess(links);\n      });\n    }\n  }, {\n    key: \"onUploadSuccess\",\n    value: function onUploadSuccess(result) {\n      this.imageResultTarget.classList.remove('d-none');\n      var output = \"\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"output\\\">Image URL:</label>\\n        <textfield id=\\\"output\\\" name=\\\"output\\\" class=\\\"form-control\\\" readonly>\\n          \".concat(result, \"\\n        </textfield>\\n      </div>\\n      <img width=\\\"300px\\\" src=\").concat(result, \">\\n    \");\n      this.imageResultTarget.innerHTML = output;\n    }\n  }]);\n\n  return ImageUploadController;\n}(Controller);\n\n_defineProperty(ImageUploadController, \"targets\", ['fileField', 'imageResult']);\n\n_defineProperty(ImageUploadController, \"values\", {\n  url: String\n});\n\nexport { ImageUploadController as default };","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/admin/controllers/image_upload_controller.js"],"names":["Controller","ImageUploadController","event","preventDefault","token","document","getElementsByName","value","image","fileFieldTarget","files","formData","FormData","append","fetch","urlValue","method","headers","window","csrfToken","body","credentials","then","response","json","error","Error","links","onUploadSuccess","result","imageResultTarget","classList","remove","output","innerHTML","url","String"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;;IAEqBC,qB;;;;;;;;;;;;;iCAINC,K,EAAO;AAAA;;AAClBA,MAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,KAAK,GAAGC,QAAQ,CAACC,iBAAT,CAA2B,oBAA3B,EAAiD,CAAjD,EAAoDC,KAAlE;AACA,UAAMC,KAAK,GAAG,KAAKC,eAAL,CAAqBC,KAArB,CAA2B,CAA3B,CAAd;AACA,UAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,oBAAhB,EAAsCT,KAAtC;AACAO,MAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBL,KAAzB;AAEAM,MAAAA,KAAK,CAAC,KAAKC,QAAN,EAAgB;AACnBC,QAAAA,MAAM,EAAE,MADW;AAEnBC,QAAAA,OAAO,EAAE;AACP,0BAAgBC,MAAM,CAACC;AADhB,SAFU;AAKnBC,QAAAA,IAAI,EAAET,QALa;AAMnBU,QAAAA,WAAW,EAAE;AANM,OAAhB,CAAL,CAQGC,IARH,CAQQ,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OARR,EASGF,IATH,CASQ,UAACE,IAAD,EAAU;AACd,YAAIA,IAAI,CAACC,KAAT,EAAgB;AACd,gBAAM,IAAIC,KAAJ,CAAUF,IAAI,CAACC,KAAf,CAAN;AACD;;AAHa,YAINE,KAJM,GAIIH,IAJJ,CAING,KAJM;AAKd,eAAO,KAAI,CAACC,eAAL,CAAqBD,KAArB,CAAP;AACD,OAfH;AAgBD;;;oCAEeE,M,EAAQ;AACtB,WAAKC,iBAAL,CAAuBC,SAAvB,CAAiCC,MAAjC,CAAwC,QAAxC;AACA,UAAMC,MAAM,gMAIJJ,MAJI,kFAOeA,MAPf,YAAZ;AASA,WAAKC,iBAAL,CAAuBI,SAAvB,GAAmCD,MAAnC;AACD;;;;EA5CgDjC,U;;gBAA9BC,qB,aACF,CAAC,WAAD,EAAc,aAAd,C;;gBADEA,qB,YAEH;AAAEkC,EAAAA,GAAG,EAAEC;AAAP,C;;SAFGnC,qB","sourcesContent":["import { Controller } from 'stimulus';\n\nexport default class ImageUploadController extends Controller {\n  static targets = ['fileField', 'imageResult'];\n  static values = { url: String };\n\n  onFormSubmit(event) {\n    event.preventDefault();\n\n    const token = document.getElementsByName('authenticity_token')[0].value;\n    const image = this.fileFieldTarget.files[0];\n    let formData = new FormData();\n\n    formData.append('authenticity_token', token);\n    formData.append('image', image);\n\n    fetch(this.urlValue, {\n      method: 'POST',\n      headers: {\n        'X-CSRF-Token': window.csrfToken,\n      },\n      body: formData,\n      credentials: 'same-origin',\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        if (json.error) {\n          throw new Error(json.error);\n        }\n        const { links } = json;\n        return this.onUploadSuccess(links);\n      });\n  }\n\n  onUploadSuccess(result) {\n    this.imageResultTarget.classList.remove('d-none');\n    const output = `\n      <div class=\"form-group\">\n        <label for=\"output\">Image URL:</label>\n        <textfield id=\"output\" name=\"output\" class=\"form-control\" readonly>\n          ${result}\n        </textfield>\n      </div>\n      <img width=\"300px\" src=${result}>\n    `;\n    this.imageResultTarget.innerHTML = output;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}