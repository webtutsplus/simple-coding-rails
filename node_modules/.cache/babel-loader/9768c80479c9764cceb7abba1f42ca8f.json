{"ast":null,"code":"import { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport Membership from './Membership';\n\nvar MembershipSection = function MembershipSection(_ref) {\n  var memberships = _ref.memberships,\n      currentMembership = _ref.currentMembership,\n      removeMembership = _ref.removeMembership,\n      handleUpdateMembershipRole = _ref.handleUpdateMembershipRole,\n      membershipCount = _ref.membershipCount;\n\n  if (!memberships || memberships.length === 0) {\n    return h(\"p\", {\n      className: \"lh-base\"\n    }, \"No membership\");\n  }\n\n  return h(\"div\", {\n    className: \"membership-section\"\n  }, memberships.map(function (activeMembership) {\n    return h(Membership, {\n      membership: activeMembership,\n      membershipType: \"active\",\n      currentMembershipRole: function currentMembershipRole() {},\n      className: \"active-member\",\n      currentMembership: currentMembership,\n      removeMembership: removeMembership,\n      handleUpdateMembershipRole: handleUpdateMembershipRole,\n      showActionButton: membershipCount > 1\n    });\n  }));\n};\n\nMembershipSection.propType = {\n  memberships: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    membership_id: PropTypes.number.isRequired,\n    user_id: PropTypes.number.isRequired,\n    role: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired\n  })).isRequired,\n  currentMembership: PropTypes.isRequired,\n  removeMembership: PropTypes.func.isRequired,\n  handleUpdateMembershipRole: PropTypes.func.isRequired,\n  membershipCount: PropTypes.number.isRequired\n};\nexport default MembershipSection;","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/chat/ChatChannelSettings/MembershipManager/MembershipSection.jsx"],"names":["h","PropTypes","Membership","MembershipSection","memberships","currentMembership","removeMembership","handleUpdateMembershipRole","membershipCount","length","map","activeMembership","propType","arrayOf","shape","name","string","isRequired","membership_id","number","user_id","role","image","username","status","func"],"mappings":"AAAA,SAASA,CAAT,QAAkB,QAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAMpB;AAAA,MALJC,WAKI,QALJA,WAKI;AAAA,MAJJC,iBAII,QAJJA,iBAII;AAAA,MAHJC,gBAGI,QAHJA,gBAGI;AAAA,MAFJC,0BAEI,QAFJA,0BAEI;AAAA,MADJC,eACI,QADJA,eACI;;AACJ,MAAI,CAACJ,WAAD,IAAgBA,WAAW,CAACK,MAAZ,KAAuB,CAA3C,EAA8C;AAC5C,WAAO;AAAG,MAAA,SAAS,EAAC;AAAb,uBAAP;AACD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGL,WAAW,CAACM,GAAZ,CAAgB,UAACC,gBAAD;AAAA,WACf,EAAC,UAAD;AACE,MAAA,UAAU,EAAEA,gBADd;AAEE,MAAA,cAAc,EAAC,QAFjB;AAGE,MAAA,qBAAqB,EAAE,iCAAM,CAAE,CAHjC;AAIE,MAAA,SAAS,EAAC,eAJZ;AAKE,MAAA,iBAAiB,EAAEN,iBALrB;AAME,MAAA,gBAAgB,EAAEC,gBANpB;AAOE,MAAA,0BAA0B,EAAEC,0BAP9B;AAQE,MAAA,gBAAgB,EAAEC,eAAe,GAAG;AARtC,MADe;AAAA,GAAhB,CADH,CADF;AAgBD,CA3BD;;AA6BAL,iBAAiB,CAACS,QAAlB,GAA6B;AAC3BR,EAAAA,WAAW,EAAEH,SAAS,CAACY,OAAV,CACXZ,SAAS,CAACa,KAAV,CAAgB;AACdC,IAAAA,IAAI,EAAEd,SAAS,CAACe,MAAV,CAAiBC,UADT;AAEdC,IAAAA,aAAa,EAAEjB,SAAS,CAACkB,MAAV,CAAiBF,UAFlB;AAGdG,IAAAA,OAAO,EAAEnB,SAAS,CAACkB,MAAV,CAAiBF,UAHZ;AAIdI,IAAAA,IAAI,EAAEpB,SAAS,CAACe,MAAV,CAAiBC,UAJT;AAKdK,IAAAA,KAAK,EAAErB,SAAS,CAACe,MAAV,CAAiBC,UALV;AAMdM,IAAAA,QAAQ,EAAEtB,SAAS,CAACe,MAAV,CAAiBC,UANb;AAOdO,IAAAA,MAAM,EAAEvB,SAAS,CAACe,MAAV,CAAiBC;AAPX,GAAhB,CADW,EAUXA,UAXyB;AAY3BZ,EAAAA,iBAAiB,EAAEJ,SAAS,CAACgB,UAZF;AAa3BX,EAAAA,gBAAgB,EAAEL,SAAS,CAACwB,IAAV,CAAeR,UAbN;AAc3BV,EAAAA,0BAA0B,EAAEN,SAAS,CAACwB,IAAV,CAAeR,UAdhB;AAe3BT,EAAAA,eAAe,EAAEP,SAAS,CAACkB,MAAV,CAAiBF;AAfP,CAA7B;AAkBA,eAAed,iBAAf","sourcesContent":["import { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport Membership from './Membership';\n\nconst MembershipSection = ({\n  memberships,\n  currentMembership,\n  removeMembership,\n  handleUpdateMembershipRole,\n  membershipCount,\n}) => {\n  if (!memberships || memberships.length === 0) {\n    return <p className=\"lh-base\">No membership</p>;\n  }\n\n  return (\n    <div className=\"membership-section\">\n      {memberships.map((activeMembership) => (\n        <Membership\n          membership={activeMembership}\n          membershipType=\"active\"\n          currentMembershipRole={() => {}}\n          className=\"active-member\"\n          currentMembership={currentMembership}\n          removeMembership={removeMembership}\n          handleUpdateMembershipRole={handleUpdateMembershipRole}\n          showActionButton={membershipCount > 1}\n        />\n      ))}\n    </div>\n  );\n};\n\nMembershipSection.propType = {\n  memberships: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      membership_id: PropTypes.number.isRequired,\n      user_id: PropTypes.number.isRequired,\n      role: PropTypes.string.isRequired,\n      image: PropTypes.string.isRequired,\n      username: PropTypes.string.isRequired,\n      status: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  currentMembership: PropTypes.isRequired,\n  removeMembership: PropTypes.func.isRequired,\n  handleUpdateMembershipRole: PropTypes.func.isRequired,\n  membershipCount: PropTypes.number.isRequired,\n};\n\nexport default MembershipSection;\n"]},"metadata":{},"sourceType":"module"}