{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { h } from 'preact';\nimport { useRef, useEffect, useState } from 'preact/hooks';\nimport PropTypes from 'prop-types';\nimport { chatDrawPalettes } from '../../utilities/Constants';\nimport { Button } from '@crayons';\n/**\n * Draw function is wrapped in this component\n *\n * @example\n * <Draw\n *  sendCanvasImage={sendCanvasImage}\n * />\n *\n *\n * @param {object} props\n * @param {function} props.sendCanvasImage\n */\n\nfunction Draw(_ref) {\n  var sendCanvasImage = _ref.sendCanvasImage;\n  var canvasRef = useRef(null);\n  var canvasWidth = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDrawing = _useState2[0],\n      setIsDrawing = _useState2[1];\n\n  var _useState3 = useState('#F58F8E'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      drawColor = _useState4[0],\n      setDrawColor = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      coordinates = _useState6[0],\n      setCoordinates = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sendButtonDisabled = _useState8[0],\n      setSendButtonDisabled = _useState8[1];\n\n  var prevCoordinates = usePrevious(coordinates);\n\n  var handleCanvasSend = function handleCanvasSend() {\n    var canvas = canvasRef.current;\n    canvas.toBlob(function (blob) {\n      sendCanvasImage(new File([blob], 'draw.png'));\n    });\n  };\n\n  var handleMouseDown = function handleMouseDown(e) {\n    setCoordinates({\n      x: e.offsetX,\n      y: e.offsetY\n    });\n    setIsDrawing(true);\n  };\n\n  var handleImageDrop = function handleImageDrop(e) {\n    e.preventDefault();\n\n    if (!canvasRef.current) {\n      return;\n    }\n\n    var canvas = canvasRef.current;\n    var context = canvas.getContext('2d');\n    canvas.classList.remove('opacity-25');\n    var files = e.dataTransfer.files;\n    var img = new Image();\n    img.src = URL.createObjectURL(files[0]);\n\n    img.onload = function () {\n      var scale = Math.min(canvas.width / img.width, canvas.height / img.height);\n      setSendButtonDisabled(false);\n      var x = canvas.width / 2 - img.width / 2 * scale;\n      var y = canvas.height / 2 - img.height / 2 * scale;\n      context.drawImage(img, x, y, img.width * scale, img.height * scale);\n    };\n  };\n\n  var handleClearCanvas = function handleClearCanvas() {\n    setSendButtonDisabled(true);\n\n    if (!canvasRef.current) {\n      return;\n    }\n\n    var context = canvasRef.current.getContext('2d');\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n\n  var handleDragHover = function handleDragHover(e) {\n    e.preventDefault();\n    canvasRef.current.classList.add('opacity-25');\n  };\n\n  var handleChangeColor = function handleChangeColor(e) {\n    setDrawColor(e.target.style.backgroundColor);\n  };\n\n  var handleDragExit = function handleDragExit(e) {\n    e.preventDefault();\n    canvasRef.current.classList.remove('opacity-25');\n    canvasRef.current.classList.add('opacity-100');\n  };\n\n  var handleMouseMove = function handleMouseMove(e) {\n    if (isDrawing) {\n      setSendButtonDisabled(false);\n      setCoordinates({\n        x: e.offsetX,\n        y: e.offsetY\n      });\n    }\n  };\n\n  var handleMouseUp = function handleMouseUp() {\n    setCoordinates({});\n    setIsDrawing(false);\n  };\n\n  useEffect(function () {\n    canvasRef.current.width = canvasWidth.current.clientWidth;\n  }, [canvasWidth]);\n  useEffect(function () {\n    if (!canvasRef.current) {\n      return;\n    }\n\n    var context = canvasRef.current.getContext('2d');\n\n    if (isDrawing) {\n      context.beginPath();\n      context.strokeStyle = drawColor;\n      context.lineWidth = 2;\n      context.moveTo(prevCoordinates.x, prevCoordinates.y);\n      context.lineTo(coordinates.x, coordinates.y);\n      context.stroke();\n      context.closePath();\n    }\n  }, [drawColor, isDrawing, coordinates, prevCoordinates]);\n  return h(\"div\", {\n    className: \"p-4 grid gap-2 crayons-card mb-4 connect-draw\"\n  }, h(\"div\", {\n    className: \"mb-1 draw-title\"\n  }, h(\"h2\", null, \"Connect Draw\"), h(\"div\", {\n    className: \"connect-draw__colors\"\n  }, chatDrawPalettes.map(function (color) {\n    return h(\"button\", {\n      className: \"connect-draw__color\",\n      onClick: handleChangeColor,\n      style: \"background-color: \".concat(color),\n      title: \"Change color to \".concat(color),\n      key: color\n    });\n  }))), h(\"div\", {\n    \"aria-hidden\": true,\n    className: \"connect-draw__draw-area\",\n    ref: canvasWidth,\n    onMouseUp: handleMouseUp\n  }, h(\"canvas\", {\n    className: \"connect-draw__draw\",\n    ref: canvasRef,\n    onMouseDown: handleMouseDown,\n    onMouseMove: handleMouseMove,\n    onDrop: handleImageDrop,\n    onDragOver: handleDragHover,\n    onDragExit: handleDragExit,\n    height: \"600\"\n  }), h(\"div\", {\n    className: \"connect-draw__actions\"\n  }, h(Button, {\n    onClick: handleClearCanvas,\n    title: \"Clear the canvas.\",\n    type: \"button\",\n    size: \"s\",\n    variant: \"secondary\"\n  }, \"Clear\"), h(Button, {\n    onClick: handleCanvasSend,\n    title: \"Send the canvas.\",\n    disabled: sendButtonDisabled\n  }, \"Send\"))));\n}\n\nfunction usePrevious(value) {\n  var ref = useRef();\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref.current;\n}\n\nDraw.propTypes = {\n  sendCanvasImage: PropTypes.func.isRequired\n};\nexport default Draw;","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/chat/draw/index.jsx"],"names":["h","useRef","useEffect","useState","PropTypes","chatDrawPalettes","Button","Draw","sendCanvasImage","canvasRef","canvasWidth","isDrawing","setIsDrawing","drawColor","setDrawColor","coordinates","setCoordinates","sendButtonDisabled","setSendButtonDisabled","prevCoordinates","usePrevious","handleCanvasSend","canvas","current","toBlob","blob","File","handleMouseDown","e","x","offsetX","y","offsetY","handleImageDrop","preventDefault","context","getContext","classList","remove","files","dataTransfer","img","Image","src","URL","createObjectURL","onload","scale","Math","min","width","height","drawImage","handleClearCanvas","clearRect","handleDragHover","add","handleChangeColor","target","style","backgroundColor","handleDragExit","handleMouseMove","handleMouseUp","clientWidth","beginPath","strokeStyle","lineWidth","moveTo","lineTo","stroke","closePath","map","color","value","ref","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import { h } from 'preact';\nimport { useRef, useEffect, useState } from 'preact/hooks';\nimport PropTypes from 'prop-types';\nimport { chatDrawPalettes } from '../../utilities/Constants';\nimport { Button } from '@crayons';\n\n/**\n * Draw function is wrapped in this component\n *\n * @example\n * <Draw\n *  sendCanvasImage={sendCanvasImage}\n * />\n *\n *\n * @param {object} props\n * @param {function} props.sendCanvasImage\n */\nfunction Draw({ sendCanvasImage }) {\n  const canvasRef = useRef(null);\n  const canvasWidth = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [drawColor, setDrawColor] = useState('#F58F8E');\n  const [coordinates, setCoordinates] = useState({});\n  const [sendButtonDisabled, setSendButtonDisabled] = useState(true);\n  const prevCoordinates = usePrevious(coordinates);\n\n  const handleCanvasSend = () => {\n    const canvas = canvasRef.current;\n    canvas.toBlob((blob) => {\n      sendCanvasImage(new File([blob], 'draw.png'));\n    });\n  };\n\n  const handleMouseDown = (e) => {\n    setCoordinates({ x: e.offsetX, y: e.offsetY });\n    setIsDrawing(true);\n  };\n\n  const handleImageDrop = (e) => {\n    e.preventDefault();\n    if (!canvasRef.current) {\n      return;\n    }\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    canvas.classList.remove('opacity-25');\n\n    const { files } = e.dataTransfer;\n    const img = new Image();\n    img.src = URL.createObjectURL(files[0]);\n\n    img.onload = () => {\n      const scale = Math.min(\n        canvas.width / img.width,\n        canvas.height / img.height,\n      );\n      setSendButtonDisabled(false);\n      const x = canvas.width / 2 - (img.width / 2) * scale;\n      const y = canvas.height / 2 - (img.height / 2) * scale;\n      context.drawImage(img, x, y, img.width * scale, img.height * scale);\n    };\n  };\n\n  const handleClearCanvas = () => {\n    setSendButtonDisabled(true);\n    if (!canvasRef.current) {\n      return;\n    }\n    const context = canvasRef.current.getContext('2d');\n    context.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n\n  const handleDragHover = (e) => {\n    e.preventDefault();\n    canvasRef.current.classList.add('opacity-25');\n  };\n\n  const handleChangeColor = (e) => {\n    setDrawColor(e.target.style.backgroundColor);\n  };\n\n  const handleDragExit = (e) => {\n    e.preventDefault();\n    canvasRef.current.classList.remove('opacity-25');\n    canvasRef.current.classList.add('opacity-100');\n  };\n\n  const handleMouseMove = (e) => {\n    if (isDrawing) {\n      setSendButtonDisabled(false);\n      setCoordinates({ x: e.offsetX, y: e.offsetY });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setCoordinates({});\n    setIsDrawing(false);\n  };\n\n  useEffect(() => {\n    canvasRef.current.width = canvasWidth.current.clientWidth;\n  }, [canvasWidth]);\n\n  useEffect(() => {\n    if (!canvasRef.current) {\n      return;\n    }\n    const context = canvasRef.current.getContext('2d');\n\n    if (isDrawing) {\n      context.beginPath();\n      context.strokeStyle = drawColor;\n      context.lineWidth = 2;\n      context.moveTo(prevCoordinates.x, prevCoordinates.y);\n      context.lineTo(coordinates.x, coordinates.y);\n      context.stroke();\n      context.closePath();\n    }\n  }, [drawColor, isDrawing, coordinates, prevCoordinates]);\n\n  return (\n    <div className=\"p-4 grid gap-2 crayons-card mb-4 connect-draw\">\n      <div className=\"mb-1 draw-title\">\n        <h2>Connect Draw</h2>\n        <div className=\"connect-draw__colors\">\n          {chatDrawPalettes.map((color) => (\n            <button\n              className=\"connect-draw__color\"\n              onClick={handleChangeColor}\n              style={`background-color: ${color}`}\n              title={`Change color to ${color}`}\n              key={color}\n            />\n          ))}\n        </div>\n      </div>\n      <div\n        aria-hidden\n        className=\"connect-draw__draw-area\"\n        ref={canvasWidth}\n        onMouseUp={handleMouseUp}\n      >\n        <canvas\n          className=\"connect-draw__draw\"\n          ref={canvasRef}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onDrop={handleImageDrop}\n          onDragOver={handleDragHover}\n          onDragExit={handleDragExit}\n          height=\"600\"\n        />\n        <div className=\"connect-draw__actions\">\n          <Button\n            onClick={handleClearCanvas}\n            title=\"Clear the canvas.\"\n            type=\"button\"\n            size=\"s\"\n            variant=\"secondary\"\n          >\n            Clear\n          </Button>\n          <Button\n            onClick={handleCanvasSend}\n            title=\"Send the canvas.\"\n            disabled={sendButtonDisabled}\n          >\n            Send\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\nDraw.propTypes = {\n  sendCanvasImage: PropTypes.func.isRequired,\n};\n\nexport default Draw;\n"]},"metadata":{},"sourceType":"module"}