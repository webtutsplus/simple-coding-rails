{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar loadActionsPanel = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* () {\n    var _yield$import = yield import('../actionsPanel/actionsPanel'),\n        initializeActionsPanel = _yield$import.initializeActionsPanel;\n\n    initializeActionsPanel();\n  });\n\n  return function loadActionsPanel() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nloadActionsPanel();","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/packs/actionsPanel.js"],"names":["loadActionsPanel","initializeActionsPanel"],"mappings":";;;;AAAA,IAAMA,gBAAgB;AAAA,+BAAG,aAAY;AAAA,8BACM,OACvC,8BADuC,CADN;AAAA,QAC3BC,sBAD2B,iBAC3BA,sBAD2B;;AAKnCA,IAAAA,sBAAsB;AACvB,GANqB;;AAAA,kBAAhBD,gBAAgB;AAAA;AAAA;AAAA,GAAtB;;AAQAA,gBAAgB","sourcesContent":["const loadActionsPanel = async () => {\n  const { initializeActionsPanel } = await import(\n    '../actionsPanel/actionsPanel'\n  );\n\n  initializeActionsPanel();\n};\n\nloadActionsPanel();\n"]},"metadata":{},"sourceType":"module"}