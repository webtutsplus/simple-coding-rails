{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport MembershipSection from './MembershipSection';\nimport InvitationLinkManager from './InvitationLinkManager';\n\nvar ManageActiveMembership = /*#__PURE__*/function (_Component) {\n  _inherits(ManageActiveMembership, _Component);\n\n  var _super = _createSuper(ManageActiveMembership);\n\n  function ManageActiveMembership(props) {\n    var _this;\n\n    _classCallCheck(this, ManageActiveMembership);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"searchTheMembershipUser\", function (e) {\n      var _e$target, _e$target$value;\n\n      var query = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : (_e$target$value = _e$target.value) === null || _e$target$value === void 0 ? void 0 : _e$target$value.toLowerCase();\n\n      _this.setState(function (prevState) {\n        var filteredActiveMemberships = prevState.activeMemberships.filter(function (activeMembership) {\n          var value = activeMembership.name.toLowerCase();\n          return value.includes(query);\n        });\n        return {\n          searchMembers: query,\n          listAllMemberShips: filteredActiveMemberships\n        };\n      });\n    });\n\n    _this.state = {\n      activeMemberships: props.activeMemberships,\n      searchMembers: null,\n      listAllMemberShips: props.activeMemberships,\n      currentMembership: props.currentMembership,\n      invitationLink: props.invitationLink,\n      removeMembership: props.removeMembership,\n      handleUpdateMembershipRole: props.handleUpdateMembershipRole\n    };\n    return _this;\n  }\n\n  _createClass(ManageActiveMembership, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      var _this$props = this.props,\n          activeMemberships = _this$props.activeMemberships,\n          currentMembership = _this$props.currentMembership,\n          removeMembership = _this$props.removeMembership,\n          invitationLink = _this$props.invitationLink;\n      this.setState({\n        listAllMemberShips: activeMemberships,\n        currentMembership: currentMembership,\n        invitationLink: invitationLink,\n        removeMembership: removeMembership,\n        activeMemberships: activeMemberships,\n        searchMembers: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          searchMembers = _this$state.searchMembers,\n          listAllMemberShips = _this$state.listAllMemberShips,\n          currentMembership = _this$state.currentMembership,\n          invitationLink = _this$state.invitationLink,\n          removeMembership = _this$state.removeMembership,\n          handleUpdateMembershipRole = _this$state.handleUpdateMembershipRole,\n          activeMemberships = _this$state.activeMemberships;\n      var membershipCount = activeMemberships.length;\n      return h(\"div\", {\n        className: \"pt-3\"\n      }, h(\"div\", {\n        className: \"p-4 grid gap-2 crayons-card my-4 mx-auto membership-manager\"\n      }, h(\"h2\", {\n        className: \"text-title\"\n      }, \"Chat Channel Membership manager\")), h(\"div\", {\n        className: \"p-4 grid gap-2 crayons-card my-4\"\n      }, h(\"input\", {\n        type: \"text\",\n        className: \"crayons-textfield\",\n        placeholder: \"Search Member...\",\n        value: searchMembers,\n        name: \"search-members\",\n        onKeyUp: this.searchTheMembershipUser.bind(this),\n        \"aria-label\": \"search memberships\"\n      }), h(\"div\", {\n        \"data-spy\": \"scroll\",\n        \"data-offset\": \"5\",\n        className: \"chat_channel-member-list\"\n      }, h(MembershipSection, {\n        memberships: listAllMemberShips,\n        currentMembership: currentMembership,\n        removeMembership: removeMembership,\n        handleUpdateMembershipRole: handleUpdateMembershipRole,\n        membershipCount: membershipCount\n      }))), h(InvitationLinkManager, {\n        invitationLink: invitationLink,\n        currentMembership: currentMembership,\n        className: \"inviation-link-section\"\n      }));\n    }\n  }]);\n\n  return ManageActiveMembership;\n}(Component);\n\n_defineProperty(ManageActiveMembership, \"propTypes\", {\n  activeMemberships: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    membership_id: PropTypes.number.isRequired,\n    user_id: PropTypes.number.isRequired,\n    role: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    status: PropTypes.string.isRequired\n  })).isRequired,\n  currentMembership: PropTypes.isRequired,\n  invitationLink: PropTypes.string.isRequired,\n  removeMembership: PropTypes.func.isRequired,\n  handleUpdateMembershipRole: PropTypes.func.isRequired\n});\n\nexport { ManageActiveMembership as default };","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/chat/ChatChannelSettings/MembershipManager/ManageActiveMembership.jsx"],"names":["h","Component","PropTypes","MembershipSection","InvitationLinkManager","ManageActiveMembership","props","e","query","target","value","toLowerCase","setState","prevState","filteredActiveMemberships","activeMemberships","filter","activeMembership","name","includes","searchMembers","listAllMemberShips","state","currentMembership","invitationLink","removeMembership","handleUpdateMembershipRole","membershipCount","length","searchTheMembershipUser","bind","arrayOf","shape","string","isRequired","membership_id","number","user_id","role","image","username","status","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,CAAT,EAAYC,SAAZ,QAA6B,QAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;IAEqBC,sB;;;;;AAmBnB,kCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,8EA8BO,UAACC,CAAD,EAAO;AAAA;;AAC/B,UAAMC,KAAK,gBAAGD,CAAC,CAACE,MAAL,iEAAG,UAAUC,KAAb,oDAAG,gBAAiBC,WAAjB,EAAd;;AAEA,YAAKC,QAAL,CAAc,UAACC,SAAD,EAAe;AAC3B,YAAMC,yBAAyB,GAAGD,SAAS,CAACE,iBAAV,CAA4BC,MAA5B,CAChC,UAACC,gBAAD,EAAsB;AACpB,cAAMP,KAAK,GAAGO,gBAAgB,CAACC,IAAjB,CAAsBP,WAAtB,EAAd;AACA,iBAAOD,KAAK,CAACS,QAAN,CAAeX,KAAf,CAAP;AACD,SAJ+B,CAAlC;AAOA,eAAO;AACLY,UAAAA,aAAa,EAAEZ,KADV;AAELa,UAAAA,kBAAkB,EAAEP;AAFf,SAAP;AAID,OAZD;AAaD,KA9CkB;;AAEjB,UAAKQ,KAAL,GAAa;AACXP,MAAAA,iBAAiB,EAAET,KAAK,CAACS,iBADd;AAEXK,MAAAA,aAAa,EAAE,IAFJ;AAGXC,MAAAA,kBAAkB,EAAEf,KAAK,CAACS,iBAHf;AAIXQ,MAAAA,iBAAiB,EAAEjB,KAAK,CAACiB,iBAJd;AAKXC,MAAAA,cAAc,EAAElB,KAAK,CAACkB,cALX;AAMXC,MAAAA,gBAAgB,EAAEnB,KAAK,CAACmB,gBANb;AAOXC,MAAAA,0BAA0B,EAAEpB,KAAK,CAACoB;AAPvB,KAAb;AAFiB;AAWlB;;;;gDAE2B;AAAA,wBAMtB,KAAKpB,KANiB;AAAA,UAExBS,iBAFwB,eAExBA,iBAFwB;AAAA,UAGxBQ,iBAHwB,eAGxBA,iBAHwB;AAAA,UAIxBE,gBAJwB,eAIxBA,gBAJwB;AAAA,UAKxBD,cALwB,eAKxBA,cALwB;AAO1B,WAAKZ,QAAL,CAAc;AACZS,QAAAA,kBAAkB,EAAEN,iBADR;AAEZQ,QAAAA,iBAAiB,EAAjBA,iBAFY;AAGZC,QAAAA,cAAc,EAAdA,cAHY;AAIZC,QAAAA,gBAAgB,EAAhBA,gBAJY;AAKZV,QAAAA,iBAAiB,EAAjBA,iBALY;AAMZK,QAAAA,aAAa,EAAE;AANH,OAAd;AAQD;;;6BAoBQ;AAAA,wBASH,KAAKE,KATF;AAAA,UAELF,aAFK,eAELA,aAFK;AAAA,UAGLC,kBAHK,eAGLA,kBAHK;AAAA,UAILE,iBAJK,eAILA,iBAJK;AAAA,UAKLC,cALK,eAKLA,cALK;AAAA,UAMLC,gBANK,eAMLA,gBANK;AAAA,UAOLC,0BAPK,eAOLA,0BAPK;AAAA,UAQLX,iBARK,eAQLA,iBARK;AAWP,UAAMY,eAAe,GAAGZ,iBAAiB,CAACa,MAA1C;AACA,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,2CADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,mBAFZ;AAGE,QAAA,WAAW,EAAC,kBAHd;AAIE,QAAA,KAAK,EAAER,aAJT;AAKE,QAAA,IAAI,EAAC,gBALP;AAME,QAAA,OAAO,EAAE,KAAKS,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CANX;AAOE,sBAAW;AAPb,QADF,EAUE;AACE,oBAAS,QADX;AAEE,uBAAY,GAFd;AAGE,QAAA,SAAS,EAAC;AAHZ,SAKE,EAAC,iBAAD;AACE,QAAA,WAAW,EAAET,kBADf;AAEE,QAAA,iBAAiB,EAAEE,iBAFrB;AAGE,QAAA,gBAAgB,EAAEE,gBAHpB;AAIE,QAAA,0BAA0B,EAAEC,0BAJ9B;AAKE,QAAA,eAAe,EAAEC;AALnB,QALF,CAVF,CAJF,EA4BE,EAAC,qBAAD;AACE,QAAA,cAAc,EAAEH,cADlB;AAEE,QAAA,iBAAiB,EAAED,iBAFrB;AAGE,QAAA,SAAS,EAAC;AAHZ,QA5BF,CADF;AAoCD;;;;EAnHiDtB,S;;gBAA/BI,sB,eACA;AACjBU,EAAAA,iBAAiB,EAAEb,SAAS,CAAC6B,OAAV,CACjB7B,SAAS,CAAC8B,KAAV,CAAgB;AACdd,IAAAA,IAAI,EAAEhB,SAAS,CAAC+B,MAAV,CAAiBC,UADT;AAEdC,IAAAA,aAAa,EAAEjC,SAAS,CAACkC,MAAV,CAAiBF,UAFlB;AAGdG,IAAAA,OAAO,EAAEnC,SAAS,CAACkC,MAAV,CAAiBF,UAHZ;AAIdI,IAAAA,IAAI,EAAEpC,SAAS,CAAC+B,MAAV,CAAiBC,UAJT;AAKdK,IAAAA,KAAK,EAAErC,SAAS,CAAC+B,MAAV,CAAiBC,UALV;AAMdM,IAAAA,QAAQ,EAAEtC,SAAS,CAAC+B,MAAV,CAAiBC,UANb;AAOdO,IAAAA,MAAM,EAAEvC,SAAS,CAAC+B,MAAV,CAAiBC;AAPX,GAAhB,CADiB,EAUjBA,UAXe;AAYjBX,EAAAA,iBAAiB,EAAErB,SAAS,CAACgC,UAZZ;AAajBV,EAAAA,cAAc,EAAEtB,SAAS,CAAC+B,MAAV,CAAiBC,UAbhB;AAcjBT,EAAAA,gBAAgB,EAAEvB,SAAS,CAACwC,IAAV,CAAeR,UAdhB;AAejBR,EAAAA,0BAA0B,EAAExB,SAAS,CAACwC,IAAV,CAAeR;AAf1B,C;;SADA7B,sB","sourcesContent":["import { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\n\nimport MembershipSection from './MembershipSection';\nimport InvitationLinkManager from './InvitationLinkManager';\n\nexport default class ManageActiveMembership extends Component {\n  static propTypes = {\n    activeMemberships: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        membership_id: PropTypes.number.isRequired,\n        user_id: PropTypes.number.isRequired,\n        role: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        username: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    currentMembership: PropTypes.isRequired,\n    invitationLink: PropTypes.string.isRequired,\n    removeMembership: PropTypes.func.isRequired,\n    handleUpdateMembershipRole: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeMemberships: props.activeMemberships,\n      searchMembers: null,\n      listAllMemberShips: props.activeMemberships,\n      currentMembership: props.currentMembership,\n      invitationLink: props.invitationLink,\n      removeMembership: props.removeMembership,\n      handleUpdateMembershipRole: props.handleUpdateMembershipRole,\n    };\n  }\n\n  componentWillReceiveProps() {\n    const {\n      activeMemberships,\n      currentMembership,\n      removeMembership,\n      invitationLink,\n    } = this.props;\n    this.setState({\n      listAllMemberShips: activeMemberships,\n      currentMembership,\n      invitationLink,\n      removeMembership,\n      activeMemberships,\n      searchMembers: null,\n    });\n  }\n\n  searchTheMembershipUser = (e) => {\n    const query = e.target?.value?.toLowerCase();\n\n    this.setState((prevState) => {\n      const filteredActiveMemberships = prevState.activeMemberships.filter(\n        (activeMembership) => {\n          const value = activeMembership.name.toLowerCase();\n          return value.includes(query);\n        },\n      );\n\n      return {\n        searchMembers: query,\n        listAllMemberShips: filteredActiveMemberships,\n      };\n    });\n  };\n\n  render() {\n    const {\n      searchMembers,\n      listAllMemberShips,\n      currentMembership,\n      invitationLink,\n      removeMembership,\n      handleUpdateMembershipRole,\n      activeMemberships,\n    } = this.state;\n\n    const membershipCount = activeMemberships.length;\n    return (\n      <div className=\"pt-3\">\n        <div className=\"p-4 grid gap-2 crayons-card my-4 mx-auto membership-manager\">\n          <h2 className=\"text-title\">Chat Channel Membership manager</h2>\n        </div>\n        <div className=\"p-4 grid gap-2 crayons-card my-4\">\n          <input\n            type=\"text\"\n            className=\"crayons-textfield\"\n            placeholder=\"Search Member...\"\n            value={searchMembers}\n            name=\"search-members\"\n            onKeyUp={this.searchTheMembershipUser.bind(this)}\n            aria-label=\"search memberships\"\n          />\n          <div\n            data-spy=\"scroll\"\n            data-offset=\"5\"\n            className=\"chat_channel-member-list\"\n          >\n            <MembershipSection\n              memberships={listAllMemberShips}\n              currentMembership={currentMembership}\n              removeMembership={removeMembership}\n              handleUpdateMembershipRole={handleUpdateMembershipRole}\n              membershipCount={membershipCount}\n            />\n          </div>\n        </div>\n        <InvitationLinkManager\n          invitationLink={invitationLink}\n          currentMembership={currentMembership}\n          className=\"inviation-link-section\"\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}