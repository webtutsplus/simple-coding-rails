{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n  eslint-disable\n  consistent-return, no-unused-vars, react/destructuring-assignment,\n  react/no-access-state-in-setstate, react/button-has-type\n*/\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { setupPusher } from '../utilities/connect';\nimport notifyUser from '../utilities/connect/newMessageNotify';\nimport debounceAction from '../utilities/debounceAction';\nimport { addSnackbarItem } from '../Snackbar';\nimport { processImageUpload } from '../article-form/actions';\nimport { conductModeration, getAllMessages, sendMessage, sendOpen, getChannels, getUnopenedChannelIds, getContent, deleteMessage, editMessage } from './actions/actions';\nimport CreateChatModal from './components/CreateChatModal';\nimport { sendChannelRequest, rejectJoiningRequest, acceptJoiningRequest, getChannelRequestInfo } from './actions/requestActions';\nimport { hideMessages, scrollToBottom, setupObserver, getCurrentUser, channelSorter } from './util';\nimport Alert from './alert';\nimport Channels from './channels';\nimport Compose from './compose';\nimport Message from './message';\nimport ActionMessage from './actionMessage';\nimport Content from './content';\nimport { VideoContent } from './videoContent';\nimport { DragAndDropZone } from '@utilities/dragAndDrop';\nimport { dragAndUpload } from '@utilities/dragAndUpload';\nimport { Button } from '@crayons';\nvar NARROW_WIDTH_LIMIT = 767;\nvar WIDE_WIDTH_LIMIT = 1600;\n\nvar Chat = /*#__PURE__*/function (_Component) {\n  _inherits(Chat, _Component);\n\n  var _super = _createSuper(Chat);\n\n  function Chat(props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestCount\", function () {\n      getChannelRequestInfo().then(function (response) {\n        var result = response.result;\n        var user_joining_requests = result.user_joining_requests,\n            channel_joining_memberships = result.channel_joining_memberships;\n        var totalRequest = (user_joining_requests === null || user_joining_requests === void 0 ? void 0 : user_joining_requests.length) + (channel_joining_memberships === null || channel_joining_memberships === void 0 ? void 0 : channel_joining_memberships.length);\n\n        _this.setState({\n          userRequestCount: totalRequest\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"filterForActiveChannel\", function (channels, id, currentUserId) {\n      return channels.filter(function (channel) {\n        return channel.chat_channel_id === parseInt(id, 10) && channel.viewable_by === parseInt(currentUserId, 10);\n      })[0];\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"subscribePusher\", function (channelName) {\n      var subscribedPusherChannels = _this.state.subscribedPusherChannels;\n      var pusherKey = _this.props.pusherKey;\n\n      if (!subscribedPusherChannels.includes(channelName)) {\n        setupPusher(pusherKey, {\n          channelId: channelName,\n          messageCreated: _this.receiveNewMessage,\n          messageDeleted: _this.removeMessage,\n          messageEdited: _this.updateMessage,\n          channelCleared: _this.clearChannel,\n          redactUserMessages: _this.redactUserMessages,\n          channelError: _this.channelError,\n          mentioned: _this.mentioned,\n          messageOpened: _this.messageOpened\n        });\n        var subscriptions = subscribedPusherChannels;\n        subscriptions.push(channelName);\n\n        _this.setState({\n          subscribedPusherChannels: subscriptions\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mentioned\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"messageOpened\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"loadChannels\", function (channels, query) {\n      var _this$state = _this.state,\n          activeChannelId = _this$state.activeChannelId,\n          appDomain = _this$state.appDomain;\n      var activeChannel = _this.state.activeChannel || channels.filter(function (channel) {\n        return channel.chat_channel_id === activeChannelId;\n      })[0];\n\n      if (activeChannelId && query.length === 0) {\n        _this.setState({\n          chatChannels: channels,\n          scrolled: false,\n          channelsLoaded: true,\n          channelPaginationNum: 0,\n          filterQuery: '',\n          activeChannel: activeChannel || _this.filterForActiveChannel(channels, activeChannelId)\n        });\n\n        _this.setupChannel(activeChannelId, activeChannel);\n      } else if (activeChannelId) {\n        _this.setState({\n          scrolled: false,\n          chatChannels: channels,\n          channelsLoaded: true,\n          channelPaginationNum: 0,\n          filterQuery: query,\n          activeChannel: activeChannel || _this.filterForActiveChannel(channels, activeChannelId)\n        });\n\n        _this.setupChannel(activeChannelId, activeChannel);\n      } else if (channels.length > 0) {\n        _this.setState({\n          chatChannels: channels,\n          channelsLoaded: true,\n          channelPaginationNum: 0,\n          filterQuery: query || '',\n          scrolled: false\n        });\n\n        _this.triggerSwitchChannel(channels[0].chat_channel_id, channels[0].channel_modified_slug, channels);\n\n        _this.setupChannels(channels);\n      } else {\n        _this.setState({\n          channelsLoaded: true\n        });\n      }\n\n      _this.subscribeChannelsToPusher(channels.filter(_this.channelTypeFilterFn('open')), function (channel) {\n        return \"open-channel--\".concat(appDomain, \"-\").concat(channel.chat_channel_id);\n      });\n\n      _this.subscribeChannelsToPusher(channels.filter(_this.channelTypeFilterFn('invite_only')), function (channel) {\n        return \"private-channel--\".concat(appDomain, \"-\").concat(channel.chat_channel_id);\n      });\n\n      var chatChannelsList = document.getElementById('chatchannels__channelslist');\n\n      if (chatChannelsList) {\n        chatChannelsList.scrollTop = 0;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"markUnopenedChannelIds\", function (ids) {\n      _this.setState({\n        unopenedChannelIds: ids\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"subscribeChannelsToPusher\", function (channels, channelNameFn) {\n      channels.forEach(function (channel) {\n        _this.subscribePusher(channelNameFn(channel));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"channelTypeFilterFn\", function (type) {\n      return function (channel) {\n        return channel.channel_type === type;\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setupChannels\", function (channels) {\n      var activeChannel = _this.state.activeChannel;\n      channels.forEach(function (channel, index) {\n        if (index < 3) {\n          _this.setupChannel(channel.chat_channel_id, activeChannel);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loadPaginatedChannels\", function (channels) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          state = _assertThisInitialize.state;\n\n      var currentChannels = state.chatChannels;\n      var currentChannelIds = currentChannels.map(function (channel) {\n        return channel.id;\n      });\n      var newChannels = currentChannels;\n      channels.forEach(function (channel) {\n        if (!currentChannelIds.includes(channel.id)) {\n          newChannels.push(channel);\n        }\n      });\n\n      if (currentChannels.length === newChannels.length && state.channelPaginationNum > 3) {\n        return;\n      }\n\n      _this.setState({\n        chatChannels: newChannels,\n        fetchingPaginatedChannels: false,\n        channelPaginationNum: state.channelPaginationNum + 1\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setupChannel\", function (channelId, activeChannel) {\n      var _this$state2 = _this.state,\n          messages = _this$state2.messages,\n          messageOffset = _this$state2.messageOffset,\n          appDomain = _this$state2.appDomain;\n\n      if (!messages[channelId] || messages[channelId].length === 0 || messages[channelId][0].reception_method === 'pushed') {\n        getAllMessages(channelId, messageOffset, _this.receiveAllMessages);\n      }\n\n      if (activeChannel && activeChannel.channel_type !== 'direct' && activeChannel.chat_channel_id === channelId) {\n        getContent(\"/chat_channels/\".concat(channelId, \"/channel_info\"), _this.setOpenChannelUsers, null);\n        if (activeChannel.channel_type === 'open') _this.subscribePusher(\"open-channel--\".concat(appDomain, \"-\").concat(channelId));\n      }\n\n      _this.subscribePusher(\"private-channel--\".concat(appDomain, \"-\").concat(channelId));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setOpenChannelUsers\", function (res) {\n      var _this$state3 = _this.state,\n          activeChannelId = _this$state3.activeChannelId,\n          activeChannel = _this$state3.activeChannel;\n\n      Object.filter = function (obj, predicate) {\n        return Object.fromEntries(Object.entries(obj).filter(predicate));\n      };\n\n      var leftUser = Object.filter(res.channel_users, function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 1),\n            username = _ref2[0];\n\n        return username !== window.currentUser.username;\n      });\n\n      if (activeChannel && activeChannel.channel_type === 'open') {\n        _this.setState({\n          channelUsers: _defineProperty({}, activeChannelId, leftUser)\n        });\n      } else {\n        _this.setState({\n          channelUsers: _defineProperty({}, activeChannelId, _objectSpread({\n            all: {\n              username: 'all',\n              name: 'To notify everyone here'\n            }\n          }, leftUser))\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"observerCallback\", function (entries) {\n      entries.forEach(function (entry) {\n        if (entry.isIntersecting && _this.state.scrolled === true) {\n          _this.setState({\n            scrolled: false,\n            showAlert: false\n          });\n        } else if (_this.state.scrolled === false) {\n          _this.setState({\n            scrolled: true,\n            rerenderIfUnchangedCheck: Math.random()\n          });\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"channelError\", function (_error) {\n      _this.setState({\n        subscribedPusherChannels: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"receiveAllMessages\", function (res) {\n      var chatChannelId = res.chatChannelId,\n          messages = res.messages;\n\n      _this.setState(function (prevState) {\n        return {\n          messages: _objectSpread(_objectSpread({}, prevState.messages), {}, _defineProperty({}, chatChannelId, messages)),\n          scrolled: false\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeMessage\", function (message) {\n      var activeChannelId = _this.state.activeChannelId;\n\n      _this.setState(function (prevState) {\n        return {\n          messages: _defineProperty({}, activeChannelId, _toConsumableArray(prevState.messages[activeChannelId].filter(function (oldmessage) {\n            return oldmessage.id !== message.id;\n          })))\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateMessage\", function (message) {\n      var activeChannelId = _this.state.activeChannelId;\n\n      if (message.chat_channel_id === activeChannelId) {\n        _this.setState(function (_ref3) {\n          var messages = _ref3.messages;\n          var newMessages = messages;\n          var foundIndex = messages[activeChannelId].findIndex(function (oldMessage) {\n            return oldMessage.id === message.id;\n          });\n          newMessages[activeChannelId][foundIndex] = message;\n          return {\n            messages: newMessages\n          };\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"receiveNewMessage\", function (message) {\n      var _this$state4 = _this.state,\n          messages = _this$state4.messages,\n          activeChannelId = _this$state4.activeChannelId,\n          scrolled = _this$state4.scrolled,\n          chatChannels = _this$state4.chatChannels,\n          currentUserId = _this$state4.currentUserId,\n          unopenedChannelIds = _this$state4.unopenedChannelIds;\n      var receivedChatChannelId = message.chat_channel_id;\n      var messageList = document.getElementById('messagelist');\n      var newMessages = [];\n      var nearBottom = messageList.scrollTop + messageList.offsetHeight + 400 > messageList.scrollHeight;\n\n      if (nearBottom) {\n        scrollToBottom();\n      } // If I'm not sender and tab is not active\n\n\n      if (message.user_id !== currentUserId && document.hidden) {\n        notifyUser();\n      }\n\n      if (message.temp_id && messages[receivedChatChannelId] && messages[receivedChatChannelId].findIndex(function (oldmessage) {\n        return oldmessage.temp_id === message.temp_id;\n      }) > -1) {\n        // Remove reduntant messages\n        return;\n      }\n\n      if (messages[receivedChatChannelId]) {\n        newMessages = messages[receivedChatChannelId].slice();\n        newMessages.push(message);\n\n        if (newMessages.length > 150) {\n          newMessages.shift();\n        }\n      } // Show alert if message received and you have scrolled up\n\n\n      var newShowAlert = activeChannelId === receivedChatChannelId ? {\n        showAlert: !nearBottom\n      } : {};\n      var newMessageChannelIndex = 0;\n      var newMessageChannel = null;\n      var newChannelsObj = chatChannels.map(function (channel, index) {\n        if (receivedChatChannelId === channel.chat_channel_id) {\n          newMessageChannelIndex = index;\n          newMessageChannel = channel;\n          return _objectSpread(_objectSpread({}, channel), {}, {\n            channel_last_message_at: new Date()\n          });\n        }\n\n        return channel;\n      });\n\n      if (newMessageChannelIndex > 0) {\n        newChannelsObj.splice(newMessageChannelIndex, 1);\n        newChannelsObj.unshift(newMessageChannel);\n      } // Mark messages read\n\n\n      if (receivedChatChannelId === activeChannelId) {\n        sendOpen(receivedChatChannelId, _this.handleChannelOpenSuccess, null);\n      } else {\n        var newUnopenedChannels = unopenedChannelIds;\n\n        if (!unopenedChannelIds.includes(receivedChatChannelId)) {\n          newUnopenedChannels.push(receivedChatChannelId);\n        }\n\n        _this.setState({\n          unopenedChannelIds: newUnopenedChannels\n        });\n      } // Updating the messages\n\n\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, newShowAlert), {}, {\n          chatChannels: newChannelsObj,\n          messages: _objectSpread(_objectSpread({}, prevState.messages), {}, _defineProperty({}, receivedChatChannelId, newMessages))\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"redactUserMessages\", function (res) {\n      var messages = _this.state.messages;\n      var newMessages = hideMessages(messages, res.userId);\n\n      _this.setState({\n        messages: newMessages\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearChannel\", function (res) {\n      _this.setState(function (prevState) {\n        return {\n          messages: _objectSpread(_objectSpread({}, prevState.messages), {}, _defineProperty({}, res.chat_channel_id, []))\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChannelScroll\", function (e) {\n      var _this$state5 = _this.state,\n          fetchingPaginatedChannels = _this$state5.fetchingPaginatedChannels,\n          chatChannels = _this$state5.chatChannels,\n          channelTypeFilter = _this$state5.channelTypeFilter,\n          filterQuery = _this$state5.filterQuery,\n          activeChannelId = _this$state5.activeChannelId,\n          channelPaginationNum = _this$state5.channelPaginationNum;\n\n      if (fetchingPaginatedChannels || chatChannels.length < 30) {\n        return;\n      }\n\n      var target = e.target;\n\n      if (target.scrollTop + target.offsetHeight + 1800 > target.scrollHeight) {\n        _this.setState({\n          fetchingPaginatedChannels: true\n        });\n\n        var filters = channelTypeFilter === 'all' ? {} : {\n          filters: \"channel_type:\".concat(channelTypeFilter)\n        };\n        var searchParams = {\n          query: filterQuery,\n          retrievalID: activeChannelId,\n          searchType: '',\n          paginationNumber: channelPaginationNum\n        };\n        getChannels(searchParams, filters, _this.loadPaginatedChannels);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDown\", function (e) {\n      var _this$state6 = _this.state,\n          showMemberlist = _this$state6.showMemberlist,\n          activeContent = _this$state6.activeContent,\n          activeChannelId = _this$state6.activeChannelId,\n          messages = _this$state6.messages,\n          currentUserId = _this$state6.currentUserId;\n      var enterPressed = e.keyCode === 13;\n      var leftPressed = e.keyCode === 37;\n      var rightPressed = e.keyCode === 39;\n      var escPressed = e.keyCode === 27;\n      var targetValue = e.target.value;\n      var messageIsEmpty = targetValue.length === 0;\n      var shiftPressed = e.shiftKey;\n      var upArrowPressed = e.keyCode === 38;\n      var deletePressed = e.keyCode === 46;\n\n      if (enterPressed) {\n        if (showMemberlist) {\n          e.preventDefault();\n          var selectedUser = document.getElementsByClassName('active__message__list')[0];\n\n          _this.addUserName({\n            target: selectedUser\n          });\n        } else if (messageIsEmpty) {\n          e.preventDefault();\n        } else if (!messageIsEmpty && !shiftPressed) {\n          e.preventDefault();\n\n          _this.handleMessageSubmit(e.target.value);\n        }\n      }\n\n      if (e.target.value.includes('@')) {\n        if (e.keyCode === 40 || e.keyCode === 38) {\n          e.preventDefault();\n        }\n      }\n\n      if (leftPressed && activeContent[activeChannelId] && e.target.value === '' && document.getElementById('activecontent-iframe')) {\n        e.preventDefault();\n\n        try {\n          e.target.value = document.getElementById('activecontent-iframe').contentWindow.location.href;\n        } catch (err) {\n          e.target.value = activeContent[activeChannelId].path;\n        }\n      }\n\n      if (rightPressed && !activeContent[activeChannelId] && e.target.value === '') {\n        e.preventDefault();\n        var richLinks = document.getElementsByClassName('chatchannels__richlink');\n\n        if (richLinks.length === 0) {\n          return;\n        }\n\n        _this.setActiveContentState(activeChannelId, {\n          type_of: 'loading-post'\n        });\n\n        _this.setActiveContent({\n          path: richLinks[richLinks.length - 1].href,\n          type_of: 'article'\n        });\n      }\n\n      if (escPressed && activeContent[activeChannelId]) {\n        _this.setActiveContentState(activeChannelId, null);\n\n        _this.setState({\n          fullscreenContent: null,\n          expanded: window.innerWidth > NARROW_WIDTH_LIMIT\n        });\n      }\n\n      if (messageIsEmpty) {\n        var messagesByCurrentUser = messages[activeChannelId].filter(function (message) {\n          return message.user_id === currentUserId;\n        });\n        var lastMessage = messagesByCurrentUser[messagesByCurrentUser.length - 1];\n\n        if (lastMessage) {\n          if (upArrowPressed) {\n            _this.triggerEditMessage(lastMessage.id);\n          } else if (deletePressed) {\n            _this.triggerDeleteMessage(lastMessage.id);\n          }\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyDownEdit\", function (e) {\n      var enterPressed = e.keyCode === 13;\n      var targetValue = e.target.value;\n      var messageIsEmpty = targetValue.length === 0;\n      var shiftPressed = e.shiftKey;\n\n      if (enterPressed) {\n        if (messageIsEmpty) {\n          e.preventDefault();\n        } else if (!messageIsEmpty && !shiftPressed) {\n          e.preventDefault();\n\n          _this.handleMessageSubmitEdit(e.target.value);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMessageSubmitEdit\", function (message) {\n      var _this$state7 = _this.state,\n          activeChannelId = _this$state7.activeChannelId,\n          activeEditMessage = _this$state7.activeEditMessage;\n      var editedMessage = {\n        activeChannelId: activeChannelId,\n        id: activeEditMessage.id,\n        message: message\n      };\n      editMessage(editedMessage, _this.handleSuccess, _this.handleFailure);\n\n      _this.handleEditMessageClose();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMessageSubmit\", function (message) {\n      var activeChannelId = _this.state.activeChannelId;\n      scrollToBottom(); // should check if user has the privilege\n\n      if (message.startsWith('/code')) {\n        _this.setActiveContentState(activeChannelId, {\n          type_of: 'code_editor'\n        });\n      } else if (message.startsWith('/call')) {\n        var messageObject = {\n          activeChannelId: activeChannelId,\n          message: '/call',\n          mentionedUsersId: _this.getMentionedUsers(message)\n        };\n\n        _this.setState({\n          videoPath: \"/video_chats/\".concat(activeChannelId)\n        });\n\n        sendMessage(messageObject, _this.handleSuccess, _this.handleFailure);\n      } else if (message.startsWith('/play ')) {\n        var _messageObject = {\n          activeChannelId: activeChannelId,\n          message: message,\n          mentionedUsersId: _this.getMentionedUsers(message)\n        };\n        sendMessage(_messageObject, _this.handleSuccess, _this.handleFailure);\n      } else if (message.startsWith('/new')) {\n        _this.setActiveContentState(activeChannelId, {\n          type_of: 'loading-post'\n        });\n\n        _this.setActiveContent({\n          path: '/new',\n          type_of: 'article'\n        });\n      } else if (message.startsWith('/search')) {\n        _this.setActiveContentState(activeChannelId, {\n          type_of: 'loading-post'\n        });\n\n        _this.setActiveContent({\n          path: \"/search?q=\".concat(message.replace('/search ', '')),\n          type_of: 'article'\n        });\n      } else if (message.startsWith('/s ')) {\n        _this.setActiveContentState(activeChannelId, {\n          type_of: 'loading-post'\n        });\n\n        _this.setActiveContent({\n          path: \"/search?q=\".concat(message.replace('/s ', '')),\n          type_of: 'article'\n        });\n      } else if (message.startsWith('/ban ') || message.startsWith('/unban ')) {\n        conductModeration(activeChannelId, message, _this.handleSuccess, _this.handleFailure);\n      } else if (message.startsWith('/draw')) {\n        _this.setActiveContent({\n          sendCanvasImage: _this.sendCanvasImage,\n          type_of: 'draw'\n        });\n      } else if (message.startsWith('/')) {\n        _this.setActiveContentState(activeChannelId, {\n          type_of: 'loading-post'\n        });\n\n        _this.setActiveContent({\n          path: message,\n          type_of: 'article'\n        });\n      } else if (message.startsWith('/github')) {\n        var args = message.split('/github ')[1].trim();\n\n        _this.setActiveContentState(activeChannelId, {\n          type_of: 'github',\n          args: args\n        });\n      } else {\n        var _messageObject2 = {\n          activeChannelId: activeChannelId,\n          message: message,\n          mentionedUsersId: _this.getMentionedUsers(message)\n        };\n\n        _this.setState({\n          scrolled: false,\n          showAlert: false\n        });\n\n        sendMessage(_messageObject2, _this.handleSuccess, _this.handleFailure);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideChannelList\", function () {\n      var chatContainer = document.getElementsByClassName('chat__activechat')[0];\n      chatContainer.classList.remove('chat__activechat--hidden');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSwitchChannel\", function (e) {\n      e.preventDefault();\n      var target = e.target;\n\n      _this.hideChannelList();\n\n      if (!target.dataset.channelId) {\n        target = target.parentElement;\n      }\n\n      _this.triggerSwitchChannel(parseInt(target.dataset.channelId, 10), target.dataset.channelSlug);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerSwitchChannel\", function (id, slug, channels) {\n      var _this$state8 = _this.state,\n          chatChannels = _this$state8.chatChannels,\n          isMobileDevice = _this$state8.isMobileDevice,\n          unopenedChannelIds = _this$state8.unopenedChannelIds,\n          activeChannelId = _this$state8.activeChannelId,\n          currentUserId = _this$state8.currentUserId;\n      var channelList = channels || chatChannels;\n      var newUnopenedChannelIds = unopenedChannelIds;\n      var index = newUnopenedChannelIds.indexOf(id);\n\n      if (index > -1) {\n        newUnopenedChannelIds.splice(index, 1);\n      }\n\n      var updatedActiveChannel = _this.filterForActiveChannel(channelList, id, currentUserId);\n\n      _this.setState({\n        activeChannel: updatedActiveChannel,\n        activeChannelId: parseInt(id, 10),\n        scrolled: false,\n        showAlert: false,\n        allMessagesLoaded: false,\n        showMemberlist: false,\n        unopenedChannelIds: unopenedChannelIds.filter(function (unopenedId) {\n          return unopenedId !== id;\n        })\n      });\n\n      _this.setupChannel(id, updatedActiveChannel);\n\n      var params = new URLSearchParams(window.location.search);\n\n      if (params.get('ref') === 'group_invite') {\n        _this.setActiveContentState(activeChannelId, {\n          type_of: 'loading-post'\n        });\n\n        _this.setActiveContent({\n          path: '/chat_channel_memberships',\n          type_of: 'article'\n        });\n      }\n\n      window.history.replaceState(null, null, \"/connect/\".concat(slug));\n\n      if (!isMobileDevice) {\n        document.getElementById('messageform').focus();\n      }\n\n      if (window.ga && ga.create) {\n        ga('send', 'pageview', window.location.pathname + window.location.search);\n      }\n\n      sendOpen(id, _this.handleChannelOpenSuccess, null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmitOnClick\", function (e) {\n      e.preventDefault();\n      var message = document.getElementById('messageform').value;\n\n      if (message.length > 0) {\n        _this.handleMessageSubmit(message);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmitOnClickEdit\", function (e) {\n      e.preventDefault();\n      var message = document.getElementById('messageform').value;\n\n      if (message.length > 0) {\n        _this.handleMessageSubmitEdit(message);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerDeleteMessage\", function (messageId) {\n      _this.setState({\n        messageDeleteId: messageId\n      });\n\n      _this.setState({\n        showDeleteModal: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerEditMessage\", function (messageId) {\n      var _this$state9 = _this.state,\n          messages = _this$state9.messages,\n          activeChannelId = _this$state9.activeChannelId;\n\n      _this.setState({\n        activeEditMessage: messages[activeChannelId].filter(function (message) {\n          return message.id === messageId;\n        })[0]\n      });\n\n      _this.setState({\n        startEditing: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSuccess\", function (response) {\n      var activeChannelId = _this.state.activeChannelId;\n      scrollToBottom();\n\n      if (response.status === 'success') {\n        if (response.message.temp_id) {\n          _this.setState(function (_ref4) {\n            var messages = _ref4.messages;\n            var newMessages = messages;\n            var foundIndex = messages[activeChannelId].findIndex(function (message) {\n              return message.temp_id === response.message.temp_id;\n            });\n\n            if (foundIndex > 0) {\n              newMessages[activeChannelId][foundIndex].id = response.message.id;\n            }\n\n            return {\n              messages: newMessages\n            };\n          });\n        }\n      } else if (response.status === 'moderation-success') {\n        addSnackbarItem({\n          message: response.message,\n          addCloseButton: true\n        });\n      } else if (response.status === 'error') {\n        addSnackbarItem({\n          message: response.message,\n          addCloseButton: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestRejection\", function (e) {\n      rejectJoiningRequest(e.target.dataset.channelId, e.target.dataset.membershipId, _this.handleJoiningManagerSuccess(e.target.dataset.membershipId), null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRequestApproval\", function (e) {\n      acceptJoiningRequest(e.target.dataset.channelId, e.target.dataset.membershipId, _this.handleJoiningManagerSuccess(e.target.dataset.membershipId), null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleUpdateRequestCount\", function () {\n      var isAccepted = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var acceptedInfo = arguments.length > 1 ? arguments[1] : undefined;\n\n      if (isAccepted) {\n        var searchParams = {\n          query: '',\n          retrievalID: null,\n          searchType: '',\n          paginationNumber: 0\n        };\n        getChannels(searchParams, 'all', _this.loadChannels);\n\n        _this.triggerSwitchChannel(parseInt(acceptedInfo.channelId, 10), acceptedInfo.channelSlug, _this.state.chatChannels);\n      }\n\n      _this.setState(function (prevState) {\n        return {\n          userRequestCount: prevState.userRequestCount - 1\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerActiveContent\", function (e) {\n      if ( // Trying to open in new tab\n      e.ctrlKey || e.shiftKey || e.metaKey || // apple\n      e.button && e.button === 1 // middle click, >IE9 + everyone else\n      ) {\n          return false;\n        }\n\n      var target = e.target;\n      var content = target.dataset.content || target.parentElement.dataset.content;\n\n      if (content) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        _this.hideChannelList();\n\n        var _this$state10 = _this.state,\n            activeChannelId = _this$state10.activeChannelId,\n            activeChannel = _this$state10.activeChannel;\n\n        if (content.startsWith('chat_channels/')) {\n          _this.setActiveContentState(activeChannelId, {\n            type_of: 'loading-user'\n          });\n\n          getContent(\"/\".concat(content, \"/channel_info\"), _this.setActiveContent, null);\n        } else if (content === 'sidecar-channel-request') {\n          _this.setActiveContent({\n            data: {\n              user: getCurrentUser(),\n              channel: {\n                id: target.dataset.channelId,\n                name: target.dataset.channelName,\n                status: target.dataset.channelStatus\n              }\n            },\n            handleJoiningRequest: _this.handleJoiningRequest,\n            type_of: 'channel-request'\n          });\n        } else if (content === 'sidecar-joining-request-manager') {\n          _this.setActiveContent({\n            data: {},\n            type_of: 'channel-request-manager',\n            updateRequestCount: _this.handleUpdateRequestCount\n          });\n        } else if (content === 'sidecar_all') {\n          _this.setActiveContentState(activeChannelId, {\n            type_of: 'loading-post'\n          });\n\n          _this.setActiveContent({\n            path: \"/chat_channel_memberships/\".concat(activeChannel.id, \"/edit\"),\n            type_of: 'article'\n          });\n        } else if (content.startsWith('sidecar-content-plus-video')) {\n          _this.setActiveContentState(activeChannelId, {\n            type_of: 'loading-post'\n          });\n\n          _this.setActiveContent({\n            path: target.href || target.parentElement.href,\n            type_of: 'article'\n          });\n\n          _this.setState({\n            videoPath: \"/video_chats/\".concat(activeChannelId)\n          });\n        } else if (content.startsWith('sidecar-video')) {\n          _this.setState({\n            videoPath: target.href || target.parentElement.href\n          });\n        } else if (content.startsWith('sidecar') || content.startsWith('article')) {\n          // article is legacy which can be removed shortly\n          _this.setActiveContentState(activeChannelId, {\n            type_of: 'loading-post'\n          });\n\n          _this.setActiveContent({\n            path: target.href || target.parentElement.href,\n            type_of: 'article'\n          });\n        } else if (target.dataset.content === 'exit') {\n          _this.setActiveContentState(activeChannelId, null);\n\n          _this.setState({\n            fullscreenContent: null,\n            expanded: window.innerWidth > NARROW_WIDTH_LIMIT\n          });\n        } else if (target.dataset.content === 'fullscreen') {\n          var mode = _this.state.fullscreenContent === 'sidecar' ? null : 'sidecar';\n\n          _this.setState({\n            fullscreenContent: mode,\n            expanded: mode === null || window.innerWidth > WIDE_WIDTH_LIMIT\n          });\n        } else if (target.dataset.content === 'chat_channel_setting') {\n          _this.setActiveContent({\n            data: {},\n            type_of: 'chat-channel-setting',\n            activeMembershipId: activeChannel.id,\n            handleLeavingChannel: _this.handleLeavingChannel\n          });\n        }\n      }\n\n      return false;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setActiveContentState\", function (channelId, state) {\n      _this.setState(function (prevState) {\n        return {\n          activeContent: _objectSpread(_objectSpread({}, prevState.activeContent), {}, _defineProperty({}, channelId, state))\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeReportAbuseForm\", function () {\n      var activeChannelId = _this.state.activeChannelId;\n\n      _this.setActiveContentState(activeChannelId, null);\n\n      _this.setState({\n        fullscreenContent: null,\n        expanded: window.innerWidth > NARROW_WIDTH_LIMIT\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setActiveContent\", function (response) {\n      var activeChannelId = _this.state.activeChannelId;\n\n      _this.setActiveContentState(activeChannelId, response);\n\n      setTimeout(function () {\n        document.getElementById('chat_activecontent').scrollTop = 0;\n        document.getElementById('chat').scrollLeft = 1000;\n      }, 3);\n      setTimeout(function () {\n        document.getElementById('chat_activecontent').scrollTop = 0;\n        document.getElementById('chat').scrollLeft = 1000;\n      }, 10);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChannelOpenSuccess\", function (response) {\n      _this.setState(function (_ref5) {\n        var chatChannels = _ref5.chatChannels;\n        var newChannelsObj = chatChannels.map(function (channel) {\n          if (parseInt(response.channel, 10) === channel.chat_channel_id) {\n            return _objectSpread(_objectSpread({}, channel), {}, {\n              last_opened_at: new Date()\n            });\n          }\n\n          return channel;\n        });\n        return {\n          chatChannels: newChannelsObj\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLeavingChannel\", function (leftChannelId) {\n      var chatChannels = _this.state.chatChannels;\n\n      _this.triggerSwitchChannel(chatChannels[1].chat_channel_id, chatChannels[1].channel_modified_slug, chatChannels);\n\n      _this.setState(function (prevState) {\n        return {\n          chatChannels: prevState.chatChannels.filter(function (channel) {\n            return channel.id !== leftChannelId;\n          })\n        };\n      });\n\n      _this.setActiveContentState(chatChannels[1].chat_channel_id, null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerChannelTypeFilter\", function (e) {\n      var filterQuery = _this.state.filterQuery;\n      var type = e.target.dataset.channelType;\n\n      _this.setState({\n        channelTypeFilter: type,\n        fetchingPaginatedChannels: false\n      });\n\n      var filters = type === 'all' ? {} : {\n        filters: \"channel_type:\".concat(type)\n      };\n      var searchParams = {\n        query: filterQuery,\n        retrievalID: null,\n        searchType: '',\n        paginationNumber: 0\n      };\n\n      if (filterQuery && type !== 'direct') {\n        searchParams.searchType = 'discoverable';\n        getChannels(searchParams, filters, _this.loadChannels);\n      } else {\n        getChannels(searchParams, filters, _this.loadChannels);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFailure\", function (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      addSnackbarItem({\n        message: err,\n        addCloseButton: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMessages\", function () {\n      var _this$state11 = _this.state,\n          activeChannelId = _this$state11.activeChannelId,\n          messages = _this$state11.messages,\n          showTimestamp = _this$state11.showTimestamp,\n          activeChannel = _this$state11.activeChannel,\n          currentUserId = _this$state11.currentUserId;\n\n      if (!messages[activeChannelId]) {\n        return '';\n      }\n\n      if (messages[activeChannelId].length === 0 && activeChannel) {\n        if (activeChannel.channel_type === 'direct') {\n          return h(\"div\", {\n            className: \"chatmessage\",\n            style: {\n              color: 'grey'\n            }\n          }, h(\"div\", {\n            className: \"chatmessage__body\"\n          }, \"You and\", ' ', h(\"a\", {\n            href: \"/\".concat(activeChannel.channel_modified_slug)\n          }, activeChannel.channel_modified_slug), ' ', \"are connected because you both follow each other. All interactions\", ' ', h(\"em\", null, h(\"b\", null, \"must\")), ' ', \"abide by the \", h(\"a\", {\n            href: \"/code-of-conduct\"\n          }, \"code of conduct\"), \".\"));\n        }\n\n        if (activeChannel.channel_type === 'open') {\n          return h(\"div\", {\n            className: \"chatmessage\",\n            style: {\n              color: 'grey'\n            }\n          }, h(\"div\", {\n            className: \"chatmessage__body\"\n          }, \"You have joined \", activeChannel.channel_name, \"! All interactions\", ' ', h(\"em\", null, h(\"b\", null, \"must\")), ' ', \"abide by the \", h(\"a\", {\n            href: \"/code-of-conduct\"\n          }, \"code of conduct\"), \".\"));\n        }\n      }\n\n      return messages[activeChannelId].map(function (message) {\n        return message.action ? h(ActionMessage, {\n          user: message.username,\n          profileImageUrl: message.profile_image_url,\n          message: message.message,\n          timestamp: showTimestamp ? message.timestamp : null,\n          color: message.color,\n          onContentTrigger: _this.triggerActiveContent\n        }) : h(Message, {\n          currentUserId: currentUserId,\n          id: message.id,\n          user: message.username,\n          userID: message.user_id,\n          profileImageUrl: message.profile_image_url,\n          message: message.message,\n          timestamp: showTimestamp ? message.timestamp : null,\n          editedAt: message.edited_at,\n          color: message.color,\n          onContentTrigger: _this.triggerActiveContent,\n          onDeleteMessageTrigger: _this.triggerDeleteMessage,\n          onEditMessageTrigger: _this.triggerEditMessage,\n          onReportMessageTrigger: _this.triggerReportMessage\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerReportMessage\", function (messageId) {\n      var _this$state12 = _this.state,\n          activeChannelId = _this$state12.activeChannelId,\n          messages = _this$state12.messages;\n\n      _this.setActiveContent({\n        data: messages[activeChannelId].find(function (message) {\n          return message.id === messageId;\n        }),\n        type_of: 'message-report-abuse'\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerChannelFilter\", function (e) {\n      var channelTypeFilter = _this.state.channelTypeFilter;\n      var filters = channelTypeFilter === 'all' ? {} : {\n        filters: \"channel_type:\".concat(channelTypeFilter)\n      };\n      var searchParams = {\n        query: e.target.value,\n        retrievalID: null,\n        searchType: '',\n        paginationNumber: 0\n      };\n\n      if (e.target.value) {\n        searchParams.searchType = 'discoverable';\n        getChannels(searchParams, filters, _this.loadChannels);\n      } else {\n        getChannels(searchParams, filters, _this.loadChannels);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleExpand\", function () {\n      _this.setState(function (prevState) {\n        return {\n          expanded: !prevState.expanded\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderChannelFilterButton\", function (type, name, active) {\n      return h(Button, {\n        \"data-channel-type\": type,\n        onClick: _this.triggerChannelTypeFilter,\n        \"data-testid\": name,\n        className: \"chat__channeltypefilterbutton crayons-indicator crayons-indicator--\".concat(type === active ? 'accent' : '')\n      }, name);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleSearchShowing\", function () {\n      if (!_this.state.searchShowing) {\n        setTimeout(function () {\n          document.getElementById('chatchannelsearchbar').focus();\n        }, 100);\n      } else {\n        var searchParams = {\n          query: '',\n          retrievalID: null,\n          searchType: '',\n          paginationNumber: 0\n        };\n        getChannels(searchParams, 'all', _this.loadChannels);\n\n        _this.setState({\n          filterQuery: ''\n        });\n      }\n\n      _this.setState({\n        searchShowing: !_this.state.searchShowing\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderChatChannels\", function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          state = _assertThisInitialize2.state;\n\n      if (state.showChannelsList) {\n        var notificationsPermission = state.notificationsPermission;\n        var notificationsButton = '';\n        var notificationsState = '';\n        var invitesButton = '';\n        var joiningRequestButton = '';\n\n        if (notificationsPermission === 'granted') {\n          notificationsState = h(\"div\", {\n            className: \"chat_chatconfig chat_chatconfig--on\"\n          }, \"Notifications On\");\n        } else if (notificationsPermission === 'denied') {\n          notificationsState = h(\"div\", {\n            className: \"chat_chatconfig chat_chatconfig--off\"\n          }, \"Notifications Off\");\n        }\n\n        return h(\"div\", {\n          className: \"chat__channels\"\n        }, notificationsButton, h(\"input\", {\n          placeholder: \"Search Channels\",\n          onKeyUp: _this.debouncedChannelFilter,\n          id: \"chatchannelsearchbar\",\n          className: \"crayons-textfield\",\n          \"aria-label\": \"Search Channels\"\n        }), invitesButton, joiningRequestButton, h(\"div\", {\n          className: \"chat__channeltypefilter\"\n        }, _this.renderChannelFilterButton('all', 'all', state.channelTypeFilter), _this.renderChannelFilterButton('direct', 'direct', state.channelTypeFilter), _this.renderChannelFilterButton('invite_only', 'group', state.channelTypeFilter), h(Button, {\n          className: \"chat__channelssearchtoggle crayons-btn--ghost-dimmed p-2\",\n          \"aria-label\": \"Toggle request manager\",\n          onClick: _this.triggerActiveContent,\n          \"data-content\": \"sidecar-joining-request-manager\"\n        }, h(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 477.869 477.869\",\n          width: \"18\",\n          height: \"18\"\n        }, h(\"path\", {\n          d: \"M387.415 233.496c48.976-44.03 52.987-119.424 8.958-168.4C355.99 20.177 288.4 12.546 239.02 47.332c-53.83-38-128.264-25.15-166.254 28.68-34.86 49.393-27.26 117.054 17.69 157.483C34.606 262.935-.25 320.976.002 384.108v51.2a17.07 17.07 0 0 0 17.067 17.067h443.733a17.07 17.07 0 0 0 17.067-17.067v-51.2c.252-63.132-34.605-121.173-90.454-150.612zM307.2 59.842c47.062-.052 85.256 38.057 85.31 85.12.037 33.564-19.63 64.023-50.237 77.8-1.314.597-2.628 1.143-3.96 1.707a83.66 83.66 0 0 1-12.988 4.045c-.853.188-1.707.3-2.577.46-4.952.95-9.977 1.457-15.02 1.52-2.27 0-4.557-.17-6.827-.375-.853 0-1.707 0-2.56-.17a86.22 86.22 0 0 1-27.904-8.226c-.324-.154-.7-.137-1.024-.273-1.707-.82-3.413-1.536-4.932-2.458.137-.17.222-.358.358-.53a119.72 119.72 0 0 0 18.278-33.297l.53-1.434a120.38 120.38 0 0 0 4.523-17.562c.154-.87.273-1.707.4-2.645.987-6.067 1.506-12.2 1.553-18.347a120.04 120.04 0 0 0-1.553-18.313l-.4-2.645c-1.064-5.96-2.576-11.83-4.523-17.562l-.53-1.434c-4.282-12-10.453-23.24-18.278-33.297-.137-.17-.222-.358-.358-.53C277.45 63.83 292.2 59.843 307.2 59.842zM85.335 145.176c-.12-47.006 37.886-85.2 84.892-85.33a85.11 85.11 0 0 1 59.134 23.686l2.918 2.9a87.75 87.75 0 0 1 8.09 9.813c.75 1.058 1.434 2.185 2.133 3.277a83.95 83.95 0 0 1 6.263 11.52c.427.973.75 1.963 1.126 2.935a83.42 83.42 0 0 1 4.233 13.653c.12.512.154 1.024.256 1.553a80.34 80.34 0 0 1 0 32.119c-.102.53-.137 1.04-.256 1.553a83.23 83.23 0 0 1-4.233 13.653c-.375.973-.7 1.963-1.126 2.935a84.25 84.25 0 0 1-6.263 11.503c-.7 1.092-1.382 2.22-2.133 3.277a87.55 87.55 0 0 1-8.09 9.813 117.37 117.37 0 0 1-2.918 2.901c-6.9 6.585-14.877 11.962-23.57 15.906a49.35 49.35 0 0 1-4.198 1.707 85.84 85.84 0 0 1-12.663 3.925c-1.075.24-2.185.375-3.277.563a84.67 84.67 0 0 1-14.046 1.417h-1.877c-4.713-.08-9.412-.554-14.046-1.417-1.092-.188-2.202-.324-3.277-.563a85.8 85.8 0 0 1-12.663-3.925l-4.198-1.707c-30.534-13.786-50.173-44.166-50.212-77.667zM307.2 418.242H34.135V384.11c-.25-57.833 36.188-109.468 90.76-128.614 29.296 12.197 62.25 12.197 91.546 0a137.14 137.14 0 0 1 16.623 7.356c3.55 1.826 6.827 3.908 10.24 6.007 2.22 1.382 4.47 2.73 6.605 4.25 3.294 2.338 6.4 4.88 9.455 7.492l5.75 5.12c2.816 2.662 5.46 5.478 8.004 8.363 1.826 2.082 3.6 4.198 5.29 6.383 2.236 2.867 4.37 5.803 6.35 8.823 1.707 2.56 3.226 5.222 4.727 7.885 1.707 2.935 3.277 5.87 4.7 8.926s2.697 6.4 3.925 9.66c1.075 2.833 2.22 5.65 3.106 8.533 1.195 3.96 2.03 8.055 2.867 12.15.512 2.423 1.178 4.796 1.553 7.253 1.01 6.757 1.53 13.58 1.553 20.412v34.133zm136.534 0h-102.4V384.11c0-5.342-.307-10.633-.785-15.872-.137-1.536-.375-3.055-.546-4.59-.46-3.772-1-7.51-1.707-11.213l-.973-4.762c-.82-3.8-1.77-7.566-2.85-11.298l-1.058-3.686c-4.78-15.277-11.704-29.797-20.565-43.127l-.666-.973a168.96 168.96 0 0 0-9.404-12.646l-.12-.154c-3.413-4.232-7.117-8.346-11.008-12.237h.7a120.8 120.8 0 0 0 14.524 1.024h.94c4.496-.04 8.985-.33 13.45-.87 1.4-.17 2.782-.427 4.18-.65a117.43 117.43 0 0 0 10.752-2.167l3.055-.785a116.21 116.21 0 0 0 13.653-4.642c54.612 19.127 91.083 70.785 90.83 128.65v34.132z\"\n        })), _this.state.userRequestCount > 0 ? h(\"span\", {\n          className: \"crayons-indicator crayons-indicator--accent crayons-indicator--bullet requests-badge\"\n        }, _this.state.userRequestCount) : null), _this.state.isTagModerator ? h(Button, {\n          className: \"chat__channelssearchtoggle crayons-btn--ghost-dimmed p-2\",\n          \"aria-label\": \"Toggle request manager\",\n          onClick: _this.toggleModalCreateChannel,\n          \"data-content\": \"sidecar-joining-request-manager\"\n        }, h(\"svg\", {\n          version: \"1.1\",\n          id: \"Capa_1\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          x: \"0px\",\n          y: \"0px\",\n          width: \"18\",\n          height: \"18\",\n          viewBox: \"0 0 512 512\",\n          style: \"enable-background:new 0 0 512 512;\"\n        }, h(\"path\", {\n          d: \"M492,236H276V20c0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20v216H20c-11.046,0-20,8.954-20,20s8.954,20,20,20h216 v216c0,11.046,8.954,20,20,20s20-8.954,20-20V276h216c11.046,0,20-8.954,20-20C512,244.954,503.046,236,492,236z\"\n        }))) : null, _this.state.openModal ? h(CreateChatModal, {\n          toggleModalCreateChannel: _this.toggleModalCreateChannel,\n          handleCreateChannelSuccess: _this.handleCreateChannelSuccess\n        }) : ''), h(Channels, {\n          activeChannelId: state.activeChannelId,\n          chatChannels: state.chatChannels,\n          unopenedChannelIds: state.unopenedChannelIds,\n          handleSwitchChannel: _this.handleSwitchChannel,\n          channelsLoaded: state.channelsLoaded,\n          filterQuery: state.filterQuery,\n          expanded: state.expanded,\n          \"aria-expanded\": state.expanded,\n          currentUserId: state.currentUserId,\n          triggerActiveContent: _this.triggerActiveContent\n        }), notificationsState);\n      }\n\n      return '';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleModalCreateChannel\", function () {\n      var openModal = _this.state.openModal;\n\n      _this.setState({\n        openModal: !openModal\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"navigateToChannelsList\", function () {\n      var chatContainer = document.getElementsByClassName('chat__activechat')[0];\n      chatContainer.classList.add('chat__activechat--hidden');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCreateChannelSuccess\", function () {\n      _this.toggleModalCreateChannel();\n\n      var searchParams = {\n        query: '',\n        retrievalID: null,\n        searchType: '',\n        paginationNumber: 0\n      };\n      getChannels(searchParams, {}, _this.loadChannels);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMessageScroll\", function () {\n      var _this$state13 = _this.state,\n          allMessagesLoaded = _this$state13.allMessagesLoaded,\n          messages = _this$state13.messages,\n          activeChannelId = _this$state13.activeChannelId,\n          messageOffset = _this$state13.messageOffset;\n\n      if (!messages[activeChannelId]) {\n        return;\n      }\n\n      var jumpbackButton = document.getElementById('jumpback_button');\n\n      if (_this.scroller) {\n        var scrolledRatio = (_this.scroller.scrollTop + _this.scroller.clientHeight) / _this.scroller.scrollHeight;\n\n        if (scrolledRatio < 0.5) {\n          jumpbackButton.classList.remove('chatchanneljumpback__hide');\n        } else if (scrolledRatio > 0.6) {\n          jumpbackButton.classList.add('chatchanneljumpback__hide');\n        }\n\n        if (_this.scroller.scrollTop === 0 && !allMessagesLoaded) {\n          getAllMessages(activeChannelId, messageOffset + messages[activeChannelId].length, _this.addMoreMessages);\n          var curretPosition = _this.scroller.scrollHeight;\n\n          _this.setState({\n            currentMessageLocation: curretPosition\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addMoreMessages\", function (res) {\n      var chatChannelId = res.chatChannelId,\n          messages = res.messages;\n\n      if (messages.length > 0) {\n        _this.setState(function (prevState) {\n          return {\n            messages: _defineProperty({}, chatChannelId, [].concat(_toConsumableArray(messages), _toConsumableArray(prevState.messages[chatChannelId])))\n          };\n        });\n      } else {\n        _this.setState({\n          allMessagesLoaded: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"jumpBacktoBottom\", function () {\n      scrollToBottom();\n      document.getElementById('jumpback_button').classList.remove('chatchanneljumpback__hide');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDragOver\", function (event) {\n      event.preventDefault();\n      event.currentTarget.classList.add('opacity-25');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDragExit\", function (event) {\n      event.preventDefault();\n      event.currentTarget.classList.remove('opacity-25');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleImageDrop\", function (event) {\n      event.preventDefault();\n      var files = event.dataTransfer.files;\n      event.currentTarget.classList.remove('opacity-25');\n      processImageUpload(files, _this.handleImageSuccess, _this.handleImageFailure);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendCanvasImage\", function (files) {\n      dragAndUpload([files], _this.handleImageSuccess, _this.handleImageFailure);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleImageSuccess\", function (res) {\n      var links = res.links,\n          image = res.image;\n      var mLink = \"![\".concat(image[0].name, \"](\").concat(links[0], \")\");\n      var el = document.getElementById('messageform');\n      var start = el.selectionStart;\n      var end = el.selectionEnd;\n      var text = el.value;\n      var before = text.substring(0, start);\n      before = text.substring(0, before.lastIndexOf('@') + 1);\n      var after = text.substring(end, text.length);\n      el.value = \"\".concat(before + mLink, \" \").concat(after);\n      el.selectionStart = start + mLink.length + 1;\n      el.selectionEnd = el.selectionStart;\n      el.focus();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleImageFailure\", function (e) {\n      addSnackbarItem({\n        message: e.message,\n        addCloseButton: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderActiveChatChannel\", function (channelHeader) {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          state = _assertThisInitialize3.state,\n          props = _assertThisInitialize3.props;\n\n      var channelName = state.activeChannel ? state.activeChannel.channel_name : ' ';\n      return h(\"div\", {\n        className: \"activechatchannel\"\n      }, h(\"div\", {\n        className: \"activechatchannel__conversation\"\n      }, channelHeader, h(DragAndDropZone, {\n        onDragOver: _this.handleDragOver,\n        onDragExit: _this.handleDragExit,\n        onDrop: _this.handleImageDrop\n      }, h(\"div\", {\n        className: \"activechatchannel__messages\",\n        onScroll: _this.handleMessageScroll,\n        ref: function ref(scroller) {\n          _this.scroller = scroller;\n        },\n        id: \"messagelist\"\n      }, _this.renderMessages(), h(\"div\", {\n        className: \"messagelist__sentinel\",\n        id: \"messagelist__sentinel\"\n      }))), h(\"div\", {\n        className: \"chatchanneljumpback chatchanneljumpback__hide\",\n        id: \"jumpback_button\"\n      }, h(Button, {\n        className: \"chatchanneljumpback__messages crayons-btn--outlined\",\n        onClick: _this.jumpBacktoBottom,\n        tabIndex: \"0\",\n        onKeyUp: function onKeyUp(e) {\n          if (e.keyCode === 13) _this.jumpBacktoBottom();\n        }\n      }, \"Scroll to Bottom\")), _this.renderDeleteModal(), h(\"div\", {\n        className: \"activechatchannel__alerts\"\n      }, h(Alert, {\n        showAlert: state.showAlert\n      })), _this.renderChannelMembersList(), h(\"div\", {\n        className: \"activechatchannel__form\"\n      }, h(Compose, {\n        handleSubmitOnClick: _this.handleSubmitOnClick,\n        handleKeyDown: _this.handleKeyDown,\n        handleSubmitOnClickEdit: _this.handleSubmitOnClickEdit,\n        handleMention: _this.handleMention,\n        handleKeyUp: _this.handleKeyUp,\n        handleKeyDownEdit: _this.handleKeyDownEdit,\n        activeChannelId: state.activeChannelId,\n        activeChannelName: channelName,\n        startEditing: state.startEditing,\n        markdownEdited: state.markdownEdited,\n        editMessageMarkdown: state.activeEditMessage.markdown,\n        handleEditMessageClose: _this.handleEditMessageClose,\n        handleFilePaste: _this.handleFilePaste\n      }))), h(Content, {\n        onTriggerContent: _this.triggerActiveContent,\n        resource: state.activeContent[state.activeChannelId],\n        activeChannel: state.activeChannel,\n        fullscreen: state.fullscreenContent === 'sidecar',\n        closeReportAbuseForm: _this.closeReportAbuseForm\n      }), h(VideoContent, {\n        videoPath: state.videoPath,\n        onTriggerVideoContent: _this.onTriggerVideoContent,\n        fullscreen: state.fullscreenContent === 'video'\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFilePaste\", function (e) {\n      if (!e.clipboardData || !e.clipboardData.items) {\n        return;\n      }\n\n      var items = [];\n\n      for (var i = 0; i < e.clipboardData.items.length; i++) {\n        var item = e.clipboardData.items[i];\n\n        if (item.kind !== 'file') {\n          continue;\n        }\n\n        items.push(item);\n      }\n\n      if (items && items.length > 0) {\n        processImageUpload([items[0].getAsFile()], _this.handleImageSuccess, _this.handleImageFailure);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onTriggerVideoContent\", function (e) {\n      if (e.target.dataset.content === 'exit') {\n        _this.setState({\n          videoPath: null,\n          fullscreenContent: null,\n          expanded: window.innerWidth > 600\n        });\n      } else if (_this.state.fullscreenContent === 'video') {\n        _this.setState({\n          fullscreenContent: null\n        });\n      } else {\n        _this.setState({\n          fullscreenContent: 'video',\n          expanded: window.innerWidth > WIDE_WIDTH_LIMIT\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMention\", function (e) {\n      var activeChannel = _this.state.activeChannel;\n      var mention = e.keyCode === 64;\n\n      if (mention && activeChannel.channel_type !== 'direct') {\n        var memberListElement = document.getElementById('mentionList');\n        memberListElement.focus();\n\n        _this.setState({\n          showMemberlist: true\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyUp\", function (e) {\n      var _this$state14 = _this.state,\n          startEditing = _this$state14.startEditing,\n          activeChannel = _this$state14.activeChannel,\n          showMemberlist = _this$state14.showMemberlist;\n      var enterPressed = e.keyCode === 13;\n      if (enterPressed && showMemberlist) _this.setState({\n        showMemberlist: false\n      });\n\n      if (activeChannel.channel_type !== 'direct') {\n        if (startEditing) {\n          _this.setState({\n            markdownEdited: true\n          });\n        }\n\n        if (!e.target.value.includes('@') && showMemberlist) {\n          _this.setState({\n            showMemberlist: false\n          });\n        } else {\n          _this.setQuery(e.target);\n\n          _this.listHighlightManager(e.keyCode);\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setQuery\", function (e) {\n      var showMemberlist = _this.state.showMemberlist;\n\n      if (showMemberlist) {\n        var before = e.value.substring(0, e.selectionStart);\n        var query = before.substring(before.lastIndexOf('@') + 1, e.selectionStart);\n        if (query.includes(' ') || before.lastIndexOf('@') < 0) _this.setState({\n          showMemberlist: false\n        });else {\n          _this.setState({\n            showMemberlist: true\n          });\n\n          _this.setState({\n            memberFilterQuery: query\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addUserName\", function (e) {\n      var name = e.target.dataset.content || e.target.parentElement.dataset.content;\n      var el = document.getElementById('messageform');\n      var start = el.selectionStart;\n      var end = el.selectionEnd;\n      var text = el.value;\n      var before = text.substring(0, start);\n      before = text.substring(0, before.lastIndexOf('@') + 1);\n      var after = text.substring(end, text.length);\n      el.value = \"\".concat(before + name, \" \").concat(after);\n      el.selectionStart = start + name.length + 1;\n      el.selectionEnd = start + name.length + 1;\n      el.dispatchEvent(new Event('input'));\n      el.focus();\n\n      _this.setState({\n        showMemberlist: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"listHighlightManager\", function (keyCode) {\n      var mentionList = document.getElementById('mentionList');\n      var activeElement = document.getElementsByClassName('active__message__list')[0];\n\n      if (mentionList.children.length > 0) {\n        if (keyCode === 40 && activeElement) {\n          if (activeElement.nextElementSibling) {\n            activeElement.classList.remove('active__message__list');\n            activeElement.nextElementSibling.classList.add('active__message__list');\n          }\n        } else if (keyCode === 38 && activeElement) {\n          if (activeElement.previousElementSibling) {\n            activeElement.classList.remove('active__message__list');\n            activeElement.previousElementSibling.classList.add('active__message__list');\n          }\n        } else {\n          mentionList.children[0].classList.add('active__message__list');\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getMentionedUsers\", function (message) {\n      var _this$state15 = _this.state,\n          channelUsers = _this$state15.channelUsers,\n          activeChannelId = _this$state15.activeChannelId,\n          activeChannel = _this$state15.activeChannel;\n\n      if (channelUsers[activeChannelId]) {\n        if (message.includes('@all') && activeChannel.channel_type !== 'open') {\n          return Array.from(Object.values(channelUsers[activeChannelId]).filter(function (user) {\n            return user.id;\n          }), function (user) {\n            return user.id;\n          });\n        }\n\n        return Array.from(Object.values(channelUsers[activeChannelId]).filter(function (user) {\n          return message.includes(user.username);\n        }), function (user) {\n          return user.id;\n        });\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderChannelMembersList\", function () {\n      var _this$state16 = _this.state,\n          showMemberlist = _this$state16.showMemberlist,\n          activeChannelId = _this$state16.activeChannelId,\n          channelUsers = _this$state16.channelUsers,\n          memberFilterQuery = _this$state16.memberFilterQuery;\n      var filterRegx = new RegExp(memberFilterQuery, 'gi');\n      return h(\"div\", {\n        className: showMemberlist ? 'mention__list mention__visible' : 'mention__list',\n        id: \"mentionList\",\n        \"data-testid\": \"mentionList\"\n      }, showMemberlist ? Object.values(channelUsers[activeChannelId]).filter(function (user) {\n        return user.username.match(filterRegx);\n      }).map(function (user) {\n        return h(\"div\", {\n          key: user.username,\n          className: \"mention__user\",\n          role: \"button\",\n          onClick: _this.addUserName,\n          tabIndex: \"0\",\n          \"data-content\": user.username,\n          onKeyUp: function onKeyUp(e) {\n            if (e.keyCode === 13) _this.addUserName();\n          }\n        }, h(\"img\", {\n          className: \"mention__user__image\",\n          src: user.profile_image,\n          alt: user.name,\n          style: !user.profile_image ? {\n            display: 'none'\n          } : ' '\n        }), h(\"span\", {\n          style: {\n            padding: '3px 0px',\n            'font-size': '16px'\n          }\n        }, '@', user.username, h(\"p\", null, user.name)));\n      }) : ' ');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEditMessageClose\", function () {\n      _this.setState({\n        startEditing: false,\n        markdownEdited: false,\n        activeEditMessage: {\n          message: '',\n          markdown: ''\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderDeleteModal\", function () {\n      var showDeleteModal = _this.state.showDeleteModal;\n      return h(\"div\", {\n        id: \"message\",\n        className: showDeleteModal ? 'message__delete__modal crayons-modal crayons-modal--s absolute' : 'message__delete__modal message__delete__modal__hide crayons-modal crayons-modal--s absolute',\n        \"aria-hidden\": showDeleteModal,\n        \"aria-label\": \"delete confirmation\",\n        role: \"dialog\"\n      }, h(\"div\", {\n        className: \"crayons-modal__box\"\n      }, h(\"div\", {\n        className: \"crayons-modal__box__body\"\n      }, h(\"h3\", null, \"Are you sure, you want to delete this message?\"), h(\"div\", {\n        className: \"delete-actions__container\"\n      }, h(Button, {\n        className: \"crayons-btn crayons-btn--danger message__delete__button\",\n        onClick: _this.handleMessageDelete,\n        tabIndex: \"0\",\n        onKeyUp: function onKeyUp(e) {\n          if (e.keyCode === 13) _this.handleMessageDelete();\n        }\n      }, \"Delete\"), h(Button, {\n        className: \"crayons-btn crayons-btn--secondary message__cancel__button\",\n        onClick: _this.handleCloseDeleteModal,\n        tabIndex: \"0\",\n        onKeyUp: function onKeyUp(e) {\n          if (e.keyCode === 13) _this.handleCloseDeleteModal();\n        }\n      }, \"Cancel\")))), h(\"div\", {\n        className: \"crayons-modal__overlay\"\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCloseDeleteModal\", function () {\n      _this.setState({\n        showDeleteModal: false,\n        messageDeleteId: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMessageDelete\", function () {\n      var messageDeleteId = _this.state.messageDeleteId;\n      deleteMessage(messageDeleteId);\n\n      _this.setState({\n        showDeleteModal: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleJoiningRequest\", function (e) {\n      sendChannelRequest(e.target.dataset.channelId, _this.handleJoiningRequestSuccess, _this.handleFailure);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleJoiningRequestSuccess\", function () {\n      var activeChannelId = _this.state.activeChannelId;\n\n      _this.setActiveContentState(activeChannelId, null);\n\n      _this.setState({\n        fullscreenContent: null\n      });\n\n      _this.toggleSearchShowing();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderChannelBackNav\", function () {\n      return h(Button, {\n        className: \"crayons-btn crayons-btn--icon-rounded crayons-btn--ghost active-channel__back-btn\",\n        onClick: _this.navigateToChannelsList,\n        onKeyUp: function onKeyUp(e) {\n          if (e.keyCode === 13) _this.navigateToChannelsList(e);\n        },\n        tabIndex: \"0\"\n      }, h(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        className: \"crayons-icon\"\n      }, h(\"path\", {\n        d: \"M10.828 12l4.95 4.95-1.414 1.414L8 12l6.364-6.364 1.414 1.414z\"\n      })));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderChannelHeaderInner\", function () {\n      var activeChannel = _this.state.activeChannel;\n\n      if (activeChannel.channel_type === 'direct') {\n        return h(\"a\", {\n          href: \"/\".concat(activeChannel.channel_username),\n          className: \"active-channel__title\",\n          onClick: _this.triggerActiveContent,\n          \"data-content\": \"sidecar-user\"\n        }, activeChannel.channel_modified_slug);\n      }\n\n      return h(\"a\", {\n        href: \"#/\",\n        onClick: _this.triggerActiveContent,\n        \"data-content\": \"chat_channel_setting\"\n      }, activeChannel.channel_name);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderChannelConfigImage\", function () {\n      var _this$state17 = _this.state,\n          activeContent = _this$state17.activeContent,\n          activeChannel = _this$state17.activeChannel,\n          activeChannelId = _this$state17.activeChannelId;\n\n      if (activeContent[activeChannelId] && activeContent[activeChannelId].type_of) {\n        return '';\n      }\n\n      var path = activeChannel.channel_type === 'direct' ? \"/\".concat(activeChannel.channel_username) : \"#\";\n      var dataContent = activeChannel.channel_type === 'direct' ? 'sidecar-user' : \"chat_channel_setting\";\n      var contentLink = activeChannel.channel_type === 'direct' ? \"/\".concat(activeChannel.channel_username) : '#/';\n      return h(\"a\", {\n        className: \"crayons-btn crayons-btn--icon-rounded crayons-btn--ghost\",\n        onClick: _this.triggerActiveContent,\n        onKeyUp: function onKeyUp(e) {\n          if (e.keyCode === 13) _this.triggerActiveContent(e);\n        },\n        tabIndex: \"0\",\n        href: contentLink,\n        \"data-content\": dataContent\n      }, h(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        className: \"crayons-icon\",\n        \"data-content\": dataContent\n      }, h(\"path\", {\n        \"data-content\": dataContent,\n        d: \"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zM11 7h2v2h-2V7zm0 4h2v6h-2v-6z\"\n      })));\n    });\n\n    var _chatChannels = JSON.parse(props.chatChannels);\n\n    var chatOptions = JSON.parse(props.chatOptions);\n    _this.debouncedChannelFilter = debounceAction(_this.triggerChannelFilter.bind(_assertThisInitialized(_this)));\n    _this.state = {\n      appDomain: document.body.dataset.appDomain,\n      messages: [],\n      scrolled: false,\n      showAlert: false,\n      chatChannels: _chatChannels,\n      unopenedChannelIds: [],\n      filterQuery: '',\n      channelTypeFilter: 'all',\n      channelsLoaded: false,\n      channelPaginationNum: 0,\n      fetchingPaginatedChannels: false,\n      activeChannelId: chatOptions.activeChannelId,\n      activeChannel: null,\n      showChannelsList: chatOptions.showChannelsList,\n      showTimestamp: chatOptions.showTimestamp,\n      currentUserId: chatOptions.currentUserId,\n      notificationsPermission: null,\n      activeContent: {},\n      fullscreenContent: null,\n      videoPath: null,\n      expanded: window.innerWidth > NARROW_WIDTH_LIMIT,\n      isMobileDevice: typeof window.orientation !== 'undefined',\n      subscribedPusherChannels: [],\n      messageOffset: 0,\n      showDeleteModal: false,\n      messageDeleteId: null,\n      allMessagesLoaded: false,\n      currentMessageLocation: 0,\n      startEditing: false,\n      activeEditMessage: {},\n      markdownEdited: false,\n      searchShowing: false,\n      channelUsers: [],\n      showMemberlist: false,\n      memberFilterQuery: null,\n      rerenderIfUnchangedCheck: null,\n      userRequestCount: 0,\n      openModal: false,\n      isTagModerator: JSON.parse(props.tagModerator).isTagModerator\n    };\n\n    if (chatOptions.activeChannelId) {\n      getAllMessages(chatOptions.activeChannelId, 0, _this.receiveAllMessages);\n    }\n\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$state18 = this.state,\n          chatChannels = _this$state18.chatChannels,\n          activeChannelId = _this$state18.activeChannelId,\n          showChannelsList = _this$state18.showChannelsList,\n          channelTypeFilter = _this$state18.channelTypeFilter,\n          isMobileDevice = _this$state18.isMobileDevice,\n          channelPaginationNum = _this$state18.channelPaginationNum,\n          currentUserId = _this$state18.currentUserId,\n          appDomain = _this$state18.appDomain,\n          messageOffset = _this$state18.messageOffset;\n      this.setupChannels(chatChannels);\n      var channelsForPusherSub = chatChannels.filter(this.channelTypeFilterFn('open'));\n      this.subscribeChannelsToPusher(channelsForPusherSub, function (channel) {\n        return \"open-channel--\".concat(appDomain, \"-\").concat(channel.chat_channel_id);\n      });\n      setupObserver(this.observerCallback);\n      this.subscribePusher(\"private-message-notifications--\".concat(appDomain, \"-\").concat(currentUserId));\n\n      if (activeChannelId) {\n        sendOpen(activeChannelId, this.handleChannelOpenSuccess, null);\n      }\n\n      if (showChannelsList) {\n        var filters = channelTypeFilter === 'all' ? {} : {\n          filters: \"channel_type:\".concat(channelTypeFilter)\n        };\n        var searchParams = {\n          query: '',\n          retrievalID: activeChannelId,\n          searchType: '',\n          paginationNumber: channelPaginationNum\n        };\n\n        if (activeChannelId !== null) {\n          searchParams.searchType = 'discoverable';\n        }\n\n        getChannels(searchParams, filters, this.loadChannels);\n        getUnopenedChannelIds(this.markUnopenedChannelIds);\n      }\n\n      if (!isMobileDevice) {\n        document.getElementById('messageform').focus();\n      }\n\n      if (document.getElementById('chatchannels__channelslist')) {\n        document.getElementById('chatchannels__channelslist').addEventListener('scroll', this.handleChannelScroll);\n      }\n\n      this.handleRequestCount();\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.state.rerenderIfUnchangedCheck !== nextState.rerenderIfUnchangedCheck) {\n        return false;\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$state19 = this.state,\n          scrolled = _this$state19.scrolled,\n          currentMessageLocation = _this$state19.currentMessageLocation;\n      var messageList = document.getElementById('messagelist');\n\n      if (messageList) {\n        if (!scrolled) {\n          scrollToBottom();\n        }\n      }\n\n      if (currentMessageLocation && messageList.scrollTop === 0) {\n        messageList.scrollTop = messageList.scrollHeight - (currentMessageLocation + 30);\n      }\n    }\n  }, {\n    key: \"handleDragHover\",\n    value: function handleDragHover(e) {\n      e.preventDefault();\n      var messageArea = document.getElementById('messagelist');\n      messageArea.classList.add('opacity-25');\n    }\n  }, {\n    key: \"handleDragExit\",\n    value: function handleDragExit(e) {\n      e.preventDefault();\n      var messageArea = document.getElementById('messagelist');\n      messageArea.classList.remove('opacity-25');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var state = this.state;\n      var channelHeader = h(\"div\", {\n        className: \"active-channel__header\"\n      }, \"\\xA0\");\n\n      if (state.activeChannel) {\n        channelHeader = h(\"div\", {\n          className: \"active-channel__header\"\n        }, this.renderChannelBackNav(), this.renderChannelHeaderInner(), this.renderChannelConfigImage());\n      }\n\n      var fullscreenMode = '';\n\n      if (state.fullscreenContent === 'sidecar') {\n        fullscreenMode = 'chat--content-visible-full';\n      } else if (state.fullscreenContent === 'video') {\n        fullscreenMode = 'chat--video-visible-full';\n      }\n\n      return h(\"div\", {\n        \"data-testid\": \"chat\",\n        className: \"chat chat--expanded\\n         chat--\".concat(state.videoPath ? 'video-visible' : 'video-not-visible', \" chat--\").concat(state.activeContent[state.activeChannelId] ? 'content-visible' : 'content-not-visible', \" \").concat(fullscreenMode),\n        \"data-no-instant\": true,\n        \"aria-expanded\": state.expanded\n      }, this.renderChatChannels(), h(\"div\", {\n        \"data-testid\": \"active-chat\",\n        className: \"chat__activechat\"\n      }, this.renderActiveChatChannel(channelHeader)));\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\n_defineProperty(Chat, \"propTypes\", {\n  pusherKey: PropTypes.number.isRequired,\n  chatChannels: PropTypes.string.isRequired,\n  chatOptions: PropTypes.string.isRequired,\n  githubToken: PropTypes.string.isRequired,\n  tagModerator: PropTypes.shape({\n    isTagModerator: PropTypes.bool.isRequired\n  }).isRequired\n});\n\nexport { Chat as default };","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/chat/chat.jsx"],"names":["h","Component","PropTypes","setupPusher","notifyUser","debounceAction","addSnackbarItem","processImageUpload","conductModeration","getAllMessages","sendMessage","sendOpen","getChannels","getUnopenedChannelIds","getContent","deleteMessage","editMessage","CreateChatModal","sendChannelRequest","rejectJoiningRequest","acceptJoiningRequest","getChannelRequestInfo","hideMessages","scrollToBottom","setupObserver","getCurrentUser","channelSorter","Alert","Channels","Compose","Message","ActionMessage","Content","VideoContent","DragAndDropZone","dragAndUpload","Button","NARROW_WIDTH_LIMIT","WIDE_WIDTH_LIMIT","Chat","props","then","response","result","user_joining_requests","channel_joining_memberships","totalRequest","length","setState","userRequestCount","channels","id","currentUserId","filter","channel","chat_channel_id","parseInt","viewable_by","channelName","subscribedPusherChannels","state","pusherKey","includes","channelId","messageCreated","receiveNewMessage","messageDeleted","removeMessage","messageEdited","updateMessage","channelCleared","clearChannel","redactUserMessages","channelError","mentioned","messageOpened","subscriptions","push","query","activeChannelId","appDomain","activeChannel","chatChannels","scrolled","channelsLoaded","channelPaginationNum","filterQuery","filterForActiveChannel","setupChannel","triggerSwitchChannel","channel_modified_slug","setupChannels","subscribeChannelsToPusher","channelTypeFilterFn","chatChannelsList","document","getElementById","scrollTop","ids","unopenedChannelIds","channelNameFn","forEach","subscribePusher","type","channel_type","index","currentChannels","currentChannelIds","map","newChannels","fetchingPaginatedChannels","messages","messageOffset","reception_method","receiveAllMessages","setOpenChannelUsers","res","Object","obj","predicate","fromEntries","entries","leftUser","channel_users","username","window","currentUser","channelUsers","all","name","entry","isIntersecting","showAlert","rerenderIfUnchangedCheck","Math","random","_error","chatChannelId","prevState","message","oldmessage","newMessages","foundIndex","findIndex","oldMessage","receivedChatChannelId","messageList","nearBottom","offsetHeight","scrollHeight","user_id","hidden","temp_id","slice","shift","newShowAlert","newMessageChannelIndex","newMessageChannel","newChannelsObj","channel_last_message_at","Date","splice","unshift","handleChannelOpenSuccess","newUnopenedChannels","userId","e","channelTypeFilter","target","filters","searchParams","retrievalID","searchType","paginationNumber","loadPaginatedChannels","showMemberlist","activeContent","enterPressed","keyCode","leftPressed","rightPressed","escPressed","targetValue","value","messageIsEmpty","shiftPressed","shiftKey","upArrowPressed","deletePressed","preventDefault","selectedUser","getElementsByClassName","addUserName","handleMessageSubmit","contentWindow","location","href","err","path","richLinks","setActiveContentState","type_of","setActiveContent","fullscreenContent","expanded","innerWidth","messagesByCurrentUser","lastMessage","triggerEditMessage","triggerDeleteMessage","handleMessageSubmitEdit","activeEditMessage","editedMessage","handleSuccess","handleFailure","handleEditMessageClose","startsWith","messageObject","mentionedUsersId","getMentionedUsers","videoPath","replace","sendCanvasImage","args","split","trim","chatContainer","classList","remove","hideChannelList","dataset","parentElement","channelSlug","slug","isMobileDevice","channelList","newUnopenedChannelIds","indexOf","updatedActiveChannel","allMessagesLoaded","unopenedId","params","URLSearchParams","search","get","history","replaceState","focus","ga","create","pathname","messageId","messageDeleteId","showDeleteModal","startEditing","status","addCloseButton","membershipId","handleJoiningManagerSuccess","isAccepted","acceptedInfo","loadChannels","ctrlKey","metaKey","button","content","stopPropagation","data","user","channelStatus","handleJoiningRequest","updateRequestCount","handleUpdateRequestCount","mode","activeMembershipId","handleLeavingChannel","setTimeout","scrollLeft","last_opened_at","leftChannelId","channelType","console","error","showTimestamp","color","channel_name","action","profile_image_url","timestamp","triggerActiveContent","edited_at","triggerReportMessage","find","active","triggerChannelTypeFilter","searchShowing","showChannelsList","notificationsPermission","notificationsButton","notificationsState","invitesButton","joiningRequestButton","debouncedChannelFilter","renderChannelFilterButton","isTagModerator","toggleModalCreateChannel","openModal","handleCreateChannelSuccess","handleSwitchChannel","add","jumpbackButton","scroller","scrolledRatio","clientHeight","addMoreMessages","curretPosition","currentMessageLocation","event","currentTarget","files","dataTransfer","handleImageSuccess","handleImageFailure","links","image","mLink","el","start","selectionStart","end","selectionEnd","text","before","substring","lastIndexOf","after","channelHeader","handleDragOver","handleDragExit","handleImageDrop","handleMessageScroll","renderMessages","jumpBacktoBottom","renderDeleteModal","renderChannelMembersList","handleSubmitOnClick","handleKeyDown","handleSubmitOnClickEdit","handleMention","handleKeyUp","handleKeyDownEdit","markdownEdited","markdown","handleFilePaste","closeReportAbuseForm","onTriggerVideoContent","clipboardData","items","i","item","kind","getAsFile","mention","memberListElement","setQuery","listHighlightManager","memberFilterQuery","dispatchEvent","Event","mentionList","activeElement","children","nextElementSibling","previousElementSibling","Array","from","values","filterRegx","RegExp","match","profile_image","display","padding","handleMessageDelete","handleCloseDeleteModal","handleJoiningRequestSuccess","toggleSearchShowing","navigateToChannelsList","channel_username","dataContent","contentLink","JSON","parse","chatOptions","triggerChannelFilter","bind","body","orientation","tagModerator","channelsForPusherSub","observerCallback","markUnopenedChannelIds","addEventListener","handleChannelScroll","handleRequestCount","nextProps","nextState","messageArea","renderChannelBackNav","renderChannelHeaderInner","renderChannelConfigImage","fullscreenMode","renderChatChannels","renderActiveChatChannel","number","isRequired","string","githubToken","shape","bool"],"mappings":"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","sourcesContent":["/*\n  eslint-disable\n  consistent-return, no-unused-vars, react/destructuring-assignment,\n  react/no-access-state-in-setstate, react/button-has-type\n*/\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { setupPusher } from '../utilities/connect';\nimport notifyUser from '../utilities/connect/newMessageNotify';\nimport debounceAction from '../utilities/debounceAction';\nimport { addSnackbarItem } from '../Snackbar';\nimport { processImageUpload } from '../article-form/actions';\nimport {\n  conductModeration,\n  getAllMessages,\n  sendMessage,\n  sendOpen,\n  getChannels,\n  getUnopenedChannelIds,\n  getContent,\n  deleteMessage,\n  editMessage,\n} from './actions/actions';\nimport CreateChatModal from './components/CreateChatModal';\nimport {\n  sendChannelRequest,\n  rejectJoiningRequest,\n  acceptJoiningRequest,\n  getChannelRequestInfo,\n} from './actions/requestActions';\nimport {\n  hideMessages,\n  scrollToBottom,\n  setupObserver,\n  getCurrentUser,\n  channelSorter,\n} from './util';\nimport Alert from './alert';\nimport Channels from './channels';\nimport Compose from './compose';\nimport Message from './message';\nimport ActionMessage from './actionMessage';\nimport Content from './content';\nimport { VideoContent } from './videoContent';\nimport { DragAndDropZone } from '@utilities/dragAndDrop';\nimport { dragAndUpload } from '@utilities/dragAndUpload';\nimport { Button } from '@crayons';\n\nconst NARROW_WIDTH_LIMIT = 767;\nconst WIDE_WIDTH_LIMIT = 1600;\n\nexport default class Chat extends Component {\n  static propTypes = {\n    pusherKey: PropTypes.number.isRequired,\n    chatChannels: PropTypes.string.isRequired,\n    chatOptions: PropTypes.string.isRequired,\n    githubToken: PropTypes.string.isRequired,\n    tagModerator: PropTypes.shape({ isTagModerator: PropTypes.bool.isRequired })\n      .isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    const chatChannels = JSON.parse(props.chatChannels);\n    const chatOptions = JSON.parse(props.chatOptions);\n\n    this.debouncedChannelFilter = debounceAction(\n      this.triggerChannelFilter.bind(this),\n    );\n\n    this.state = {\n      appDomain: document.body.dataset.appDomain,\n      messages: [],\n      scrolled: false,\n      showAlert: false,\n      chatChannels,\n      unopenedChannelIds: [],\n      filterQuery: '',\n      channelTypeFilter: 'all',\n      channelsLoaded: false,\n      channelPaginationNum: 0,\n      fetchingPaginatedChannels: false,\n      activeChannelId: chatOptions.activeChannelId,\n      activeChannel: null,\n      showChannelsList: chatOptions.showChannelsList,\n      showTimestamp: chatOptions.showTimestamp,\n      currentUserId: chatOptions.currentUserId,\n      notificationsPermission: null,\n      activeContent: {},\n      fullscreenContent: null,\n      videoPath: null,\n      expanded: window.innerWidth > NARROW_WIDTH_LIMIT,\n      isMobileDevice: typeof window.orientation !== 'undefined',\n      subscribedPusherChannels: [],\n      messageOffset: 0,\n      showDeleteModal: false,\n      messageDeleteId: null,\n      allMessagesLoaded: false,\n      currentMessageLocation: 0,\n      startEditing: false,\n      activeEditMessage: {},\n      markdownEdited: false,\n      searchShowing: false,\n      channelUsers: [],\n      showMemberlist: false,\n      memberFilterQuery: null,\n      rerenderIfUnchangedCheck: null,\n      userRequestCount: 0,\n      openModal: false,\n      isTagModerator: JSON.parse(props.tagModerator).isTagModerator,\n    };\n    if (chatOptions.activeChannelId) {\n      getAllMessages(chatOptions.activeChannelId, 0, this.receiveAllMessages);\n    }\n  }\n\n  componentDidMount() {\n    const {\n      chatChannels,\n      activeChannelId,\n      showChannelsList,\n      channelTypeFilter,\n      isMobileDevice,\n      channelPaginationNum,\n      currentUserId,\n      appDomain,\n      messageOffset,\n    } = this.state;\n\n    this.setupChannels(chatChannels);\n\n    const channelsForPusherSub = chatChannels.filter(\n      this.channelTypeFilterFn('open'),\n    );\n    this.subscribeChannelsToPusher(\n      channelsForPusherSub,\n      (channel) => `open-channel--${appDomain}-${channel.chat_channel_id}`,\n    );\n\n    setupObserver(this.observerCallback);\n\n    this.subscribePusher(\n      `private-message-notifications--${appDomain}-${currentUserId}`,\n    );\n\n    if (activeChannelId) {\n      sendOpen(activeChannelId, this.handleChannelOpenSuccess, null);\n    }\n    if (showChannelsList) {\n      const filters =\n        channelTypeFilter === 'all'\n          ? {}\n          : { filters: `channel_type:${channelTypeFilter}` };\n      const searchParams = {\n        query: '',\n        retrievalID: activeChannelId,\n        searchType: '',\n        paginationNumber: channelPaginationNum,\n      };\n      if (activeChannelId !== null) {\n        searchParams.searchType = 'discoverable';\n      }\n      getChannels(searchParams, filters, this.loadChannels);\n      getUnopenedChannelIds(this.markUnopenedChannelIds);\n    }\n    if (!isMobileDevice) {\n      document.getElementById('messageform').focus();\n    }\n    if (document.getElementById('chatchannels__channelslist')) {\n      document\n        .getElementById('chatchannels__channelslist')\n        .addEventListener('scroll', this.handleChannelScroll);\n    }\n\n    this.handleRequestCount();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.state.rerenderIfUnchangedCheck !== nextState.rerenderIfUnchangedCheck\n    ) {\n      return false;\n    }\n  }\n\n  componentDidUpdate() {\n    const { scrolled, currentMessageLocation } = this.state;\n    const messageList = document.getElementById('messagelist');\n    if (messageList) {\n      if (!scrolled) {\n        scrollToBottom();\n      }\n    }\n\n    if (currentMessageLocation && messageList.scrollTop === 0) {\n      messageList.scrollTop =\n        messageList.scrollHeight - (currentMessageLocation + 30);\n    }\n  }\n\n  handleRequestCount = () => {\n    getChannelRequestInfo().then((response) => {\n      const { result } = response;\n      const { user_joining_requests, channel_joining_memberships } = result;\n      let totalRequest =\n        user_joining_requests?.length + channel_joining_memberships?.length;\n      this.setState({\n        userRequestCount: totalRequest,\n      });\n    });\n  };\n\n  filterForActiveChannel = (channels, id, currentUserId) =>\n    channels.filter(\n      (channel) =>\n        channel.chat_channel_id === parseInt(id, 10) &&\n        channel.viewable_by === parseInt(currentUserId, 10),\n    )[0];\n\n  subscribePusher = (channelName) => {\n    const { subscribedPusherChannels } = this.state;\n    const { pusherKey } = this.props;\n    if (!subscribedPusherChannels.includes(channelName)) {\n      setupPusher(pusherKey, {\n        channelId: channelName,\n        messageCreated: this.receiveNewMessage,\n        messageDeleted: this.removeMessage,\n        messageEdited: this.updateMessage,\n        channelCleared: this.clearChannel,\n        redactUserMessages: this.redactUserMessages,\n        channelError: this.channelError,\n        mentioned: this.mentioned,\n        messageOpened: this.messageOpened,\n      });\n      const subscriptions = subscribedPusherChannels;\n      subscriptions.push(channelName);\n      this.setState({ subscribedPusherChannels: subscriptions });\n    }\n  };\n\n  mentioned = () => {};\n\n  messageOpened = () => {};\n\n  loadChannels = (channels, query) => {\n    const { activeChannelId, appDomain } = this.state;\n    const activeChannel =\n      this.state.activeChannel ||\n      channels.filter(\n        (channel) => channel.chat_channel_id === activeChannelId,\n      )[0];\n    if (activeChannelId && query.length === 0) {\n      this.setState({\n        chatChannels: channels,\n        scrolled: false,\n        channelsLoaded: true,\n        channelPaginationNum: 0,\n        filterQuery: '',\n        activeChannel:\n          activeChannel ||\n          this.filterForActiveChannel(channels, activeChannelId),\n      });\n      this.setupChannel(activeChannelId, activeChannel);\n    } else if (activeChannelId) {\n      this.setState({\n        scrolled: false,\n        chatChannels: channels,\n        channelsLoaded: true,\n        channelPaginationNum: 0,\n        filterQuery: query,\n        activeChannel:\n          activeChannel ||\n          this.filterForActiveChannel(channels, activeChannelId),\n      });\n      this.setupChannel(activeChannelId, activeChannel);\n    } else if (channels.length > 0) {\n      this.setState({\n        chatChannels: channels,\n        channelsLoaded: true,\n        channelPaginationNum: 0,\n        filterQuery: query || '',\n        scrolled: false,\n      });\n\n      this.triggerSwitchChannel(\n        channels[0].chat_channel_id,\n        channels[0].channel_modified_slug,\n        channels,\n      );\n      this.setupChannels(channels);\n    } else {\n      this.setState({ channelsLoaded: true });\n    }\n    this.subscribeChannelsToPusher(\n      channels.filter(this.channelTypeFilterFn('open')),\n      (channel) => `open-channel--${appDomain}-${channel.chat_channel_id}`,\n    );\n    this.subscribeChannelsToPusher(\n      channels.filter(this.channelTypeFilterFn('invite_only')),\n      (channel) => `private-channel--${appDomain}-${channel.chat_channel_id}`,\n    );\n    const chatChannelsList = document.getElementById(\n      'chatchannels__channelslist',\n    );\n\n    if (chatChannelsList) {\n      chatChannelsList.scrollTop = 0;\n    }\n  };\n\n  markUnopenedChannelIds = (ids) => {\n    this.setState({ unopenedChannelIds: ids });\n  };\n\n  subscribeChannelsToPusher = (channels, channelNameFn) => {\n    channels.forEach((channel) => {\n      this.subscribePusher(channelNameFn(channel));\n    });\n  };\n\n  channelTypeFilterFn = (type) => (channel) => {\n    return channel.channel_type === type;\n  };\n\n  setupChannels = (channels) => {\n    const { activeChannel } = this.state;\n    channels.forEach((channel, index) => {\n      if (index < 3) {\n        this.setupChannel(channel.chat_channel_id, activeChannel);\n      }\n    });\n  };\n\n  loadPaginatedChannels = (channels) => {\n    const { state } = this;\n    const currentChannels = state.chatChannels;\n    const currentChannelIds = currentChannels.map((channel) => channel.id);\n    const newChannels = currentChannels;\n    channels.forEach((channel) => {\n      if (!currentChannelIds.includes(channel.id)) {\n        newChannels.push(channel);\n      }\n    });\n    if (\n      currentChannels.length === newChannels.length &&\n      state.channelPaginationNum > 3\n    ) {\n      return;\n    }\n    this.setState({\n      chatChannels: newChannels,\n      fetchingPaginatedChannels: false,\n      channelPaginationNum: state.channelPaginationNum + 1,\n    });\n  };\n\n  setupChannel = (channelId, activeChannel) => {\n    const { messages, messageOffset, appDomain } = this.state;\n    if (\n      !messages[channelId] ||\n      messages[channelId].length === 0 ||\n      messages[channelId][0].reception_method === 'pushed'\n    ) {\n      getAllMessages(channelId, messageOffset, this.receiveAllMessages);\n    }\n    if (\n      activeChannel &&\n      activeChannel.channel_type !== 'direct' &&\n      activeChannel.chat_channel_id === channelId\n    ) {\n      getContent(\n        `/chat_channels/${channelId}/channel_info`,\n        this.setOpenChannelUsers,\n        null,\n      );\n      if (activeChannel.channel_type === 'open')\n        this.subscribePusher(`open-channel--${appDomain}-${channelId}`);\n    }\n    this.subscribePusher(`private-channel--${appDomain}-${channelId}`);\n  };\n\n  setOpenChannelUsers = (res) => {\n    const { activeChannelId, activeChannel } = this.state;\n    Object.filter = (obj, predicate) =>\n      Object.fromEntries(Object.entries(obj).filter(predicate));\n    const leftUser = Object.filter(\n      res.channel_users,\n      ([username]) => username !== window.currentUser.username,\n    );\n    if (activeChannel && activeChannel.channel_type === 'open') {\n      this.setState({\n        channelUsers: {\n          [activeChannelId]: leftUser,\n        },\n      });\n    } else {\n      this.setState({\n        channelUsers: {\n          [activeChannelId]: {\n            all: { username: 'all', name: 'To notify everyone here' },\n            ...leftUser,\n          },\n        },\n      });\n    }\n  };\n\n  observerCallback = (entries) => {\n    entries.forEach((entry) => {\n      if (entry.isIntersecting && this.state.scrolled === true) {\n        this.setState({ scrolled: false, showAlert: false });\n      } else if (this.state.scrolled === false) {\n        this.setState({\n          scrolled: true,\n          rerenderIfUnchangedCheck: Math.random(),\n        });\n      }\n    });\n  };\n\n  channelError = (_error) => {\n    this.setState({\n      subscribedPusherChannels: [],\n    });\n  };\n\n  receiveAllMessages = (res) => {\n    const { chatChannelId, messages } = res;\n    this.setState((prevState) => ({\n      messages: { ...prevState.messages, [chatChannelId]: messages },\n      scrolled: false,\n    }));\n  };\n\n  removeMessage = (message) => {\n    const { activeChannelId } = this.state;\n    this.setState((prevState) => ({\n      messages: {\n        [activeChannelId]: [\n          ...prevState.messages[activeChannelId].filter(\n            (oldmessage) => oldmessage.id !== message.id,\n          ),\n        ],\n      },\n    }));\n  };\n\n  updateMessage = (message) => {\n    const { activeChannelId } = this.state;\n    if (message.chat_channel_id === activeChannelId) {\n      this.setState(({ messages }) => {\n        const newMessages = messages;\n        const foundIndex = messages[activeChannelId].findIndex(\n          (oldMessage) => oldMessage.id === message.id,\n        );\n        newMessages[activeChannelId][foundIndex] = message;\n        return { messages: newMessages };\n      });\n    }\n  };\n\n  receiveNewMessage = (message) => {\n    const {\n      messages,\n      activeChannelId,\n      scrolled,\n      chatChannels,\n      currentUserId,\n      unopenedChannelIds,\n    } = this.state;\n\n    const receivedChatChannelId = message.chat_channel_id;\n    const messageList = document.getElementById('messagelist');\n    let newMessages = [];\n    const nearBottom =\n      messageList.scrollTop + messageList.offsetHeight + 400 >\n      messageList.scrollHeight;\n\n    if (nearBottom) {\n      scrollToBottom();\n    }\n\n    // If I'm not sender and tab is not active\n    if (message.user_id !== currentUserId && document.hidden) {\n      notifyUser();\n    }\n\n    if (\n      message.temp_id &&\n      messages[receivedChatChannelId] &&\n      messages[receivedChatChannelId].findIndex(\n        (oldmessage) => oldmessage.temp_id === message.temp_id,\n      ) > -1\n    ) {\n      // Remove reduntant messages\n      return;\n    }\n\n    if (messages[receivedChatChannelId]) {\n      newMessages = messages[receivedChatChannelId].slice();\n      newMessages.push(message);\n      if (newMessages.length > 150) {\n        newMessages.shift();\n      }\n    }\n\n    // Show alert if message received and you have scrolled up\n    const newShowAlert =\n      activeChannelId === receivedChatChannelId\n        ? { showAlert: !nearBottom }\n        : {};\n\n    let newMessageChannelIndex = 0;\n    let newMessageChannel = null;\n    const newChannelsObj = chatChannels.map((channel, index) => {\n      if (receivedChatChannelId === channel.chat_channel_id) {\n        newMessageChannelIndex = index;\n        newMessageChannel = channel;\n        return { ...channel, channel_last_message_at: new Date() };\n      }\n      return channel;\n    });\n\n    if (newMessageChannelIndex > 0) {\n      newChannelsObj.splice(newMessageChannelIndex, 1);\n      newChannelsObj.unshift(newMessageChannel);\n    }\n\n    // Mark messages read\n    if (receivedChatChannelId === activeChannelId) {\n      sendOpen(receivedChatChannelId, this.handleChannelOpenSuccess, null);\n    } else {\n      const newUnopenedChannels = unopenedChannelIds;\n      if (!unopenedChannelIds.includes(receivedChatChannelId)) {\n        newUnopenedChannels.push(receivedChatChannelId);\n      }\n      this.setState({\n        unopenedChannelIds: newUnopenedChannels,\n      });\n    }\n\n    // Updating the messages\n    this.setState((prevState) => ({\n      ...newShowAlert,\n      chatChannels: newChannelsObj,\n      messages: {\n        ...prevState.messages,\n        [receivedChatChannelId]: newMessages,\n      },\n    }));\n  };\n\n  redactUserMessages = (res) => {\n    const { messages } = this.state;\n    const newMessages = hideMessages(messages, res.userId);\n    this.setState({ messages: newMessages });\n  };\n\n  clearChannel = (res) => {\n    this.setState((prevState) => ({\n      messages: { ...prevState.messages, [res.chat_channel_id]: [] },\n    }));\n  };\n\n  handleChannelScroll = (e) => {\n    const {\n      fetchingPaginatedChannels,\n      chatChannels,\n      channelTypeFilter,\n      filterQuery,\n      activeChannelId,\n      channelPaginationNum,\n    } = this.state;\n\n    if (fetchingPaginatedChannels || chatChannels.length < 30) {\n      return;\n    }\n    const { target } = e;\n    if (target.scrollTop + target.offsetHeight + 1800 > target.scrollHeight) {\n      this.setState({ fetchingPaginatedChannels: true });\n\n      const filters =\n        channelTypeFilter === 'all'\n          ? {}\n          : { filters: `channel_type:${channelTypeFilter}` };\n      const searchParams = {\n        query: filterQuery,\n        retrievalID: activeChannelId,\n        searchType: '',\n        paginationNumber: channelPaginationNum,\n      };\n      getChannels(searchParams, filters, this.loadPaginatedChannels);\n    }\n  };\n\n  handleKeyDown = (e) => {\n    const {\n      showMemberlist,\n      activeContent,\n      activeChannelId,\n      messages,\n      currentUserId,\n    } = this.state;\n    const enterPressed = e.keyCode === 13;\n    const leftPressed = e.keyCode === 37;\n    const rightPressed = e.keyCode === 39;\n    const escPressed = e.keyCode === 27;\n    const targetValue = e.target.value;\n    const messageIsEmpty = targetValue.length === 0;\n    const shiftPressed = e.shiftKey;\n    const upArrowPressed = e.keyCode === 38;\n    const deletePressed = e.keyCode === 46;\n\n    if (enterPressed) {\n      if (showMemberlist) {\n        e.preventDefault();\n        const selectedUser = document.getElementsByClassName(\n          'active__message__list',\n        )[0];\n        this.addUserName({ target: selectedUser });\n      } else if (messageIsEmpty) {\n        e.preventDefault();\n      } else if (!messageIsEmpty && !shiftPressed) {\n        e.preventDefault();\n        this.handleMessageSubmit(e.target.value);\n      }\n    }\n    if (e.target.value.includes('@')) {\n      if (e.keyCode === 40 || e.keyCode === 38) {\n        e.preventDefault();\n      }\n    }\n    if (\n      leftPressed &&\n      activeContent[activeChannelId] &&\n      e.target.value === '' &&\n      document.getElementById('activecontent-iframe')\n    ) {\n      e.preventDefault();\n      try {\n        e.target.value = document.getElementById(\n          'activecontent-iframe',\n        ).contentWindow.location.href;\n      } catch (err) {\n        e.target.value = activeContent[activeChannelId].path;\n      }\n    }\n    if (\n      rightPressed &&\n      !activeContent[activeChannelId] &&\n      e.target.value === ''\n    ) {\n      e.preventDefault();\n      const richLinks = document.getElementsByClassName(\n        'chatchannels__richlink',\n      );\n      if (richLinks.length === 0) {\n        return;\n      }\n      this.setActiveContentState(activeChannelId, {\n        type_of: 'loading-post',\n      });\n      this.setActiveContent({\n        path: richLinks[richLinks.length - 1].href,\n        type_of: 'article',\n      });\n    }\n    if (escPressed && activeContent[activeChannelId]) {\n      this.setActiveContentState(activeChannelId, null);\n      this.setState({\n        fullscreenContent: null,\n        expanded: window.innerWidth > NARROW_WIDTH_LIMIT,\n      });\n    }\n    if (messageIsEmpty) {\n      const messagesByCurrentUser = messages[activeChannelId].filter(\n        (message) => message.user_id === currentUserId,\n      );\n      const lastMessage =\n        messagesByCurrentUser[messagesByCurrentUser.length - 1];\n\n      if (lastMessage) {\n        if (upArrowPressed) {\n          this.triggerEditMessage(lastMessage.id);\n        } else if (deletePressed) {\n          this.triggerDeleteMessage(lastMessage.id);\n        }\n      }\n    }\n  };\n\n  handleKeyDownEdit = (e) => {\n    const enterPressed = e.keyCode === 13;\n    const targetValue = e.target.value;\n    const messageIsEmpty = targetValue.length === 0;\n    const shiftPressed = e.shiftKey;\n\n    if (enterPressed) {\n      if (messageIsEmpty) {\n        e.preventDefault();\n      } else if (!messageIsEmpty && !shiftPressed) {\n        e.preventDefault();\n        this.handleMessageSubmitEdit(e.target.value);\n      }\n    }\n  };\n\n  handleMessageSubmitEdit = (message) => {\n    const { activeChannelId, activeEditMessage } = this.state;\n    const editedMessage = {\n      activeChannelId,\n      id: activeEditMessage.id,\n      message,\n    };\n    editMessage(editedMessage, this.handleSuccess, this.handleFailure);\n    this.handleEditMessageClose();\n  };\n\n  handleMessageSubmit = (message) => {\n    const { activeChannelId } = this.state;\n    scrollToBottom();\n    // should check if user has the privilege\n    if (message.startsWith('/code')) {\n      this.setActiveContentState(activeChannelId, { type_of: 'code_editor' });\n    } else if (message.startsWith('/call')) {\n      const messageObject = {\n        activeChannelId,\n        message: '/call',\n        mentionedUsersId: this.getMentionedUsers(message),\n      };\n      this.setState({ videoPath: `/video_chats/${activeChannelId}` });\n      sendMessage(messageObject, this.handleSuccess, this.handleFailure);\n    } else if (message.startsWith('/play ')) {\n      const messageObject = {\n        activeChannelId,\n        message,\n        mentionedUsersId: this.getMentionedUsers(message),\n      };\n      sendMessage(messageObject, this.handleSuccess, this.handleFailure);\n    } else if (message.startsWith('/new')) {\n      this.setActiveContentState(activeChannelId, {\n        type_of: 'loading-post',\n      });\n      this.setActiveContent({\n        path: '/new',\n        type_of: 'article',\n      });\n    } else if (message.startsWith('/search')) {\n      this.setActiveContentState(activeChannelId, {\n        type_of: 'loading-post',\n      });\n      this.setActiveContent({\n        path: `/search?q=${message.replace('/search ', '')}`,\n        type_of: 'article',\n      });\n    } else if (message.startsWith('/s ')) {\n      this.setActiveContentState(activeChannelId, {\n        type_of: 'loading-post',\n      });\n      this.setActiveContent({\n        path: `/search?q=${message.replace('/s ', '')}`,\n        type_of: 'article',\n      });\n    } else if (message.startsWith('/ban ') || message.startsWith('/unban ')) {\n      conductModeration(\n        activeChannelId,\n        message,\n        this.handleSuccess,\n        this.handleFailure,\n      );\n    } else if (message.startsWith('/draw')) {\n      this.setActiveContent({\n        sendCanvasImage: this.sendCanvasImage,\n        type_of: 'draw',\n      });\n    } else if (message.startsWith('/')) {\n      this.setActiveContentState(activeChannelId, {\n        type_of: 'loading-post',\n      });\n      this.setActiveContent({\n        path: message,\n        type_of: 'article',\n      });\n    } else if (message.startsWith('/github')) {\n      const args = message.split('/github ')[1].trim();\n      this.setActiveContentState(activeChannelId, { type_of: 'github', args });\n    } else {\n      const messageObject = {\n        activeChannelId,\n        message,\n        mentionedUsersId: this.getMentionedUsers(message),\n      };\n      this.setState({ scrolled: false, showAlert: false });\n      sendMessage(messageObject, this.handleSuccess, this.handleFailure);\n    }\n  };\n  hideChannelList = () => {\n    const chatContainer = document.getElementsByClassName(\n      'chat__activechat',\n    )[0];\n    chatContainer.classList.remove('chat__activechat--hidden');\n  };\n  handleSwitchChannel = (e) => {\n    e.preventDefault();\n    let { target } = e;\n    this.hideChannelList();\n    if (!target.dataset.channelId) {\n      target = target.parentElement;\n    }\n    this.triggerSwitchChannel(\n      parseInt(target.dataset.channelId, 10),\n      target.dataset.channelSlug,\n    );\n  };\n\n  triggerSwitchChannel = (id, slug, channels) => {\n    const {\n      chatChannels,\n      isMobileDevice,\n      unopenedChannelIds,\n      activeChannelId,\n      currentUserId,\n    } = this.state;\n    const channelList = channels || chatChannels;\n    const newUnopenedChannelIds = unopenedChannelIds;\n    const index = newUnopenedChannelIds.indexOf(id);\n    if (index > -1) {\n      newUnopenedChannelIds.splice(index, 1);\n    }\n\n    let updatedActiveChannel = this.filterForActiveChannel(\n      channelList,\n      id,\n      currentUserId,\n    );\n\n    this.setState({\n      activeChannel: updatedActiveChannel,\n      activeChannelId: parseInt(id, 10),\n      scrolled: false,\n      showAlert: false,\n      allMessagesLoaded: false,\n      showMemberlist: false,\n      unopenedChannelIds: unopenedChannelIds.filter(\n        (unopenedId) => unopenedId !== id,\n      ),\n    });\n\n    this.setupChannel(id, updatedActiveChannel);\n    const params = new URLSearchParams(window.location.search);\n\n    if (params.get('ref') === 'group_invite') {\n      this.setActiveContentState(activeChannelId, {\n        type_of: 'loading-post',\n      });\n      this.setActiveContent({\n        path: '/chat_channel_memberships',\n        type_of: 'article',\n      });\n    }\n    window.history.replaceState(null, null, `/connect/${slug}`);\n    if (!isMobileDevice) {\n      document.getElementById('messageform').focus();\n    }\n    if (window.ga && ga.create) {\n      ga('send', 'pageview', window.location.pathname + window.location.search);\n    }\n    sendOpen(id, this.handleChannelOpenSuccess, null);\n  };\n\n  handleSubmitOnClick = (e) => {\n    e.preventDefault();\n    const message = document.getElementById('messageform').value;\n    if (message.length > 0) {\n      this.handleMessageSubmit(message);\n    }\n  };\n\n  handleSubmitOnClickEdit = (e) => {\n    e.preventDefault();\n    const message = document.getElementById('messageform').value;\n    if (message.length > 0) {\n      this.handleMessageSubmitEdit(message);\n    }\n  };\n\n  triggerDeleteMessage = (messageId) => {\n    this.setState({ messageDeleteId: messageId });\n    this.setState({ showDeleteModal: true });\n  };\n\n  triggerEditMessage = (messageId) => {\n    const { messages, activeChannelId } = this.state;\n    this.setState({\n      activeEditMessage: messages[activeChannelId].filter(\n        (message) => message.id === messageId,\n      )[0],\n    });\n    this.setState({ startEditing: true });\n  };\n\n  handleSuccess = (response) => {\n    const { activeChannelId } = this.state;\n    scrollToBottom();\n    if (response.status === 'success') {\n      if (response.message.temp_id) {\n        this.setState(({ messages }) => {\n          const newMessages = messages;\n          const foundIndex = messages[activeChannelId].findIndex(\n            (message) => message.temp_id === response.message.temp_id,\n          );\n          if (foundIndex > 0) {\n            newMessages[activeChannelId][foundIndex].id = response.message.id;\n          }\n          return { messages: newMessages };\n        });\n      }\n    } else if (response.status === 'moderation-success') {\n      addSnackbarItem({ message: response.message, addCloseButton: true });\n    } else if (response.status === 'error') {\n      addSnackbarItem({ message: response.message, addCloseButton: true });\n    }\n  };\n\n  handleRequestRejection = (e) => {\n    rejectJoiningRequest(\n      e.target.dataset.channelId,\n      e.target.dataset.membershipId,\n      this.handleJoiningManagerSuccess(e.target.dataset.membershipId),\n      null,\n    );\n  };\n\n  handleRequestApproval = (e) => {\n    acceptJoiningRequest(\n      e.target.dataset.channelId,\n      e.target.dataset.membershipId,\n      this.handleJoiningManagerSuccess(e.target.dataset.membershipId),\n      null,\n    );\n  };\n\n  handleUpdateRequestCount = (isAccepted = false, acceptedInfo) => {\n    if (isAccepted) {\n      const searchParams = {\n        query: '',\n        retrievalID: null,\n        searchType: '',\n        paginationNumber: 0,\n      };\n      getChannels(searchParams, 'all', this.loadChannels);\n      this.triggerSwitchChannel(\n        parseInt(acceptedInfo.channelId, 10),\n        acceptedInfo.channelSlug,\n        this.state.chatChannels,\n      );\n    }\n\n    this.setState((prevState) => {\n      return {\n        userRequestCount: prevState.userRequestCount - 1,\n      };\n    });\n  };\n\n  triggerActiveContent = (e) => {\n    if (\n      // Trying to open in new tab\n      e.ctrlKey ||\n      e.shiftKey ||\n      e.metaKey || // apple\n      (e.button && e.button === 1) // middle click, >IE9 + everyone else\n    ) {\n      return false;\n    }\n    const { target } = e;\n    const content =\n      target.dataset.content || target.parentElement.dataset.content;\n    if (content) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.hideChannelList();\n\n      const { activeChannelId, activeChannel } = this.state;\n\n      if (content.startsWith('chat_channels/')) {\n        this.setActiveContentState(activeChannelId, {\n          type_of: 'loading-user',\n        });\n        getContent(`/${content}/channel_info`, this.setActiveContent, null);\n      } else if (content === 'sidecar-channel-request') {\n        this.setActiveContent({\n          data: {\n            user: getCurrentUser(),\n            channel: {\n              id: target.dataset.channelId,\n              name: target.dataset.channelName,\n              status: target.dataset.channelStatus,\n            },\n          },\n          handleJoiningRequest: this.handleJoiningRequest,\n          type_of: 'channel-request',\n        });\n      } else if (content === 'sidecar-joining-request-manager') {\n        this.setActiveContent({\n          data: {},\n          type_of: 'channel-request-manager',\n          updateRequestCount: this.handleUpdateRequestCount,\n        });\n      } else if (content === 'sidecar_all') {\n        this.setActiveContentState(activeChannelId, {\n          type_of: 'loading-post',\n        });\n        this.setActiveContent({\n          path: `/chat_channel_memberships/${activeChannel.id}/edit`,\n          type_of: 'article',\n        });\n      } else if (content.startsWith('sidecar-content-plus-video')) {\n        this.setActiveContentState(activeChannelId, {\n          type_of: 'loading-post',\n        });\n        this.setActiveContent({\n          path: target.href || target.parentElement.href,\n          type_of: 'article',\n        });\n        this.setState({ videoPath: `/video_chats/${activeChannelId}` });\n      } else if (content.startsWith('sidecar-video')) {\n        this.setState({ videoPath: target.href || target.parentElement.href });\n      } else if (\n        content.startsWith('sidecar') ||\n        content.startsWith('article')\n      ) {\n        // article is legacy which can be removed shortly\n        this.setActiveContentState(activeChannelId, {\n          type_of: 'loading-post',\n        });\n        this.setActiveContent({\n          path: target.href || target.parentElement.href,\n          type_of: 'article',\n        });\n      } else if (target.dataset.content === 'exit') {\n        this.setActiveContentState(activeChannelId, null);\n        this.setState({\n          fullscreenContent: null,\n          expanded: window.innerWidth > NARROW_WIDTH_LIMIT,\n        });\n      } else if (target.dataset.content === 'fullscreen') {\n        const mode =\n          this.state.fullscreenContent === 'sidecar' ? null : 'sidecar';\n        this.setState({\n          fullscreenContent: mode,\n          expanded: mode === null || window.innerWidth > WIDE_WIDTH_LIMIT,\n        });\n      } else if (target.dataset.content === 'chat_channel_setting') {\n        this.setActiveContent({\n          data: {},\n          type_of: 'chat-channel-setting',\n          activeMembershipId: activeChannel.id,\n          handleLeavingChannel: this.handleLeavingChannel,\n        });\n      }\n    }\n    return false;\n  };\n\n  setActiveContentState = (channelId, state) => {\n    this.setState((prevState) => ({\n      activeContent: {\n        ...prevState.activeContent,\n        [channelId]: state,\n      },\n    }));\n  };\n\n  closeReportAbuseForm = () => {\n    const { activeChannelId } = this.state;\n    this.setActiveContentState(activeChannelId, null);\n    this.setState({\n      fullscreenContent: null,\n      expanded: window.innerWidth > NARROW_WIDTH_LIMIT,\n    });\n  };\n\n  setActiveContent = (response) => {\n    const { activeChannelId } = this.state;\n    this.setActiveContentState(activeChannelId, response);\n    setTimeout(() => {\n      document.getElementById('chat_activecontent').scrollTop = 0;\n      document.getElementById('chat').scrollLeft = 1000;\n    }, 3);\n    setTimeout(() => {\n      document.getElementById('chat_activecontent').scrollTop = 0;\n      document.getElementById('chat').scrollLeft = 1000;\n    }, 10);\n  };\n\n  handleChannelOpenSuccess = (response) => {\n    this.setState(({ chatChannels }) => {\n      const newChannelsObj = chatChannels.map((channel) => {\n        if (parseInt(response.channel, 10) === channel.chat_channel_id) {\n          return { ...channel, last_opened_at: new Date() };\n        }\n        return channel;\n      });\n      return { chatChannels: newChannelsObj };\n    });\n  };\n\n  handleLeavingChannel = (leftChannelId) => {\n    const { chatChannels } = this.state;\n    this.triggerSwitchChannel(\n      chatChannels[1].chat_channel_id,\n      chatChannels[1].channel_modified_slug,\n      chatChannels,\n    );\n    this.setState((prevState) => ({\n      chatChannels: prevState.chatChannels.filter(\n        (channel) => channel.id !== leftChannelId,\n      ),\n    }));\n    this.setActiveContentState(chatChannels[1].chat_channel_id, null);\n  };\n\n  triggerChannelTypeFilter = (e) => {\n    const { filterQuery } = this.state;\n    const type = e.target.dataset.channelType;\n    this.setState({\n      channelTypeFilter: type,\n      fetchingPaginatedChannels: false,\n    });\n    const filters = type === 'all' ? {} : { filters: `channel_type:${type}` };\n    const searchParams = {\n      query: filterQuery,\n      retrievalID: null,\n      searchType: '',\n      paginationNumber: 0,\n    };\n    if (filterQuery && type !== 'direct') {\n      searchParams.searchType = 'discoverable';\n      getChannels(searchParams, filters, this.loadChannels);\n    } else {\n      getChannels(searchParams, filters, this.loadChannels);\n    }\n  };\n\n  handleFailure = (err) => {\n    // eslint-disable-next-line no-console\n    console.error(err);\n    addSnackbarItem({ message: err, addCloseButton: true });\n  };\n\n  renderMessages = () => {\n    const {\n      activeChannelId,\n      messages,\n      showTimestamp,\n      activeChannel,\n      currentUserId,\n    } = this.state;\n    if (!messages[activeChannelId]) {\n      return '';\n    }\n    if (messages[activeChannelId].length === 0 && activeChannel) {\n      if (activeChannel.channel_type === 'direct') {\n        return (\n          <div className=\"chatmessage\" style={{ color: 'grey' }}>\n            <div className=\"chatmessage__body\">\n              You and{' '}\n              <a href={`/${activeChannel.channel_modified_slug}`}>\n                {activeChannel.channel_modified_slug}\n              </a>{' '}\n              are connected because you both follow each other. All interactions{' '}\n              <em>\n                <b>must</b>\n              </em>{' '}\n              abide by the <a href=\"/code-of-conduct\">code of conduct</a>.\n            </div>\n          </div>\n        );\n      }\n      if (activeChannel.channel_type === 'open') {\n        return (\n          <div className=\"chatmessage\" style={{ color: 'grey' }}>\n            <div className=\"chatmessage__body\">\n              You have joined {activeChannel.channel_name}! All interactions{' '}\n              <em>\n                <b>must</b>\n              </em>{' '}\n              abide by the <a href=\"/code-of-conduct\">code of conduct</a>.\n            </div>\n          </div>\n        );\n      }\n    }\n    return messages[activeChannelId].map((message) =>\n      message.action ? (\n        <ActionMessage\n          user={message.username}\n          profileImageUrl={message.profile_image_url}\n          message={message.message}\n          timestamp={showTimestamp ? message.timestamp : null}\n          color={message.color}\n          onContentTrigger={this.triggerActiveContent}\n        />\n      ) : (\n        <Message\n          currentUserId={currentUserId}\n          id={message.id}\n          user={message.username}\n          userID={message.user_id}\n          profileImageUrl={message.profile_image_url}\n          message={message.message}\n          timestamp={showTimestamp ? message.timestamp : null}\n          editedAt={message.edited_at}\n          color={message.color}\n          onContentTrigger={this.triggerActiveContent}\n          onDeleteMessageTrigger={this.triggerDeleteMessage}\n          onEditMessageTrigger={this.triggerEditMessage}\n          onReportMessageTrigger={this.triggerReportMessage}\n        />\n      ),\n    );\n  };\n  triggerReportMessage = (messageId) => {\n    const { activeChannelId, messages } = this.state;\n\n    this.setActiveContent({\n      data: messages[activeChannelId].find(\n        (message) => message.id === messageId,\n      ),\n      type_of: 'message-report-abuse',\n    });\n  };\n  triggerChannelFilter = (e) => {\n    const { channelTypeFilter } = this.state;\n    const filters =\n      channelTypeFilter === 'all'\n        ? {}\n        : { filters: `channel_type:${channelTypeFilter}` };\n    const searchParams = {\n      query: e.target.value,\n      retrievalID: null,\n      searchType: '',\n      paginationNumber: 0,\n    };\n    if (e.target.value) {\n      searchParams.searchType = 'discoverable';\n      getChannels(searchParams, filters, this.loadChannels);\n    } else {\n      getChannels(searchParams, filters, this.loadChannels);\n    }\n  };\n\n  toggleExpand = () => {\n    this.setState((prevState) => ({ expanded: !prevState.expanded }));\n  };\n\n  renderChannelFilterButton = (type, name, active) => (\n    <Button\n      data-channel-type={type}\n      onClick={this.triggerChannelTypeFilter}\n      data-testid={name}\n      className={`chat__channeltypefilterbutton crayons-indicator crayons-indicator--${\n        type === active ? 'accent' : ''\n      }`}\n    >\n      {name}\n    </Button>\n  );\n\n  toggleSearchShowing = () => {\n    if (!this.state.searchShowing) {\n      setTimeout(() => {\n        document.getElementById('chatchannelsearchbar').focus();\n      }, 100);\n    } else {\n      const searchParams = {\n        query: '',\n        retrievalID: null,\n        searchType: '',\n        paginationNumber: 0,\n      };\n      getChannels(searchParams, 'all', this.loadChannels);\n      this.setState({ filterQuery: '' });\n    }\n    this.setState({ searchShowing: !this.state.searchShowing });\n  };\n\n  renderChatChannels = () => {\n    const { state } = this;\n    if (state.showChannelsList) {\n      const { notificationsPermission } = state;\n      const notificationsButton = '';\n      let notificationsState = '';\n      let invitesButton = '';\n      let joiningRequestButton = '';\n      if (notificationsPermission === 'granted') {\n        notificationsState = (\n          <div className=\"chat_chatconfig chat_chatconfig--on\">\n            Notifications On\n          </div>\n        );\n      } else if (notificationsPermission === 'denied') {\n        notificationsState = (\n          <div className=\"chat_chatconfig chat_chatconfig--off\">\n            Notifications Off\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"chat__channels\">\n          {notificationsButton}\n\n          <input\n            placeholder=\"Search Channels\"\n            onKeyUp={this.debouncedChannelFilter}\n            id=\"chatchannelsearchbar\"\n            className=\"crayons-textfield\"\n            aria-label=\"Search Channels\"\n          />\n          {invitesButton}\n          {joiningRequestButton}\n          <div className=\"chat__channeltypefilter\">\n            {this.renderChannelFilterButton(\n              'all',\n              'all',\n              state.channelTypeFilter,\n            )}\n            {this.renderChannelFilterButton(\n              'direct',\n              'direct',\n              state.channelTypeFilter,\n            )}\n            {this.renderChannelFilterButton(\n              'invite_only',\n              'group',\n              state.channelTypeFilter,\n            )}\n            <Button\n              className=\"chat__channelssearchtoggle crayons-btn--ghost-dimmed p-2\"\n              aria-label=\"Toggle request manager\"\n              onClick={this.triggerActiveContent}\n              data-content=\"sidecar-joining-request-manager\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 477.869 477.869\"\n                width=\"18\"\n                height=\"18\"\n              >\n                <path d=\"M387.415 233.496c48.976-44.03 52.987-119.424 8.958-168.4C355.99 20.177 288.4 12.546 239.02 47.332c-53.83-38-128.264-25.15-166.254 28.68-34.86 49.393-27.26 117.054 17.69 157.483C34.606 262.935-.25 320.976.002 384.108v51.2a17.07 17.07 0 0 0 17.067 17.067h443.733a17.07 17.07 0 0 0 17.067-17.067v-51.2c.252-63.132-34.605-121.173-90.454-150.612zM307.2 59.842c47.062-.052 85.256 38.057 85.31 85.12.037 33.564-19.63 64.023-50.237 77.8-1.314.597-2.628 1.143-3.96 1.707a83.66 83.66 0 0 1-12.988 4.045c-.853.188-1.707.3-2.577.46-4.952.95-9.977 1.457-15.02 1.52-2.27 0-4.557-.17-6.827-.375-.853 0-1.707 0-2.56-.17a86.22 86.22 0 0 1-27.904-8.226c-.324-.154-.7-.137-1.024-.273-1.707-.82-3.413-1.536-4.932-2.458.137-.17.222-.358.358-.53a119.72 119.72 0 0 0 18.278-33.297l.53-1.434a120.38 120.38 0 0 0 4.523-17.562c.154-.87.273-1.707.4-2.645.987-6.067 1.506-12.2 1.553-18.347a120.04 120.04 0 0 0-1.553-18.313l-.4-2.645c-1.064-5.96-2.576-11.83-4.523-17.562l-.53-1.434c-4.282-12-10.453-23.24-18.278-33.297-.137-.17-.222-.358-.358-.53C277.45 63.83 292.2 59.843 307.2 59.842zM85.335 145.176c-.12-47.006 37.886-85.2 84.892-85.33a85.11 85.11 0 0 1 59.134 23.686l2.918 2.9a87.75 87.75 0 0 1 8.09 9.813c.75 1.058 1.434 2.185 2.133 3.277a83.95 83.95 0 0 1 6.263 11.52c.427.973.75 1.963 1.126 2.935a83.42 83.42 0 0 1 4.233 13.653c.12.512.154 1.024.256 1.553a80.34 80.34 0 0 1 0 32.119c-.102.53-.137 1.04-.256 1.553a83.23 83.23 0 0 1-4.233 13.653c-.375.973-.7 1.963-1.126 2.935a84.25 84.25 0 0 1-6.263 11.503c-.7 1.092-1.382 2.22-2.133 3.277a87.55 87.55 0 0 1-8.09 9.813 117.37 117.37 0 0 1-2.918 2.901c-6.9 6.585-14.877 11.962-23.57 15.906a49.35 49.35 0 0 1-4.198 1.707 85.84 85.84 0 0 1-12.663 3.925c-1.075.24-2.185.375-3.277.563a84.67 84.67 0 0 1-14.046 1.417h-1.877c-4.713-.08-9.412-.554-14.046-1.417-1.092-.188-2.202-.324-3.277-.563a85.8 85.8 0 0 1-12.663-3.925l-4.198-1.707c-30.534-13.786-50.173-44.166-50.212-77.667zM307.2 418.242H34.135V384.11c-.25-57.833 36.188-109.468 90.76-128.614 29.296 12.197 62.25 12.197 91.546 0a137.14 137.14 0 0 1 16.623 7.356c3.55 1.826 6.827 3.908 10.24 6.007 2.22 1.382 4.47 2.73 6.605 4.25 3.294 2.338 6.4 4.88 9.455 7.492l5.75 5.12c2.816 2.662 5.46 5.478 8.004 8.363 1.826 2.082 3.6 4.198 5.29 6.383 2.236 2.867 4.37 5.803 6.35 8.823 1.707 2.56 3.226 5.222 4.727 7.885 1.707 2.935 3.277 5.87 4.7 8.926s2.697 6.4 3.925 9.66c1.075 2.833 2.22 5.65 3.106 8.533 1.195 3.96 2.03 8.055 2.867 12.15.512 2.423 1.178 4.796 1.553 7.253 1.01 6.757 1.53 13.58 1.553 20.412v34.133zm136.534 0h-102.4V384.11c0-5.342-.307-10.633-.785-15.872-.137-1.536-.375-3.055-.546-4.59-.46-3.772-1-7.51-1.707-11.213l-.973-4.762c-.82-3.8-1.77-7.566-2.85-11.298l-1.058-3.686c-4.78-15.277-11.704-29.797-20.565-43.127l-.666-.973a168.96 168.96 0 0 0-9.404-12.646l-.12-.154c-3.413-4.232-7.117-8.346-11.008-12.237h.7a120.8 120.8 0 0 0 14.524 1.024h.94c4.496-.04 8.985-.33 13.45-.87 1.4-.17 2.782-.427 4.18-.65a117.43 117.43 0 0 0 10.752-2.167l3.055-.785a116.21 116.21 0 0 0 13.653-4.642c54.612 19.127 91.083 70.785 90.83 128.65v34.132z\" />\n              </svg>\n              {this.state.userRequestCount > 0 ? (\n                <span className=\"crayons-indicator crayons-indicator--accent crayons-indicator--bullet requests-badge\">\n                  {this.state.userRequestCount}\n                </span>\n              ) : null}\n            </Button>\n            {this.state.isTagModerator ? (\n              <Button\n                className=\"chat__channelssearchtoggle crayons-btn--ghost-dimmed p-2\"\n                aria-label=\"Toggle request manager\"\n                onClick={this.toggleModalCreateChannel}\n                data-content=\"sidecar-joining-request-manager\"\n              >\n                <svg\n                  version=\"1.1\"\n                  id=\"Capa_1\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  x=\"0px\"\n                  y=\"0px\"\n                  width=\"18\"\n                  height=\"18\"\n                  viewBox=\"0 0 512 512\"\n                  style=\"enable-background:new 0 0 512 512;\"\n                >\n                  <path\n                    d=\"M492,236H276V20c0-11.046-8.954-20-20-20c-11.046,0-20,8.954-20,20v216H20c-11.046,0-20,8.954-20,20s8.954,20,20,20h216\n                  v216c0,11.046,8.954,20,20,20s20-8.954,20-20V276h216c11.046,0,20-8.954,20-20C512,244.954,503.046,236,492,236z\"\n                  />\n                </svg>\n              </Button>\n            ) : null}\n            {this.state.openModal ? (\n              <CreateChatModal\n                toggleModalCreateChannel={this.toggleModalCreateChannel}\n                handleCreateChannelSuccess={this.handleCreateChannelSuccess}\n              />\n            ) : (\n              ''\n            )}\n          </div>\n          <Channels\n            activeChannelId={state.activeChannelId}\n            chatChannels={state.chatChannels}\n            unopenedChannelIds={state.unopenedChannelIds}\n            handleSwitchChannel={this.handleSwitchChannel}\n            channelsLoaded={state.channelsLoaded}\n            filterQuery={state.filterQuery}\n            expanded={state.expanded}\n            aria-expanded={state.expanded}\n            currentUserId={state.currentUserId}\n            triggerActiveContent={this.triggerActiveContent}\n          />\n          {notificationsState}\n        </div>\n      );\n    }\n    return '';\n  };\n\n  toggleModalCreateChannel = () => {\n    const { openModal } = this.state;\n    this.setState({ openModal: !openModal });\n  };\n\n  navigateToChannelsList = () => {\n    const chatContainer = document.getElementsByClassName(\n      'chat__activechat',\n    )[0];\n\n    chatContainer.classList.add('chat__activechat--hidden');\n  };\n\n  handleCreateChannelSuccess = () => {\n    this.toggleModalCreateChannel();\n    const searchParams = {\n      query: '',\n      retrievalID: null,\n      searchType: '',\n      paginationNumber: 0,\n    };\n    getChannels(searchParams, {}, this.loadChannels);\n  };\n\n  handleMessageScroll = () => {\n    const {\n      allMessagesLoaded,\n      messages,\n      activeChannelId,\n      messageOffset,\n    } = this.state;\n\n    if (!messages[activeChannelId]) {\n      return;\n    }\n\n    const jumpbackButton = document.getElementById('jumpback_button');\n\n    if (this.scroller) {\n      const scrolledRatio =\n        (this.scroller.scrollTop + this.scroller.clientHeight) /\n        this.scroller.scrollHeight;\n\n      if (scrolledRatio < 0.5) {\n        jumpbackButton.classList.remove('chatchanneljumpback__hide');\n      } else if (scrolledRatio > 0.6) {\n        jumpbackButton.classList.add('chatchanneljumpback__hide');\n      }\n\n      if (this.scroller.scrollTop === 0 && !allMessagesLoaded) {\n        getAllMessages(\n          activeChannelId,\n          messageOffset + messages[activeChannelId].length,\n          this.addMoreMessages,\n        );\n        const curretPosition = this.scroller.scrollHeight;\n        this.setState({ currentMessageLocation: curretPosition });\n      }\n    }\n  };\n\n  addMoreMessages = (res) => {\n    const { chatChannelId, messages } = res;\n\n    if (messages.length > 0) {\n      this.setState((prevState) => ({\n        messages: {\n          [chatChannelId]: [...messages, ...prevState.messages[chatChannelId]],\n        },\n      }));\n    } else {\n      this.setState({ allMessagesLoaded: true });\n    }\n  };\n\n  jumpBacktoBottom = () => {\n    scrollToBottom();\n    document\n      .getElementById('jumpback_button')\n      .classList.remove('chatchanneljumpback__hide');\n  };\n\n  handleDragOver = (event) => {\n    event.preventDefault();\n    event.currentTarget.classList.add('opacity-25');\n  };\n\n  handleDragExit = (event) => {\n    event.preventDefault();\n    event.currentTarget.classList.remove('opacity-25');\n  };\n\n  handleImageDrop = (event) => {\n    event.preventDefault();\n    const { files } = event.dataTransfer;\n    event.currentTarget.classList.remove('opacity-25');\n    processImageUpload(files, this.handleImageSuccess, this.handleImageFailure);\n  };\n  sendCanvasImage = (files) => {\n    dragAndUpload([files], this.handleImageSuccess, this.handleImageFailure);\n  };\n  handleImageSuccess = (res) => {\n    const { links, image } = res;\n    const mLink = `![${image[0].name}](${links[0]})`;\n    const el = document.getElementById('messageform');\n    const start = el.selectionStart;\n    const end = el.selectionEnd;\n    const text = el.value;\n    let before = text.substring(0, start);\n    before = text.substring(0, before.lastIndexOf('@') + 1);\n    const after = text.substring(end, text.length);\n    el.value = `${before + mLink} ${after}`;\n    el.selectionStart = start + mLink.length + 1;\n    el.selectionEnd = el.selectionStart;\n    el.focus();\n  };\n  handleImageFailure = (e) => {\n    addSnackbarItem({ message: e.message, addCloseButton: true });\n  };\n  handleDragHover(e) {\n    e.preventDefault();\n    const messageArea = document.getElementById('messagelist');\n    messageArea.classList.add('opacity-25');\n  }\n  handleDragExit(e) {\n    e.preventDefault();\n    const messageArea = document.getElementById('messagelist');\n    messageArea.classList.remove('opacity-25');\n  }\n  renderActiveChatChannel = (channelHeader) => {\n    const { state, props } = this;\n    const channelName = state.activeChannel\n      ? state.activeChannel.channel_name\n      : ' ';\n    return (\n      <div className=\"activechatchannel\">\n        <div className=\"activechatchannel__conversation\">\n          {channelHeader}\n          <DragAndDropZone\n            onDragOver={this.handleDragOver}\n            onDragExit={this.handleDragExit}\n            onDrop={this.handleImageDrop}\n          >\n            <div\n              className=\"activechatchannel__messages\"\n              onScroll={this.handleMessageScroll}\n              ref={(scroller) => {\n                this.scroller = scroller;\n              }}\n              id=\"messagelist\"\n            >\n              {this.renderMessages()}\n              <div\n                className=\"messagelist__sentinel\"\n                id=\"messagelist__sentinel\"\n              />\n            </div>\n          </DragAndDropZone>\n          <div\n            className=\"chatchanneljumpback chatchanneljumpback__hide\"\n            id=\"jumpback_button\"\n          >\n            <Button\n              className=\"chatchanneljumpback__messages crayons-btn--outlined\"\n              onClick={this.jumpBacktoBottom}\n              tabIndex=\"0\"\n              onKeyUp={(e) => {\n                if (e.keyCode === 13) this.jumpBacktoBottom();\n              }}\n            >\n              Scroll to Bottom\n            </Button>\n          </div>\n          {this.renderDeleteModal()}\n          <div className=\"activechatchannel__alerts\">\n            <Alert showAlert={state.showAlert} />\n          </div>\n          {this.renderChannelMembersList()}\n          <div className=\"activechatchannel__form\">\n            <Compose\n              handleSubmitOnClick={this.handleSubmitOnClick}\n              handleKeyDown={this.handleKeyDown}\n              handleSubmitOnClickEdit={this.handleSubmitOnClickEdit}\n              handleMention={this.handleMention}\n              handleKeyUp={this.handleKeyUp}\n              handleKeyDownEdit={this.handleKeyDownEdit}\n              activeChannelId={state.activeChannelId}\n              activeChannelName={channelName}\n              startEditing={state.startEditing}\n              markdownEdited={state.markdownEdited}\n              editMessageMarkdown={state.activeEditMessage.markdown}\n              handleEditMessageClose={this.handleEditMessageClose}\n              handleFilePaste={this.handleFilePaste}\n            />\n          </div>\n        </div>\n        <Content\n          onTriggerContent={this.triggerActiveContent}\n          resource={state.activeContent[state.activeChannelId]}\n          activeChannel={state.activeChannel}\n          fullscreen={state.fullscreenContent === 'sidecar'}\n          closeReportAbuseForm={this.closeReportAbuseForm}\n        />\n        <VideoContent\n          videoPath={state.videoPath}\n          onTriggerVideoContent={this.onTriggerVideoContent}\n          fullscreen={state.fullscreenContent === 'video'}\n        />\n      </div>\n    );\n  };\n\n  handleFilePaste = (e) => {\n    if (!e.clipboardData || !e.clipboardData.items) {\n      return;\n    }\n    const items = [];\n    for (let i = 0; i < e.clipboardData.items.length; i++) {\n      const item = e.clipboardData.items[i];\n      if (item.kind !== 'file') {\n        continue;\n      }\n      items.push(item);\n    }\n    if (items && items.length > 0) {\n      processImageUpload(\n        [items[0].getAsFile()],\n        this.handleImageSuccess,\n        this.handleImageFailure,\n      );\n    }\n  };\n\n  onTriggerVideoContent = (e) => {\n    if (e.target.dataset.content === 'exit') {\n      this.setState({\n        videoPath: null,\n        fullscreenContent: null,\n        expanded: window.innerWidth > 600,\n      });\n    } else if (this.state.fullscreenContent === 'video') {\n      this.setState({ fullscreenContent: null });\n    } else {\n      this.setState({\n        fullscreenContent: 'video',\n        expanded: window.innerWidth > WIDE_WIDTH_LIMIT,\n      });\n    }\n  };\n\n  handleMention = (e) => {\n    const { activeChannel } = this.state;\n    const mention = e.keyCode === 64;\n    if (mention && activeChannel.channel_type !== 'direct') {\n      const memberListElement = document.getElementById('mentionList');\n      memberListElement.focus();\n      this.setState({ showMemberlist: true });\n    }\n  };\n\n  handleKeyUp = (e) => {\n    const { startEditing, activeChannel, showMemberlist } = this.state;\n    const enterPressed = e.keyCode === 13;\n    if (enterPressed && showMemberlist)\n      this.setState({ showMemberlist: false });\n    if (activeChannel.channel_type !== 'direct') {\n      if (startEditing) {\n        this.setState({ markdownEdited: true });\n      }\n      if (!e.target.value.includes('@') && showMemberlist) {\n        this.setState({ showMemberlist: false });\n      } else {\n        this.setQuery(e.target);\n        this.listHighlightManager(e.keyCode);\n      }\n    }\n  };\n\n  setQuery = (e) => {\n    const { showMemberlist } = this.state;\n    if (showMemberlist) {\n      const before = e.value.substring(0, e.selectionStart);\n      const query = before.substring(\n        before.lastIndexOf('@') + 1,\n        e.selectionStart,\n      );\n\n      if (query.includes(' ') || before.lastIndexOf('@') < 0)\n        this.setState({ showMemberlist: false });\n      else {\n        this.setState({ showMemberlist: true });\n        this.setState({ memberFilterQuery: query });\n      }\n    }\n  };\n\n  addUserName = (e) => {\n    const name =\n      e.target.dataset.content || e.target.parentElement.dataset.content;\n    const el = document.getElementById('messageform');\n    const start = el.selectionStart;\n    const end = el.selectionEnd;\n    const text = el.value;\n    let before = text.substring(0, start);\n    before = text.substring(0, before.lastIndexOf('@') + 1);\n    const after = text.substring(end, text.length);\n    el.value = `${before + name} ${after}`;\n    el.selectionStart = start + name.length + 1;\n    el.selectionEnd = start + name.length + 1;\n    el.dispatchEvent(new Event('input'));\n    el.focus();\n    this.setState({ showMemberlist: false });\n  };\n\n  listHighlightManager = (keyCode) => {\n    const mentionList = document.getElementById('mentionList');\n    const activeElement = document.getElementsByClassName(\n      'active__message__list',\n    )[0];\n    if (mentionList.children.length > 0) {\n      if (keyCode === 40 && activeElement) {\n        if (activeElement.nextElementSibling) {\n          activeElement.classList.remove('active__message__list');\n          activeElement.nextElementSibling.classList.add(\n            'active__message__list',\n          );\n        }\n      } else if (keyCode === 38 && activeElement) {\n        if (activeElement.previousElementSibling) {\n          activeElement.classList.remove('active__message__list');\n          activeElement.previousElementSibling.classList.add(\n            'active__message__list',\n          );\n        }\n      } else {\n        mentionList.children[0].classList.add('active__message__list');\n      }\n    }\n  };\n\n  getMentionedUsers = (message) => {\n    const { channelUsers, activeChannelId, activeChannel } = this.state;\n    if (channelUsers[activeChannelId]) {\n      if (message.includes('@all') && activeChannel.channel_type !== 'open') {\n        return Array.from(\n          Object.values(channelUsers[activeChannelId]).filter(\n            (user) => user.id,\n          ),\n          (user) => user.id,\n        );\n      }\n      return Array.from(\n        Object.values(channelUsers[activeChannelId]).filter((user) =>\n          message.includes(user.username),\n        ),\n        (user) => user.id,\n      );\n    }\n    return null;\n  };\n\n  renderChannelMembersList = () => {\n    const {\n      showMemberlist,\n      activeChannelId,\n      channelUsers,\n      memberFilterQuery,\n    } = this.state;\n\n    const filterRegx = new RegExp(memberFilterQuery, 'gi');\n\n    return (\n      <div\n        className={\n          showMemberlist ? 'mention__list mention__visible' : 'mention__list'\n        }\n        id=\"mentionList\"\n        data-testid=\"mentionList\"\n      >\n        {showMemberlist\n          ? Object.values(channelUsers[activeChannelId])\n              .filter((user) => user.username.match(filterRegx))\n              .map((user) => (\n                <div\n                  key={user.username}\n                  className=\"mention__user\"\n                  role=\"button\"\n                  onClick={this.addUserName}\n                  tabIndex=\"0\"\n                  data-content={user.username}\n                  onKeyUp={(e) => {\n                    if (e.keyCode === 13) this.addUserName();\n                  }}\n                >\n                  <img\n                    className=\"mention__user__image\"\n                    src={user.profile_image}\n                    alt={user.name}\n                    style={!user.profile_image ? { display: 'none' } : ' '}\n                  />\n                  <span\n                    style={{\n                      padding: '3px 0px',\n                      'font-size': '16px',\n                    }}\n                  >\n                    {'@'}\n                    {user.username}\n                    <p>{user.name}</p>\n                  </span>\n                </div>\n              ))\n          : ' '}\n      </div>\n    );\n  };\n\n  handleEditMessageClose = () => {\n    this.setState({\n      startEditing: false,\n      markdownEdited: false,\n      activeEditMessage: { message: '', markdown: '' },\n    });\n  };\n\n  renderDeleteModal = () => {\n    const { showDeleteModal } = this.state;\n    return (\n      <div\n        id=\"message\"\n        className={\n          showDeleteModal\n            ? 'message__delete__modal crayons-modal crayons-modal--s absolute'\n            : 'message__delete__modal message__delete__modal__hide crayons-modal crayons-modal--s absolute'\n        }\n        aria-hidden={showDeleteModal}\n        aria-label=\"delete confirmation\"\n        role=\"dialog\"\n      >\n        <div className=\"crayons-modal__box\">\n          <div className=\"crayons-modal__box__body\">\n            <h3>Are you sure, you want to delete this message?</h3>\n            <div className=\"delete-actions__container\">\n              <Button\n                className=\"crayons-btn crayons-btn--danger message__delete__button\"\n                onClick={this.handleMessageDelete}\n                tabIndex=\"0\"\n                onKeyUp={(e) => {\n                  if (e.keyCode === 13) this.handleMessageDelete();\n                }}\n              >\n                Delete\n              </Button>\n              <Button\n                className=\"crayons-btn crayons-btn--secondary message__cancel__button\"\n                onClick={this.handleCloseDeleteModal}\n                tabIndex=\"0\"\n                onKeyUp={(e) => {\n                  if (e.keyCode === 13) this.handleCloseDeleteModal();\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"crayons-modal__overlay\" />\n      </div>\n    );\n  };\n\n  handleCloseDeleteModal = () => {\n    this.setState({ showDeleteModal: false, messageDeleteId: null });\n  };\n\n  handleMessageDelete = () => {\n    const { messageDeleteId } = this.state;\n    deleteMessage(messageDeleteId);\n    this.setState({ showDeleteModal: false });\n  };\n\n  handleJoiningRequest = (e) => {\n    sendChannelRequest(\n      e.target.dataset.channelId,\n      this.handleJoiningRequestSuccess,\n      this.handleFailure,\n    );\n  };\n\n  handleJoiningRequestSuccess = () => {\n    const { activeChannelId } = this.state;\n    this.setActiveContentState(activeChannelId, null);\n    this.setState({ fullscreenContent: null });\n    this.toggleSearchShowing();\n  };\n\n  renderChannelBackNav = () => {\n    return (\n      <Button\n        className=\"crayons-btn crayons-btn--icon-rounded crayons-btn--ghost active-channel__back-btn\"\n        onClick={this.navigateToChannelsList}\n        onKeyUp={(e) => {\n          if (e.keyCode === 13) this.navigateToChannelsList(e);\n        }}\n        tabIndex=\"0\"\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          width=\"24\"\n          height=\"24\"\n          className=\"crayons-icon\"\n        >\n          <path d=\"M10.828 12l4.95 4.95-1.414 1.414L8 12l6.364-6.364 1.414 1.414z\" />\n        </svg>\n      </Button>\n    );\n  };\n\n  renderChannelHeaderInner = () => {\n    const { activeChannel } = this.state;\n    if (activeChannel.channel_type === 'direct') {\n      return (\n        <a\n          href={`/${activeChannel.channel_username}`}\n          className=\"active-channel__title\"\n          onClick={this.triggerActiveContent}\n          data-content=\"sidecar-user\"\n        >\n          {activeChannel.channel_modified_slug}\n        </a>\n      );\n    }\n    return (\n      <a\n        href=\"#/\"\n        onClick={this.triggerActiveContent}\n        data-content=\"chat_channel_setting\"\n      >\n        {activeChannel.channel_name}\n      </a>\n    );\n  };\n\n  renderChannelConfigImage = () => {\n    const { activeContent, activeChannel, activeChannelId } = this.state;\n    if (\n      activeContent[activeChannelId] &&\n      activeContent[activeChannelId].type_of\n    ) {\n      return '';\n    }\n\n    const path =\n      activeChannel.channel_type === 'direct'\n        ? `/${activeChannel.channel_username}`\n        : `#`;\n\n    const dataContent =\n      activeChannel.channel_type === 'direct'\n        ? 'sidecar-user'\n        : `chat_channel_setting`;\n\n    const contentLink =\n      activeChannel.channel_type === 'direct'\n        ? `/${activeChannel.channel_username}`\n        : '#/';\n\n    return (\n      <a\n        className=\"crayons-btn crayons-btn--icon-rounded crayons-btn--ghost\"\n        onClick={this.triggerActiveContent}\n        onKeyUp={(e) => {\n          if (e.keyCode === 13) this.triggerActiveContent(e);\n        }}\n        tabIndex=\"0\"\n        href={contentLink}\n        data-content={dataContent}\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          width=\"24\"\n          height=\"24\"\n          className=\"crayons-icon\"\n          data-content={dataContent}\n        >\n          <path\n            data-content={dataContent}\n            d=\"M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 1 0 0-16 8 8 0 0 0 0 16zM11 7h2v2h-2V7zm0 4h2v6h-2v-6z\"\n          />\n        </svg>\n      </a>\n    );\n  };\n\n  render() {\n    const { state } = this;\n    let channelHeader = <div className=\"active-channel__header\">&nbsp;</div>;\n    if (state.activeChannel) {\n      channelHeader = (\n        <div className=\"active-channel__header\">\n          {this.renderChannelBackNav()}\n          {this.renderChannelHeaderInner()}\n          {this.renderChannelConfigImage()}\n        </div>\n      );\n    }\n    let fullscreenMode = '';\n    if (state.fullscreenContent === 'sidecar') {\n      fullscreenMode = 'chat--content-visible-full';\n    } else if (state.fullscreenContent === 'video') {\n      fullscreenMode = 'chat--video-visible-full';\n    }\n    return (\n      <div\n        data-testid=\"chat\"\n        className={`chat chat--expanded\n         chat--${\n           state.videoPath ? 'video-visible' : 'video-not-visible'\n         } chat--${\n          state.activeContent[state.activeChannelId]\n            ? 'content-visible'\n            : 'content-not-visible'\n        } ${fullscreenMode}`}\n        data-no-instant\n        aria-expanded={state.expanded}\n      >\n        {this.renderChatChannels()}\n        <div data-testid=\"active-chat\" className=\"chat__activechat\">\n          {this.renderActiveChatChannel(channelHeader)}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}