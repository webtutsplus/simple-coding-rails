{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { h, Component, Fragment } from 'preact';\nimport debounceAction from '../utilities/debounceAction';\nimport { fetchSearch } from '../utilities/search';\nimport { KeyboardShortcuts } from '../shared/components/useKeyboardShortcuts';\nimport ModalBackground from './components/ModalBackground';\nimport Modal from './components/Modal';\nimport AllListings from './components/AllListings';\nimport ListingFilters from './components/ListingFilters';\nimport { LISTING_PAGE_SIZE, MATCH_LISTING, updateListings, getQueryParams, resizeAllMasonryItems, getLocation } from './utils';\nexport var Listings = /*#__PURE__*/function (_Component) {\n  _inherits(Listings, _Component);\n\n  var _super = _createSuper(Listings);\n\n  function Listings() {\n    var _this;\n\n    _classCallCheck(this, Listings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      listings: [],\n      query: '',\n      tags: [],\n      category: '',\n      allCategories: [],\n      initialFetch: true,\n      currentUserId: null,\n      openedListing: null,\n      message: '',\n      slug: null,\n      page: 0,\n      showNextPageButton: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"addTag\", function (e, tag) {\n      e.preventDefault();\n\n      if (document.body.classList.contains('modal-open')) {\n        _this.handleCloseModal('close-modal');\n      }\n\n      var _this$state = _this.state,\n          query = _this$state.query,\n          tags = _this$state.tags,\n          category = _this$state.category;\n      var newTags = tags;\n\n      if (newTags.indexOf(tag) === -1) {\n        newTags.push(tag);\n      }\n\n      _this.setState({\n        tags: newTags,\n        page: 0\n      });\n\n      _this.listingSearch(query, newTags, category, null);\n\n      window.scroll(0, 0);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeTag\", function (e, tag) {\n      e.preventDefault();\n      var _this$state2 = _this.state,\n          query = _this$state2.query,\n          tags = _this$state2.tags,\n          category = _this$state2.category;\n      var newTags = tags;\n      var index = newTags.indexOf(tag);\n\n      if (newTags.indexOf(tag) > -1) {\n        newTags.splice(index, 1);\n      }\n\n      _this.setState({\n        tags: newTags,\n        page: 0\n      });\n\n      _this.listingSearch(query, newTags, category, null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleKeyPressedOnSelectedTags\", function (e, tag) {\n      if (e.key === 'Enter') {\n        _this.removeTag(e, tag);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"selectCategory\", function (e) {\n      var cat = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      e.preventDefault();\n      var _this$state3 = _this.state,\n          query = _this$state3.query,\n          tags = _this$state3.tags;\n\n      _this.setState({\n        category: cat,\n        page: 0\n      });\n\n      _this.listingSearch(query, tags, cat, null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCloseModal\", function (e) {\n      var openedListing = _this.state.openedListing;\n\n      if (e === 'close-modal' || openedListing !== null && e.key === 'Escape' || MATCH_LISTING.includes(e.target.id)) {\n        var _this$state4 = _this.state,\n            query = _this$state4.query,\n            tags = _this$state4.tags,\n            category = _this$state4.category;\n\n        _this.setState({\n          openedListing: null,\n          page: 0\n        });\n\n        _this.setLocation(query, tags, category, null);\n\n        document.body.classList.remove('modal-open');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOpenModal\", function (e, listing) {\n      e.preventDefault();\n\n      _this.setState({\n        openedListing: listing\n      });\n\n      window.history.replaceState(null, null, \"/listings/\".concat(listing.category, \"/\").concat(listing.slug));\n\n      _this.setLocation(null, null, listing.category, listing.slug);\n\n      document.body.classList.add('modal-open');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDraftingMessage\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        message: e.target.value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmitMessage\", function (e) {\n      e.preventDefault();\n      var _this$state5 = _this.state,\n          message = _this$state5.message,\n          openedListing = _this$state5.openedListing;\n\n      if (message.replace(/\\s/g, '').length === 0) {\n        return;\n      }\n\n      var formData = new FormData();\n      formData.append('user_id', openedListing.user_id);\n      formData.append('message', \"**re: \".concat(openedListing.title, \"** \").concat(message));\n      formData.append('controller', 'chat_channels');\n      var destination = \"/connect/@\".concat(openedListing.user.username);\n      var metaTag = document.querySelector(\"meta[name='csrf-token']\");\n      window.fetch('/chat_channels/create_chat', {\n        method: 'POST',\n        headers: {\n          'X-CSRF-Token': metaTag.getAttribute('content')\n        },\n        body: formData,\n        credentials: 'same-origin'\n      }).then(function () {\n        window.location.href = destination;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleQuery\", function (e) {\n      var _this$state6 = _this.state,\n          tags = _this$state6.tags,\n          category = _this$state6.category;\n\n      _this.setState({\n        query: e.target.value,\n        page: 0\n      });\n\n      _this.listingSearch(e.target.value, tags, category, null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearQuery\", function () {\n      var _this$state7 = _this.state,\n          tags = _this$state7.tags,\n          category = _this$state7.category;\n      document.getElementById('listings-search').value = '';\n\n      _this.setState({\n        query: '',\n        page: 0\n      });\n\n      _this.listingSearch('', tags, category, null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loadNextPage\", function () {\n      var _this$state8 = _this.state,\n          query = _this$state8.query,\n          tags = _this$state8.tags,\n          category = _this$state8.category,\n          slug = _this$state8.slug,\n          page = _this$state8.page;\n\n      _this.setState({\n        page: page + 1\n      });\n\n      _this.listingSearch(query, tags, category, slug);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setUser\", function () {\n      var currentUserId = _this.state.currentUserId;\n      setTimeout(function () {\n        if (window.currentUser && currentUserId === null) {\n          _this.setState({\n            currentUserId: window.currentUser.id\n          });\n        }\n      }, 1000);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerMasonry\", function () {\n      resizeAllMasonryItems();\n      setTimeout(resizeAllMasonryItems, 1);\n      setTimeout(resizeAllMasonryItems, 3);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setLocation\", function (query, tags, category, slug) {\n      var newLocation = getLocation({\n        query: query,\n        tags: tags,\n        category: category,\n        slug: slug\n      });\n      window.history.replaceState(null, null, newLocation);\n    });\n\n    return _this;\n  }\n\n  _createClass(Listings, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var params = getQueryParams();\n      var container = document.getElementById('listings-index-container');\n      var category = container.dataset.category || '';\n      var allCategories = JSON.parse(container.dataset.allcategories || []);\n      var tags = [];\n      var openedListing = null;\n      var slug = null;\n      var listings = [];\n\n      if (params.t) {\n        tags = params.t.split(',');\n      }\n\n      var query = params.q || '';\n\n      if (tags.length === 0 && query === '') {\n        listings = JSON.parse(container.dataset.listings);\n      }\n\n      if (container.dataset.displayedlisting) {\n        openedListing = JSON.parse(container.dataset.displayedlisting);\n        var _openedListing = openedListing;\n        slug = _openedListing.slug;\n        document.body.classList.add('modal-open');\n      }\n\n      this.debouncedListingSearch = debounceAction(this.handleQuery.bind(this), {\n        time: 150,\n        config: {\n          leading: true\n        }\n      });\n      this.setState({\n        query: query,\n        tags: tags,\n        category: category,\n        allCategories: allCategories,\n        listings: listings,\n        openedListing: openedListing,\n        slug: slug\n      });\n      this.listingSearch(query, tags, category, slug);\n      this.setUser();\n      /*\n        The width of the columns also changes when the browser is resized\n        so we will also call this function on window resize to recalculate\n        each grid item's height to avoid content overflow\n      */\n\n      window.addEventListener('resize', resizeAllMasonryItems);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.triggerMasonry();\n    }\n  }, {\n    key: \"listingSearch\",\n\n    /**\n     * Call search API for Listings\n     *\n     * @param {string} query - The search term\n     * @param {string} tags - The tags selected by the user\n     * @param {string} category - The category selected by the user\n     * @param {string} slug - The listing's slug\n     *\n     * @returns {Promise} A promise object with response formatted as JSON.\n     */\n    value: function listingSearch(query, tags, category, slug) {\n      var _this2 = this;\n\n      var page = this.state.page;\n      var dataHash = {\n        category: category,\n        listing_search: query,\n        page: page,\n        per_page: LISTING_PAGE_SIZE,\n        tags: tags,\n        tag_boolean_mode: 'all'\n      };\n      var responsePromise = fetchSearch('listings', dataHash);\n      return responsePromise.then(function (response) {\n        var listings = response.result;\n        var fullListings = updateListings(listings);\n\n        _this2.setState({\n          listings: fullListings,\n          initialFetch: false,\n          showNextPageButton: listings.length === LISTING_PAGE_SIZE\n        });\n\n        _this2.setLocation(query, tags, category, slug);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state9 = this.state,\n          listings = _this$state9.listings,\n          query = _this$state9.query,\n          tags = _this$state9.tags,\n          category = _this$state9.category,\n          allCategories = _this$state9.allCategories,\n          currentUserId = _this$state9.currentUserId,\n          openedListing = _this$state9.openedListing,\n          showNextPageButton = _this$state9.showNextPageButton,\n          initialFetch = _this$state9.initialFetch,\n          message = _this$state9.message;\n      var shouldRenderModal = openedListing !== null && openedListing !== undefined;\n\n      if (initialFetch) {\n        this.triggerMasonry();\n      }\n\n      return h(\"div\", {\n        className: \"crayons-layout crayons-layout--2-cols\"\n      }, h(ListingFilters, {\n        categories: allCategories,\n        category: category,\n        onSelectCategory: this.selectCategory,\n        message: message,\n        onKeyUp: this.debouncedListingSearch,\n        onClearQuery: this.clearQuery,\n        onRemoveTag: this.removeTag,\n        tags: tags,\n        onKeyPress: this.handleKeyPressedOnSelectedTags,\n        query: query\n      }), h(AllListings, {\n        listings: listings,\n        onAddTag: this.addTag,\n        onChangeCategory: this.selectCategory,\n        currentUserId: currentUserId,\n        onOpenModal: this.handleOpenModal,\n        showNextPageButton: showNextPageButton,\n        loadNextPage: this.loadNextPage\n      }), shouldRenderModal && h(Fragment, null, h(\"div\", {\n        className: \"crayons-modal\"\n      }, h(Modal, {\n        currentUserId: currentUserId,\n        onAddTag: this.addTag,\n        onChangeDraftingMessage: this.handleDraftingMessage,\n        onClick: this.handleCloseModal,\n        onChangeCategory: this.selectCategory,\n        onOpenModal: this.handleOpenModal,\n        onSubmit: this.handleSubmitMessage,\n        listing: openedListing,\n        message: message\n      }), h(ModalBackground, {\n        onClick: this.handleCloseModal\n      })), h(KeyboardShortcuts, {\n        shortcuts: {\n          Escape: this.handleCloseModal\n        }\n      })));\n    }\n  }]);\n\n  return Listings;\n}(Component);\nListings.displayName = 'Classified Listings';","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/listings/listings.jsx"],"names":["h","Component","Fragment","debounceAction","fetchSearch","KeyboardShortcuts","ModalBackground","Modal","AllListings","ListingFilters","LISTING_PAGE_SIZE","MATCH_LISTING","updateListings","getQueryParams","resizeAllMasonryItems","getLocation","Listings","listings","query","tags","category","allCategories","initialFetch","currentUserId","openedListing","message","slug","page","showNextPageButton","e","tag","preventDefault","document","body","classList","contains","handleCloseModal","state","newTags","indexOf","push","setState","listingSearch","window","scroll","index","splice","key","removeTag","cat","includes","target","id","setLocation","remove","listing","history","replaceState","add","value","replace","length","formData","FormData","append","user_id","title","destination","user","username","metaTag","querySelector","fetch","method","headers","getAttribute","credentials","then","location","href","getElementById","setTimeout","currentUser","newLocation","params","container","dataset","JSON","parse","allcategories","t","split","q","displayedlisting","debouncedListingSearch","handleQuery","bind","time","config","leading","setUser","addEventListener","triggerMasonry","dataHash","listing_search","per_page","tag_boolean_mode","responsePromise","response","result","fullListings","shouldRenderModal","undefined","selectCategory","clearQuery","handleKeyPressedOnSelectedTags","addTag","handleOpenModal","loadNextPage","handleDraftingMessage","handleSubmitMessage","Escape","displayName"],"mappings":"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","sourcesContent":["import { h, Component, Fragment } from 'preact';\nimport debounceAction from '../utilities/debounceAction';\nimport { fetchSearch } from '../utilities/search';\nimport { KeyboardShortcuts } from '../shared/components/useKeyboardShortcuts';\nimport ModalBackground from './components/ModalBackground';\nimport Modal from './components/Modal';\nimport AllListings from './components/AllListings';\nimport ListingFilters from './components/ListingFilters';\nimport {\n  LISTING_PAGE_SIZE,\n  MATCH_LISTING,\n  updateListings,\n  getQueryParams,\n  resizeAllMasonryItems,\n  getLocation,\n} from './utils';\n\nexport class Listings extends Component {\n  state = {\n    listings: [],\n    query: '',\n    tags: [],\n    category: '',\n    allCategories: [],\n    initialFetch: true,\n    currentUserId: null,\n    openedListing: null,\n    message: '',\n    slug: null,\n    page: 0,\n    showNextPageButton: false,\n  };\n\n  componentWillMount() {\n    const params = getQueryParams();\n    const container = document.getElementById('listings-index-container');\n    const category = container.dataset.category || '';\n    const allCategories = JSON.parse(container.dataset.allcategories || []);\n    let tags = [];\n    let openedListing = null;\n    let slug = null;\n    let listings = [];\n\n    if (params.t) {\n      tags = params.t.split(',');\n    }\n\n    const query = params.q || '';\n\n    if (tags.length === 0 && query === '') {\n      listings = JSON.parse(container.dataset.listings);\n    }\n\n    if (container.dataset.displayedlisting) {\n      openedListing = JSON.parse(container.dataset.displayedlisting);\n      ({ slug } = openedListing);\n      document.body.classList.add('modal-open');\n    }\n\n    this.debouncedListingSearch = debounceAction(this.handleQuery.bind(this), {\n      time: 150,\n      config: { leading: true },\n    });\n\n    this.setState({\n      query,\n      tags,\n      category,\n      allCategories,\n      listings,\n      openedListing,\n      slug,\n    });\n    this.listingSearch(query, tags, category, slug);\n    this.setUser();\n\n    /*\n      The width of the columns also changes when the browser is resized\n      so we will also call this function on window resize to recalculate\n      each grid item's height to avoid content overflow\n    */\n    window.addEventListener('resize', resizeAllMasonryItems);\n  }\n\n  componentDidUpdate() {\n    this.triggerMasonry();\n  }\n\n  addTag = (e, tag) => {\n    e.preventDefault();\n    if (document.body.classList.contains('modal-open')) {\n      this.handleCloseModal('close-modal');\n    }\n    const { query, tags, category } = this.state;\n    const newTags = tags;\n    if (newTags.indexOf(tag) === -1) {\n      newTags.push(tag);\n    }\n    this.setState({ tags: newTags, page: 0 });\n    this.listingSearch(query, newTags, category, null);\n    window.scroll(0, 0);\n  };\n\n  removeTag = (e, tag) => {\n    e.preventDefault();\n    const { query, tags, category } = this.state;\n    const newTags = tags;\n    const index = newTags.indexOf(tag);\n    if (newTags.indexOf(tag) > -1) {\n      newTags.splice(index, 1);\n    }\n    this.setState({ tags: newTags, page: 0 });\n    this.listingSearch(query, newTags, category, null);\n  };\n\n  handleKeyPressedOnSelectedTags = (e, tag) => {\n    if (e.key === 'Enter') {\n      this.removeTag(e, tag);\n    }\n  };\n\n  selectCategory = (e, cat = '') => {\n    e.preventDefault();\n    const { query, tags } = this.state;\n    this.setState({ category: cat, page: 0 });\n    this.listingSearch(query, tags, cat, null);\n  };\n\n  handleCloseModal = (e) => {\n    const { openedListing } = this.state;\n    if (\n      e === 'close-modal' ||\n      (openedListing !== null && e.key === 'Escape') ||\n      MATCH_LISTING.includes(e.target.id)\n    ) {\n      const { query, tags, category } = this.state;\n      this.setState({ openedListing: null, page: 0 });\n      this.setLocation(query, tags, category, null);\n      document.body.classList.remove('modal-open');\n    }\n  };\n\n  handleOpenModal = (e, listing) => {\n    e.preventDefault();\n    this.setState({ openedListing: listing });\n    window.history.replaceState(\n      null,\n      null,\n      `/listings/${listing.category}/${listing.slug}`,\n    );\n    this.setLocation(null, null, listing.category, listing.slug);\n    document.body.classList.add('modal-open');\n  };\n\n  handleDraftingMessage = (e) => {\n    e.preventDefault();\n    this.setState({ message: e.target.value });\n  };\n\n  handleSubmitMessage = (e) => {\n    e.preventDefault();\n    const { message, openedListing } = this.state;\n    if (message.replace(/\\s/g, '').length === 0) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('user_id', openedListing.user_id);\n    formData.append('message', `**re: ${openedListing.title}** ${message}`);\n    formData.append('controller', 'chat_channels');\n\n    const destination = `/connect/@${openedListing.user.username}`;\n    const metaTag = document.querySelector(\"meta[name='csrf-token']\");\n    window\n      .fetch('/chat_channels/create_chat', {\n        method: 'POST',\n        headers: {\n          'X-CSRF-Token': metaTag.getAttribute('content'),\n        },\n        body: formData,\n        credentials: 'same-origin',\n      })\n      .then(() => {\n        window.location.href = destination;\n      });\n  };\n\n  handleQuery = (e) => {\n    const { tags, category } = this.state;\n    this.setState({ query: e.target.value, page: 0 });\n    this.listingSearch(e.target.value, tags, category, null);\n  };\n\n  clearQuery = () => {\n    const { tags, category } = this.state;\n    document.getElementById('listings-search').value = '';\n    this.setState({ query: '', page: 0 });\n    this.listingSearch('', tags, category, null);\n  };\n\n  loadNextPage = () => {\n    const { query, tags, category, slug, page } = this.state;\n    this.setState({ page: page + 1 });\n    this.listingSearch(query, tags, category, slug);\n  };\n\n  setUser = () => {\n    const { currentUserId } = this.state;\n    setTimeout(() => {\n      if (window.currentUser && currentUserId === null) {\n        this.setState({ currentUserId: window.currentUser.id });\n      }\n    }, 1000);\n  };\n\n  triggerMasonry = () => {\n    resizeAllMasonryItems();\n    setTimeout(resizeAllMasonryItems, 1);\n    setTimeout(resizeAllMasonryItems, 3);\n  };\n\n  setLocation = (query, tags, category, slug) => {\n    const newLocation = getLocation({ query, tags, category, slug });\n    window.history.replaceState(null, null, newLocation);\n  };\n\n  /**\n   * Call search API for Listings\n   *\n   * @param {string} query - The search term\n   * @param {string} tags - The tags selected by the user\n   * @param {string} category - The category selected by the user\n   * @param {string} slug - The listing's slug\n   *\n   * @returns {Promise} A promise object with response formatted as JSON.\n   */\n  listingSearch(query, tags, category, slug) {\n    const { page } = this.state;\n    const dataHash = {\n      category,\n      listing_search: query,\n      page,\n      per_page: LISTING_PAGE_SIZE,\n      tags,\n      tag_boolean_mode: 'all',\n    };\n\n    const responsePromise = fetchSearch('listings', dataHash);\n    return responsePromise.then((response) => {\n      const listings = response.result;\n      const fullListings = updateListings(listings);\n      this.setState({\n        listings: fullListings,\n        initialFetch: false,\n        showNextPageButton: listings.length === LISTING_PAGE_SIZE,\n      });\n      this.setLocation(query, tags, category, slug);\n    });\n  }\n\n  render() {\n    const {\n      listings,\n      query,\n      tags,\n      category,\n      allCategories,\n      currentUserId,\n      openedListing,\n      showNextPageButton,\n      initialFetch,\n      message,\n    } = this.state;\n\n    const shouldRenderModal =\n      openedListing !== null && openedListing !== undefined;\n\n    if (initialFetch) {\n      this.triggerMasonry();\n    }\n    return (\n      <div className=\"crayons-layout crayons-layout--2-cols\">\n        <ListingFilters\n          categories={allCategories}\n          category={category}\n          onSelectCategory={this.selectCategory}\n          message={message}\n          onKeyUp={this.debouncedListingSearch}\n          onClearQuery={this.clearQuery}\n          onRemoveTag={this.removeTag}\n          tags={tags}\n          onKeyPress={this.handleKeyPressedOnSelectedTags}\n          query={query}\n        />\n        <AllListings\n          listings={listings}\n          onAddTag={this.addTag}\n          onChangeCategory={this.selectCategory}\n          currentUserId={currentUserId}\n          onOpenModal={this.handleOpenModal}\n          showNextPageButton={showNextPageButton}\n          loadNextPage={this.loadNextPage}\n        />\n        {shouldRenderModal && (\n          <Fragment>\n            <div className=\"crayons-modal\">\n              <Modal\n                currentUserId={currentUserId}\n                onAddTag={this.addTag}\n                onChangeDraftingMessage={this.handleDraftingMessage}\n                onClick={this.handleCloseModal}\n                onChangeCategory={this.selectCategory}\n                onOpenModal={this.handleOpenModal}\n                onSubmit={this.handleSubmitMessage}\n                listing={openedListing}\n                message={message}\n              />\n              <ModalBackground onClick={this.handleCloseModal} />\n            </div>\n            <KeyboardShortcuts\n              shortcuts={{\n                Escape: this.handleCloseModal,\n              }}\n            />\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nListings.displayName = 'Classified Listings';\n"]},"metadata":{},"sourceType":"module"}