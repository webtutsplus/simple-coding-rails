{"ast":null,"code":"// TODO: We should really be using the xss package by installing it in package.json\n// but for now filterXSS is global because of legacy JS\nimport { request } from '@utilities/http';\n\nfunction getParameterByName(name) {\n  var url = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.location.href;\n  var sanitizedName = name.replace(/[[\\]]/g, '\\\\$&');\n  var regex = new RegExp(\"[?&]\".concat(sanitizedName, \"(=([^&#]*)|&|#|$)\"));\n  var results = regex.exec(url);\n\n  if (!results) {\n    return null;\n  }\n\n  if (!results[2]) {\n    return '';\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getParameters(name, url) {\n  var params = getParameterByName(name, url);\n\n  if (params) {\n    return \"&\".concat(name, \"=\").concat(params);\n  }\n\n  return '';\n}\n\nfunction getFilterParameters(url) {\n  return getParameters('filters', url);\n}\n\nfunction getSortParameters(url) {\n  var sortBy = getParameters('sort_by', url);\n  var sortDirection = getParameters('sort_direction', url);\n  return sortBy + sortDirection;\n}\n/**\n * Determines whether or not InstantClick is enabled.\n *\n * @returns True if InstantClick is enabled, otherwise false.\n */\n\n\nexport function hasInstantClick() {\n  return typeof instantClick !== 'undefined';\n}\n\nfunction fixedEncodeURIComponent(value) {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\n  return encodeURIComponent(value).replace(/[!'()*]/g, function (c) {\n    return \"%\".concat(c.charCodeAt(0).toString(16));\n  });\n}\n\nfunction createSearchUrl(dataHash) {\n  var searchParams = new URLSearchParams();\n  Object.keys(dataHash).forEach(function (key) {\n    var value = dataHash[key];\n\n    if (Array.isArray(value)) {\n      value.forEach(function (arrayValue) {\n        searchParams.append(\"\".concat(key, \"[]\"), arrayValue);\n      });\n    } else {\n      searchParams.append(key, value);\n    }\n  });\n  return searchParams.toString();\n}\n/**\n *\n * @param {*} param0\n */\n\n\nexport function displaySearchResults(_ref) {\n  var searchTerm = _ref.searchTerm,\n      _ref$location = _ref.location,\n      location = _ref$location === void 0 ? window.location : _ref$location;\n  var baseUrl = location.origin;\n  var sanitizedQuery = fixedEncodeURIComponent(searchTerm);\n  var filterParameters = getFilterParameters(location.href);\n  var sortParameters = getSortParameters(location.href);\n  InstantClick.display(\"\".concat(baseUrl, \"/search?q=\").concat(sanitizedQuery).concat(filterParameters).concat(sortParameters));\n}\n/**\n * Extracts the search term from an URL's query string.\n *\n * @param {string} querystring A URL query string\n *\n * @returns The extracted search term from the query string\n */\n\nexport function getSearchTermFromUrl(querystring) {\n  var _filterXSS;\n\n  var searchParameters = new URLSearchParams(querystring);\n  var query = (_filterXSS = filterXSS(searchParameters.get('q'))) !== null && _filterXSS !== void 0 ? _filterXSS : '';\n  var divForDecode = document.createElement('div');\n  divForDecode.innerHTML = query;\n  return divForDecode.firstChild !== null ? divForDecode.firstChild.nodeValue : query;\n}\n/**\n * Preloads search results for the given search term\n * @param {string} searchTerm The search term\n * @param {Location} location[window.location] The location (URL) of the object it is linked to.\n * By default it is linked to the Window object.\n */\n\nexport function preloadSearchResults(_ref2) {\n  var searchTerm = _ref2.searchTerm,\n      _ref2$location = _ref2.location,\n      location = _ref2$location === void 0 ? window.location : _ref2$location;\n  var encodedQuery = fixedEncodeURIComponent(searchTerm.replace(/^[ ]+|[ ]+$/g, ''));\n  var searchUrl = \"\".concat(location.origin, \"/search?q=\").concat(encodedQuery).concat(getFilterParameters(location.href));\n  InstantClick.preload(searchUrl);\n}\n/**\n * A helper method to call /search endpoints.\n *\n * @param {string} endpoint - The search endpoint you want to request (i.e. tags).\n * @param {object} dataHash - A hash with the search params that need to be included in the request.\n *\n * @returns {Promise} A promise object with response formatted as JSON.\n */\n\nexport function fetchSearch(endpoint, dataHash) {\n  var searchUrl = createSearchUrl(dataHash);\n  return request(\"/search/\".concat(endpoint, \"?\").concat(searchUrl)).then(function (response) {\n    return response.json();\n  });\n}","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/utilities/search/index.js"],"names":["request","getParameterByName","name","url","window","location","href","sanitizedName","replace","regex","RegExp","results","exec","decodeURIComponent","getParameters","params","getFilterParameters","getSortParameters","sortBy","sortDirection","hasInstantClick","instantClick","fixedEncodeURIComponent","value","encodeURIComponent","c","charCodeAt","toString","createSearchUrl","dataHash","searchParams","URLSearchParams","Object","keys","forEach","key","Array","isArray","arrayValue","append","displaySearchResults","searchTerm","baseUrl","origin","sanitizedQuery","filterParameters","sortParameters","InstantClick","display","getSearchTermFromUrl","querystring","searchParameters","query","filterXSS","get","divForDecode","document","createElement","innerHTML","firstChild","nodeValue","preloadSearchResults","encodedQuery","searchUrl","preload","fetchSearch","endpoint","then","response","json"],"mappings":"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","sourcesContent":["// TODO: We should really be using the xss package by installing it in package.json\n// but for now filterXSS is global because of legacy JS\n\nimport { request } from '@utilities/http';\n\nfunction getParameterByName(name, url = window.location.href) {\n  const sanitizedName = name.replace(/[[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${sanitizedName}(=([^&#]*)|&|#|$)`);\n  const results = regex.exec(url);\n\n  if (!results) {\n    return null;\n  }\n\n  if (!results[2]) {\n    return '';\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\nfunction getParameters(name, url) {\n  const params = getParameterByName(name, url);\n\n  if (params) {\n    return `&${name}=${params}`;\n  }\n\n  return '';\n}\n\nfunction getFilterParameters(url) {\n  return getParameters('filters', url);\n}\n\nfunction getSortParameters(url) {\n  const sortBy = getParameters('sort_by', url);\n  const sortDirection = getParameters('sort_direction', url);\n\n  return sortBy + sortDirection;\n}\n\n/**\n * Determines whether or not InstantClick is enabled.\n *\n * @returns True if InstantClick is enabled, otherwise false.\n */\nexport function hasInstantClick() {\n  return typeof instantClick !== 'undefined';\n}\n\nfunction fixedEncodeURIComponent(value) {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent\n  return encodeURIComponent(value).replace(\n    /[!'()*]/g,\n    (c) => `%${c.charCodeAt(0).toString(16)}`,\n  );\n}\n\nfunction createSearchUrl(dataHash) {\n  const searchParams = new URLSearchParams();\n  Object.keys(dataHash).forEach((key) => {\n    const value = dataHash[key];\n    if (Array.isArray(value)) {\n      value.forEach((arrayValue) => {\n        searchParams.append(`${key}[]`, arrayValue);\n      });\n    } else {\n      searchParams.append(key, value);\n    }\n  });\n\n  return searchParams.toString();\n}\n\n/**\n *\n * @param {*} param0\n */\nexport function displaySearchResults({\n  searchTerm,\n  location = window.location,\n}) {\n  const baseUrl = location.origin;\n  const sanitizedQuery = fixedEncodeURIComponent(searchTerm);\n  const filterParameters = getFilterParameters(location.href);\n  const sortParameters = getSortParameters(location.href);\n\n  InstantClick.display(\n    `${baseUrl}/search?q=${sanitizedQuery}${filterParameters}${sortParameters}`,\n  );\n}\n\n/**\n * Extracts the search term from an URL's query string.\n *\n * @param {string} querystring A URL query string\n *\n * @returns The extracted search term from the query string\n */\nexport function getSearchTermFromUrl(querystring) {\n  const searchParameters = new URLSearchParams(querystring);\n  const query = filterXSS(searchParameters.get('q')) ?? '';\n  const divForDecode = document.createElement('div');\n\n  divForDecode.innerHTML = query;\n\n  return divForDecode.firstChild !== null\n    ? divForDecode.firstChild.nodeValue\n    : query;\n}\n\n/**\n * Preloads search results for the given search term\n * @param {string} searchTerm The search term\n * @param {Location} location[window.location] The location (URL) of the object it is linked to.\n * By default it is linked to the Window object.\n */\nexport function preloadSearchResults({\n  searchTerm,\n  location = window.location,\n}) {\n  const encodedQuery = fixedEncodeURIComponent(\n    searchTerm.replace(/^[ ]+|[ ]+$/g, ''),\n  );\n  const searchUrl = `${\n    location.origin\n  }/search?q=${encodedQuery}${getFilterParameters(location.href)}`;\n  InstantClick.preload(searchUrl);\n}\n\n/**\n * A helper method to call /search endpoints.\n *\n * @param {string} endpoint - The search endpoint you want to request (i.e. tags).\n * @param {object} dataHash - A hash with the search params that need to be included in the request.\n *\n * @returns {Promise} A promise object with response formatted as JSON.\n */\nexport function fetchSearch(endpoint, dataHash) {\n  const searchUrl = createSearchUrl(dataHash);\n\n  return request(`/search/${endpoint}?${searchUrl}`).then((response) =>\n    response.json(),\n  );\n}\n"]},"metadata":{},"sourceType":"module"}