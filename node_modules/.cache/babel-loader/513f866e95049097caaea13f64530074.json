{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { h } from 'preact';\nimport { useState, useEffect, useMemo } from 'preact/hooks';\nimport PropTypes from 'prop-types';\nimport Textarea from 'preact-textarea-autosize';\n\nvar Compose = function Compose(_ref) {\n  var handleKeyDown = _ref.handleKeyDown,\n      handleKeyDownEdit = _ref.handleKeyDownEdit,\n      handleSubmitOnClick = _ref.handleSubmitOnClick,\n      handleSubmitOnClickEdit = _ref.handleSubmitOnClickEdit,\n      handleMention = _ref.handleMention,\n      handleKeyUp = _ref.handleKeyUp,\n      startEditing = _ref.startEditing,\n      markdownEdited = _ref.markdownEdited,\n      editMessageMarkdown = _ref.editMessageMarkdown,\n      handleEditMessageClose = _ref.handleEditMessageClose,\n      handleFilePaste = _ref.handleFilePaste,\n      activeChannelName = _ref.activeChannelName;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  useEffect(function () {\n    if (!markdownEdited && startEditing) {\n      setValue(editMessageMarkdown);\n    }\n  }, [markdownEdited, startEditing, editMessageMarkdown]);\n\n  var onKeyDown = function onKeyDown(event) {\n    var shiftPressed = event.shiftKey;\n    if (startEditing) handleKeyDownEdit(event);else handleKeyDown(event);\n\n    if (event.keyCode === 13 && !shiftPressed) {\n      event.preventDefault();\n      setValue('');\n    }\n  };\n\n  var placeholder = useMemo(function () {\n    return startEditing ? \"Let's connect\" : \"Write message to \".concat(activeChannelName);\n  }, [startEditing, activeChannelName]);\n  var label = useMemo(function () {\n    return startEditing ? \"Let's connect\" : 'Compose a message';\n  }, [startEditing]);\n  var saveButtonText = useMemo(function () {\n    return startEditing ? 'Save' : 'Send';\n  }, [startEditing]);\n  return h(\"div\", {\n    className: \"compose__outer__container\"\n  }, h(\"div\", {\n    className: startEditing ? 'composer-container__edit' : 'messagecomposer'\n  }, h(Textarea, {\n    className: startEditing ? 'crayons-textfield composer-textarea__edit' : 'crayons-textfield composer-textarea',\n    id: \"messageform\",\n    \"data-testid\": \"messageform\",\n    placeholder: placeholder,\n    onKeyDown: onKeyDown,\n    onKeyPress: handleMention,\n    onKeyUp: handleKeyUp,\n    onPaste: handleFilePaste,\n    maxLength: \"1000\",\n    value: value,\n    onInput: function onInput(event) {\n      return setValue(event.target.value);\n    },\n    \"aria-label\": label\n  }), h(\"div\", {\n    className: \"composer-btn-group\"\n  }, h(\"button\", {\n    type: \"button\",\n    className: startEditing ? 'composer-submit composer-submit__edit crayons-btn' : 'crayons-btn composer-submit',\n    onClick: function onClick(event) {\n      if (startEditing) handleSubmitOnClickEdit(event);else handleSubmitOnClick(event);\n      setValue('');\n    }\n  }, saveButtonText), startEditing && h(\"button\", {\n    type: \"button\",\n    className: \"composer-close__edit crayons-btn crayons-btn--secondary\",\n    onClick: function onClick(event) {\n      handleEditMessageClose(event);\n      setValue('');\n    }\n  }, \"Close\"))));\n};\n\nCompose.propTypes = {\n  handleKeyDown: PropTypes.func.isRequired,\n  handleKeyDownEdit: PropTypes.func.isRequired,\n  handleSubmitOnClick: PropTypes.func.isRequired,\n  handleSubmitOnClickEdit: PropTypes.func.isRequired,\n  handleMention: PropTypes.func.isRequired,\n  handleKeyUp: PropTypes.func.isRequired,\n  startEditing: PropTypes.bool.isRequired,\n  markdownEdited: PropTypes.bool.isRequired,\n  editMessageMarkdown: PropTypes.string.isRequired,\n  handleEditMessageClose: PropTypes.func.isRequired,\n  handleFilePaste: PropTypes.func.isRequired,\n  activeChannelName: PropTypes.string.isRequired\n};\nexport default Compose;","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/chat/compose.jsx"],"names":["h","useState","useEffect","useMemo","PropTypes","Textarea","Compose","handleKeyDown","handleKeyDownEdit","handleSubmitOnClick","handleSubmitOnClickEdit","handleMention","handleKeyUp","startEditing","markdownEdited","editMessageMarkdown","handleEditMessageClose","handleFilePaste","activeChannelName","value","setValue","onKeyDown","event","shiftPressed","shiftKey","keyCode","preventDefault","placeholder","label","saveButtonText","target","propTypes","func","isRequired","bool","string"],"mappings":"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","sourcesContent":["import { h } from 'preact';\nimport { useState, useEffect, useMemo } from 'preact/hooks';\nimport PropTypes from 'prop-types';\nimport Textarea from 'preact-textarea-autosize';\n\nconst Compose = ({\n  handleKeyDown,\n  handleKeyDownEdit,\n  handleSubmitOnClick,\n  handleSubmitOnClickEdit,\n  handleMention,\n  handleKeyUp,\n  startEditing,\n  markdownEdited,\n  editMessageMarkdown,\n  handleEditMessageClose,\n  handleFilePaste,\n  activeChannelName,\n}) => {\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n    if (!markdownEdited && startEditing) {\n      setValue(editMessageMarkdown);\n    }\n  }, [markdownEdited, startEditing, editMessageMarkdown]);\n\n  const onKeyDown = (event) => {\n    const shiftPressed = event.shiftKey;\n    if (startEditing) handleKeyDownEdit(event);\n    else handleKeyDown(event);\n\n    if (event.keyCode === 13 && !shiftPressed) {\n      event.preventDefault();\n      setValue('');\n    }\n  };\n\n  const placeholder = useMemo(\n    () =>\n      startEditing ? \"Let's connect\" : `Write message to ${activeChannelName}`,\n    [startEditing, activeChannelName],\n  );\n  const label = useMemo(\n    () => (startEditing ? \"Let's connect\" : 'Compose a message'),\n    [startEditing],\n  );\n  const saveButtonText = useMemo(() => (startEditing ? 'Save' : 'Send'), [\n    startEditing,\n  ]);\n\n  return (\n    <div className=\"compose__outer__container\">\n      <div\n        className={\n          startEditing ? 'composer-container__edit' : 'messagecomposer'\n        }\n      >\n        <Textarea\n          className={\n            startEditing\n              ? 'crayons-textfield composer-textarea__edit'\n              : 'crayons-textfield composer-textarea'\n          }\n          id=\"messageform\"\n          data-testid=\"messageform\"\n          placeholder={placeholder}\n          onKeyDown={onKeyDown}\n          onKeyPress={handleMention}\n          onKeyUp={handleKeyUp}\n          onPaste={handleFilePaste}\n          maxLength=\"1000\"\n          value={value}\n          onInput={(event) => setValue(event.target.value)}\n          aria-label={label}\n        />\n        <div className=\"composer-btn-group\">\n          <button\n            type=\"button\"\n            className={\n              startEditing\n                ? 'composer-submit composer-submit__edit crayons-btn'\n                : 'crayons-btn composer-submit'\n            }\n            onClick={(event) => {\n              if (startEditing) handleSubmitOnClickEdit(event);\n              else handleSubmitOnClick(event);\n\n              setValue('');\n            }}\n          >\n            {saveButtonText}\n          </button>\n          {startEditing && (\n            <button\n              type=\"button\"\n              className=\"composer-close__edit crayons-btn crayons-btn--secondary\"\n              onClick={(event) => {\n                handleEditMessageClose(event);\n                setValue('');\n              }}\n            >\n              Close\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nCompose.propTypes = {\n  handleKeyDown: PropTypes.func.isRequired,\n  handleKeyDownEdit: PropTypes.func.isRequired,\n  handleSubmitOnClick: PropTypes.func.isRequired,\n  handleSubmitOnClickEdit: PropTypes.func.isRequired,\n  handleMention: PropTypes.func.isRequired,\n  handleKeyUp: PropTypes.func.isRequired,\n  startEditing: PropTypes.bool.isRequired,\n  markdownEdited: PropTypes.bool.isRequired,\n  editMessageMarkdown: PropTypes.string.isRequired,\n  handleEditMessageClose: PropTypes.func.isRequired,\n  handleFilePaste: PropTypes.func.isRequired,\n  activeChannelName: PropTypes.string.isRequired,\n};\n\nexport default Compose;\n"]},"metadata":{},"sourceType":"module"}