{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { getContentOfToken, updateOnboarding } from '../utilities';\nimport Navigation from './Navigation';\n/* eslint-disable camelcase */\n\nvar EmailPreferencesForm = /*#__PURE__*/function (_Component) {\n  _inherits(EmailPreferencesForm, _Component);\n\n  var _super = _createSuper(EmailPreferencesForm);\n\n  function EmailPreferencesForm(props) {\n    var _this;\n\n    _classCallCheck(this, EmailPreferencesForm);\n\n    _this = _super.call(this, props);\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.state = {\n      email_newsletter: false,\n      email_digest_periodic: false\n    };\n    return _this;\n  }\n\n  _createClass(EmailPreferencesForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      updateOnboarding('v2: email preferences form');\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var _this2 = this;\n\n      var csrfToken = getContentOfToken('csrf-token');\n      fetch('/onboarding_checkbox_update', {\n        method: 'PATCH',\n        headers: {\n          'X-CSRF-Token': csrfToken,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: this.state\n        }),\n        credentials: 'same-origin'\n      }).then(function (response) {\n        if (response.ok) {\n          localStorage.setItem('shouldRedirectToOnboarding', false);\n          var next = _this2.props.next;\n          next();\n        }\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var name = event.target.name;\n      this.setState(function (currentState) {\n        return _defineProperty({}, name, !currentState[name]);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          email_newsletter = _this$state.email_newsletter,\n          email_digest_periodic = _this$state.email_digest_periodic;\n      var _this$props = this.props,\n          prev = _this$props.prev,\n          slidesCount = _this$props.slidesCount,\n          currentSlideIndex = _this$props.currentSlideIndex;\n      return h(\"div\", {\n        \"data-testid\": \"onboarding-email-preferences-form\",\n        className: \"onboarding-main crayons-modal\"\n      }, h(\"div\", {\n        className: \"crayons-modal__box\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"title\",\n        \"aria-describedby\": \"subtitle\"\n      }, h(Navigation, {\n        prev: prev,\n        next: this.onSubmit,\n        slidesCount: slidesCount,\n        currentSlideIndex: currentSlideIndex\n      }), h(\"div\", {\n        className: \"onboarding-content terms-and-conditions-wrapper\"\n      }, h(\"header\", {\n        className: \"onboarding-content-header\"\n      }, h(\"h1\", {\n        id: \"title\",\n        className: \"title\"\n      }, \"Almost there!\"), h(\"h2\", {\n        id: \"subtitle\",\n        className: \"subtitle\"\n      }, \"Review your email preferences before we continue.\")), h(\"form\", null, h(\"fieldset\", null, h(\"legend\", null, \"Email preferences\"), h(\"ul\", null, h(\"li\", {\n        className: \"checkbox-item\"\n      }, h(\"label\", {\n        htmlFor: \"email_newsletter\"\n      }, h(\"input\", {\n        type: \"checkbox\",\n        id: \"email_newsletter\",\n        name: \"email_newsletter\",\n        checked: email_newsletter,\n        onChange: this.handleChange\n      }), \"I want to receive weekly newsletter emails.\")), h(\"li\", {\n        className: \"checkbox-item\"\n      }, h(\"label\", {\n        htmlFor: \"email_digest_periodic\"\n      }, h(\"input\", {\n        type: \"checkbox\",\n        id: \"email_digest_periodic\",\n        name: \"email_digest_periodic\",\n        checked: email_digest_periodic,\n        onChange: this.handleChange\n      }), \"I want to receive a periodic digest of top posts from my tags.\"))))))));\n    }\n  }]);\n\n  return EmailPreferencesForm;\n}(Component);\n\nEmailPreferencesForm.propTypes = {\n  prev: PropTypes.func.isRequired,\n  next: PropTypes.string.isRequired,\n  slidesCount: PropTypes.number.isRequired,\n  currentSlideIndex: PropTypes.func.isRequired\n};\nexport default EmailPreferencesForm;\n/* eslint-enable camelcase */","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/onboarding/components/EmailPreferencesForm.jsx"],"names":["h","Component","PropTypes","getContentOfToken","updateOnboarding","Navigation","EmailPreferencesForm","props","handleChange","bind","onSubmit","state","email_newsletter","email_digest_periodic","csrfToken","fetch","method","headers","body","JSON","stringify","user","credentials","then","response","ok","localStorage","setItem","next","event","name","target","setState","currentState","prev","slidesCount","currentSlideIndex","propTypes","func","isRequired","string","number"],"mappings":"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","sourcesContent":["import { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\n\nimport { getContentOfToken, updateOnboarding } from '../utilities';\nimport Navigation from './Navigation';\n\n/* eslint-disable camelcase */\nclass EmailPreferencesForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      email_newsletter: false,\n      email_digest_periodic: false,\n    };\n  }\n\n  componentDidMount() {\n    updateOnboarding('v2: email preferences form');\n  }\n\n  onSubmit() {\n    const csrfToken = getContentOfToken('csrf-token');\n\n    fetch('/onboarding_checkbox_update', {\n      method: 'PATCH',\n      headers: {\n        'X-CSRF-Token': csrfToken,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ user: this.state }),\n      credentials: 'same-origin',\n    }).then((response) => {\n      if (response.ok) {\n        localStorage.setItem('shouldRedirectToOnboarding', false);\n        const { next } = this.props;\n        next();\n      }\n    });\n  }\n\n  handleChange(event) {\n    const { name } = event.target;\n    this.setState((currentState) => ({\n      [name]: !currentState[name],\n    }));\n  }\n\n  render() {\n    const { email_newsletter, email_digest_periodic } = this.state;\n    const { prev, slidesCount, currentSlideIndex } = this.props;\n    return (\n      <div\n        data-testid=\"onboarding-email-preferences-form\"\n        className=\"onboarding-main crayons-modal\"\n      >\n        <div\n          className=\"crayons-modal__box\"\n          role=\"dialog\"\n          aria-labelledby=\"title\"\n          aria-describedby=\"subtitle\"\n        >\n          <Navigation\n            prev={prev}\n            next={this.onSubmit}\n            slidesCount={slidesCount}\n            currentSlideIndex={currentSlideIndex}\n          />\n          <div className=\"onboarding-content terms-and-conditions-wrapper\">\n            <header className=\"onboarding-content-header\">\n              <h1 id=\"title\" className=\"title\">\n                Almost there!\n              </h1>\n              <h2 id=\"subtitle\" className=\"subtitle\">\n                Review your email preferences before we continue.\n              </h2>\n            </header>\n\n            <form>\n              <fieldset>\n                <legend>Email preferences</legend>\n                <ul>\n                  <li className=\"checkbox-item\">\n                    <label htmlFor=\"email_newsletter\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"email_newsletter\"\n                        name=\"email_newsletter\"\n                        checked={email_newsletter}\n                        onChange={this.handleChange}\n                      />\n                      I want to receive weekly newsletter emails.\n                    </label>\n                  </li>\n                  <li className=\"checkbox-item\">\n                    <label htmlFor=\"email_digest_periodic\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"email_digest_periodic\"\n                        name=\"email_digest_periodic\"\n                        checked={email_digest_periodic}\n                        onChange={this.handleChange}\n                      />\n                      I want to receive a periodic digest of top posts from my\n                      tags.\n                    </label>\n                  </li>\n                </ul>\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEmailPreferencesForm.propTypes = {\n  prev: PropTypes.func.isRequired,\n  next: PropTypes.string.isRequired,\n  slidesCount: PropTypes.number.isRequired,\n  currentSlideIndex: PropTypes.func.isRequired,\n};\n\nexport default EmailPreferencesForm;\n\n/* eslint-enable camelcase */\n"]},"metadata":{},"sourceType":"module"}