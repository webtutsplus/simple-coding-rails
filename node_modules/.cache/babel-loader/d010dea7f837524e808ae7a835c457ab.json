{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport debounceAction from '../utilities/debounceAction';\nimport { defaultState, loadNextPage, onSearchBoxType, performInitialSearch, search, toggleTag, clearSelectedTags } from '../searchableItemList/searchableItemList';\nimport { ItemListItem } from './components/ItemListItem';\nimport { ItemListItemArchiveButton } from './components/ItemListItemArchiveButton';\nimport { ItemListLoadMoreButton } from './components/ItemListLoadMoreButton';\nimport { ItemListTags } from './components/ItemListTags';\nimport { Button } from '@crayons';\nvar STATUS_VIEW_VALID = 'valid,confirmed';\nvar STATUS_VIEW_ARCHIVED = 'archived';\nvar READING_LIST_ARCHIVE_PATH = '/readinglist/archive';\nvar READING_LIST_PATH = '/readinglist';\n\nvar FilterText = function FilterText(_ref) {\n  var selectedTags = _ref.selectedTags,\n      query = _ref.query,\n      value = _ref.value;\n  return h(\"h2\", {\n    className: \"fw-bold fs-l\"\n  }, selectedTags.length === 0 && query.length === 0 ? value : 'Nothing with this filter ðŸ¤”');\n};\n\nexport var ReadingList = /*#__PURE__*/function (_Component) {\n  _inherits(ReadingList, _Component);\n\n  var _super = _createSuper(ReadingList);\n\n  function ReadingList(props) {\n    var _this;\n\n    _classCallCheck(this, ReadingList);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleStatusView\", function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          query = _this$state.query,\n          selectedTags = _this$state.selectedTags;\n\n      var isStatusViewValid = _this.statusViewValid();\n\n      var newStatusView = isStatusViewValid ? STATUS_VIEW_ARCHIVED : STATUS_VIEW_VALID;\n      var newPath = isStatusViewValid ? READING_LIST_ARCHIVE_PATH : READING_LIST_PATH; // empty items so that changing the view will start from scratch\n\n      _this.setState({\n        statusView: newStatusView,\n        items: []\n      });\n\n      _this.search(query, {\n        page: 0,\n        tags: selectedTags,\n        statusView: newStatusView\n      }); // change path in the address bar\n\n\n      window.history.replaceState(null, null, newPath);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleArchiveStatus\", function (event, item) {\n      event.preventDefault();\n      var _this$state2 = _this.state,\n          statusView = _this$state2.statusView,\n          items = _this$state2.items,\n          totalCount = _this$state2.totalCount;\n      window.fetch(\"/reading_list_items/\".concat(item.id), {\n        method: 'PUT',\n        headers: {\n          'X-CSRF-Token': window.csrfToken,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          current_status: statusView\n        }),\n        credentials: 'same-origin'\n      });\n\n      var t = _assertThisInitialized(_this);\n\n      var newItems = items;\n      newItems.splice(newItems.indexOf(item), 1);\n      t.setState({\n        archiving: true,\n        items: newItems,\n        totalCount: totalCount - 1\n      }); // hide the snackbar in a few moments\n\n      setTimeout(function () {\n        t.setState({\n          archiving: false\n        });\n      }, 1000);\n    });\n\n    var _statusView = _this.props.statusView;\n    _this.state = defaultState({\n      archiving: false,\n      statusView: _statusView\n    }); // bind and initialize all shared functions\n\n    _this.onSearchBoxType = debounceAction(onSearchBoxType.bind(_assertThisInitialized(_this)), {\n      leading: true\n    });\n    _this.loadNextPage = loadNextPage.bind(_assertThisInitialized(_this));\n    _this.performInitialSearch = performInitialSearch.bind(_assertThisInitialized(_this));\n    _this.search = search.bind(_assertThisInitialized(_this));\n    _this.toggleTag = toggleTag.bind(_assertThisInitialized(_this));\n    _this.clearSelectedTags = clearSelectedTags.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ReadingList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var statusView = this.state.statusView;\n      this.performInitialSearch({\n        searchOptions: {\n          status: \"\".concat(statusView)\n        }\n      });\n    }\n  }, {\n    key: \"statusViewValid\",\n    value: function statusViewValid() {\n      var statusView = this.state.statusView;\n      return statusView === STATUS_VIEW_VALID;\n    }\n  }, {\n    key: \"renderEmptyItems\",\n    value: function renderEmptyItems() {\n      var _this$state3 = this.state,\n          itemsLoaded = _this$state3.itemsLoaded,\n          selectedTags = _this$state3.selectedTags,\n          query = _this$state3.query;\n\n      if (itemsLoaded && this.statusViewValid()) {\n        return h(\"div\", {\n          className: \"align-center p-9 py-10 color-base-80\"\n        }, h(FilterText, {\n          selectedTags: selectedTags,\n          query: query,\n          value: \"Your reading list is empty\"\n        }), h(\"p\", {\n          \"class\": \"color-base-60 pt-2\"\n        }, \"Click the\", ' ', h(\"span\", {\n          \"class\": \"fw-bold\"\n        }, \"bookmark reaction\", h(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          className: \"crayons-icon mx-1\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          role: \"img\"\n        }, h(\"path\", {\n          d: \"M5 2h14a1 1 0 011 1v19.143a.5.5 0 01-.766.424L12 18.03l-7.234 4.536A.5.5 0 014 22.143V3a1 1 0 011-1zm13 2H6v15.432l6-3.761 6 3.761V4z\"\n        }))), \"when viewing a post to add it to your reading list.\"));\n      }\n\n      return h(\"div\", {\n        className: \"align-center p-9 py-10 color-base-80\"\n      }, h(FilterText, {\n        selectedTags: selectedTags,\n        query: query,\n        value: \"Your Archive is empty...\"\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state4 = this.state,\n          items = _this$state4.items,\n          totalCount = _this$state4.totalCount,\n          availableTags = _this$state4.availableTags,\n          selectedTags = _this$state4.selectedTags,\n          showLoadMoreButton = _this$state4.showLoadMoreButton,\n          archiving = _this$state4.archiving;\n      var isStatusViewValid = this.statusViewValid();\n      var archiveButtonLabel = isStatusViewValid ? 'Archive' : 'Unarchive';\n      var itemsToRender = items.map(function (item) {\n        return h(ItemListItem, {\n          item: item\n        }, h(ItemListItemArchiveButton, {\n          text: archiveButtonLabel,\n          onClick: function onClick(e) {\n            return _this2.toggleArchiveStatus(e, item);\n          }\n        }));\n      });\n      var snackBar = archiving ? h(\"div\", {\n        className: \"snackbar\"\n      }, isStatusViewValid ? 'Archiving...' : 'Unarchiving...') : '';\n      return h(\"div\", null, h(\"header\", {\n        className: \"crayons-layout flex justify-between items-center pb-0\"\n      }, h(\"h1\", {\n        \"class\": \"crayons-title\"\n      }, isStatusViewValid ? 'Reading list' : 'Archive', \" (\".concat(totalCount > 0 ? totalCount : '0', \")\")), h(\"div\", {\n        \"class\": \"flex items-center\"\n      }, h(Button, {\n        onClick: function onClick(e) {\n          return _this2.toggleStatusView(e);\n        },\n        className: \"mr-2 whitespace-nowrap\",\n        variant: \"outlined\",\n        url: READING_LIST_ARCHIVE_PATH,\n        tagName: \"a\",\n        \"data-no-instant\": true\n      }, isStatusViewValid ? 'View archive' : 'View reading list'), h(\"input\", {\n        \"aria-label\": \"Search...\",\n        onKeyUp: this.onSearchBoxType,\n        placeholder: \"Search...\",\n        className: \"crayons-textfield\"\n      }))), h(\"div\", {\n        className: \"crayons-layout crayons-layout--2-cols\"\n      }, h(ItemListTags, {\n        availableTags: availableTags,\n        selectedTags: selectedTags,\n        onClick: this.toggleTag\n      }), h(\"main\", {\n        className: \"crayons-layout__content\"\n      }, h(\"div\", {\n        className: \"crayons-card mb-4\"\n      }, items.length > 0 ? itemsToRender : this.renderEmptyItems()), h(ItemListLoadMoreButton, {\n        show: showLoadMoreButton,\n        onClick: this.loadNextPage\n      })), snackBar));\n    }\n  }]);\n\n  return ReadingList;\n}(Component);\nReadingList.defaultProps = {\n  statusView: STATUS_VIEW_VALID\n};\nReadingList.propTypes = {\n  availableTags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  statusView: PropTypes.oneOf([STATUS_VIEW_VALID, STATUS_VIEW_ARCHIVED])\n};\nFilterText.propTypes = {\n  selectedTags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  query: PropTypes.arrayOf(PropTypes.string).isRequired\n};","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/readingList/readingList.jsx"],"names":["h","Component","PropTypes","debounceAction","defaultState","loadNextPage","onSearchBoxType","performInitialSearch","search","toggleTag","clearSelectedTags","ItemListItem","ItemListItemArchiveButton","ItemListLoadMoreButton","ItemListTags","Button","STATUS_VIEW_VALID","STATUS_VIEW_ARCHIVED","READING_LIST_ARCHIVE_PATH","READING_LIST_PATH","FilterText","selectedTags","query","value","length","ReadingList","props","event","preventDefault","state","isStatusViewValid","statusViewValid","newStatusView","newPath","setState","statusView","items","page","tags","window","history","replaceState","item","totalCount","fetch","id","method","headers","csrfToken","body","JSON","stringify","current_status","credentials","t","newItems","splice","indexOf","archiving","setTimeout","bind","leading","searchOptions","status","itemsLoaded","availableTags","showLoadMoreButton","archiveButtonLabel","itemsToRender","map","e","toggleArchiveStatus","snackBar","toggleStatusView","renderEmptyItems","defaultProps","propTypes","arrayOf","string","isRequired","oneOf"],"mappings":"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","sourcesContent":["import { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport debounceAction from '../utilities/debounceAction';\n\nimport {\n  defaultState,\n  loadNextPage,\n  onSearchBoxType,\n  performInitialSearch,\n  search,\n  toggleTag,\n  clearSelectedTags,\n} from '../searchableItemList/searchableItemList';\nimport { ItemListItem } from './components/ItemListItem';\nimport { ItemListItemArchiveButton } from './components/ItemListItemArchiveButton';\nimport { ItemListLoadMoreButton } from './components/ItemListLoadMoreButton';\nimport { ItemListTags } from './components/ItemListTags';\nimport { Button } from '@crayons';\n\nconst STATUS_VIEW_VALID = 'valid,confirmed';\nconst STATUS_VIEW_ARCHIVED = 'archived';\nconst READING_LIST_ARCHIVE_PATH = '/readinglist/archive';\nconst READING_LIST_PATH = '/readinglist';\n\nconst FilterText = ({ selectedTags, query, value }) => {\n  return (\n    <h2 className=\"fw-bold fs-l\">\n      {selectedTags.length === 0 && query.length === 0\n        ? value\n        : 'Nothing with this filter ðŸ¤”'}\n    </h2>\n  );\n};\n\nexport class ReadingList extends Component {\n  constructor(props) {\n    super(props);\n\n    const { statusView } = this.props;\n    this.state = defaultState({ archiving: false, statusView });\n\n    // bind and initialize all shared functions\n    this.onSearchBoxType = debounceAction(onSearchBoxType.bind(this), {\n      leading: true,\n    });\n    this.loadNextPage = loadNextPage.bind(this);\n    this.performInitialSearch = performInitialSearch.bind(this);\n    this.search = search.bind(this);\n    this.toggleTag = toggleTag.bind(this);\n    this.clearSelectedTags = clearSelectedTags.bind(this);\n  }\n\n  componentDidMount() {\n    const { statusView } = this.state;\n\n    this.performInitialSearch({\n      searchOptions: { status: `${statusView}` },\n    });\n  }\n\n  toggleStatusView = (event) => {\n    event.preventDefault();\n\n    const { query, selectedTags } = this.state;\n\n    const isStatusViewValid = this.statusViewValid();\n    const newStatusView = isStatusViewValid\n      ? STATUS_VIEW_ARCHIVED\n      : STATUS_VIEW_VALID;\n    const newPath = isStatusViewValid\n      ? READING_LIST_ARCHIVE_PATH\n      : READING_LIST_PATH;\n\n    // empty items so that changing the view will start from scratch\n    this.setState({ statusView: newStatusView, items: [] });\n\n    this.search(query, {\n      page: 0,\n      tags: selectedTags,\n      statusView: newStatusView,\n    });\n\n    // change path in the address bar\n    window.history.replaceState(null, null, newPath);\n  };\n\n  toggleArchiveStatus = (event, item) => {\n    event.preventDefault();\n\n    const { statusView, items, totalCount } = this.state;\n    window.fetch(`/reading_list_items/${item.id}`, {\n      method: 'PUT',\n      headers: {\n        'X-CSRF-Token': window.csrfToken,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ current_status: statusView }),\n      credentials: 'same-origin',\n    });\n\n    const t = this;\n    const newItems = items;\n    newItems.splice(newItems.indexOf(item), 1);\n    t.setState({\n      archiving: true,\n      items: newItems,\n      totalCount: totalCount - 1,\n    });\n\n    // hide the snackbar in a few moments\n    setTimeout(() => {\n      t.setState({ archiving: false });\n    }, 1000);\n  };\n\n  statusViewValid() {\n    const { statusView } = this.state;\n    return statusView === STATUS_VIEW_VALID;\n  }\n\n  renderEmptyItems() {\n    const { itemsLoaded, selectedTags, query } = this.state;\n\n    if (itemsLoaded && this.statusViewValid()) {\n      return (\n        <div className=\"align-center p-9 py-10 color-base-80\">\n          <FilterText\n            selectedTags={selectedTags}\n            query={query}\n            value=\"Your reading list is empty\"\n          />\n          <p class=\"color-base-60 pt-2\">\n            Click the{' '}\n            <span class=\"fw-bold\">\n              bookmark reaction\n              <svg\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n                className=\"crayons-icon mx-1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                role=\"img\"\n              >\n                <path d=\"M5 2h14a1 1 0 011 1v19.143a.5.5 0 01-.766.424L12 18.03l-7.234 4.536A.5.5 0 014 22.143V3a1 1 0 011-1zm13 2H6v15.432l6-3.761 6 3.761V4z\" />\n              </svg>\n            </span>\n            when viewing a post to add it to your reading list.\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"align-center p-9 py-10 color-base-80\">\n        <FilterText\n          selectedTags={selectedTags}\n          query={query}\n          value=\"Your Archive is empty...\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      items,\n      totalCount,\n      availableTags,\n      selectedTags,\n      showLoadMoreButton,\n      archiving,\n    } = this.state;\n\n    const isStatusViewValid = this.statusViewValid();\n\n    const archiveButtonLabel = isStatusViewValid ? 'Archive' : 'Unarchive';\n    const itemsToRender = items.map((item) => {\n      return (\n        <ItemListItem item={item}>\n          <ItemListItemArchiveButton\n            text={archiveButtonLabel}\n            onClick={(e) => this.toggleArchiveStatus(e, item)}\n          />\n        </ItemListItem>\n      );\n    });\n\n    const snackBar = archiving ? (\n      <div className=\"snackbar\">\n        {isStatusViewValid ? 'Archiving...' : 'Unarchiving...'}\n      </div>\n    ) : (\n      ''\n    );\n    return (\n      <div>\n        <header className=\"crayons-layout flex justify-between items-center pb-0\">\n          <h1 class=\"crayons-title\">\n            {isStatusViewValid ? 'Reading list' : 'Archive'}\n            {` (${totalCount > 0 ? totalCount : '0'})`}\n          </h1>\n\n          <div class=\"flex items-center\">\n            <Button\n              onClick={(e) => this.toggleStatusView(e)}\n              className=\"mr-2 whitespace-nowrap\"\n              variant=\"outlined\"\n              url={READING_LIST_ARCHIVE_PATH}\n              tagName=\"a\"\n              data-no-instant\n            >\n              {isStatusViewValid ? 'View archive' : 'View reading list'}\n            </Button>\n            <input\n              aria-label=\"Search...\"\n              onKeyUp={this.onSearchBoxType}\n              placeholder=\"Search...\"\n              className=\"crayons-textfield\"\n            />\n          </div>\n        </header>\n\n        <div className=\"crayons-layout crayons-layout--2-cols\">\n          <ItemListTags\n            availableTags={availableTags}\n            selectedTags={selectedTags}\n            onClick={this.toggleTag}\n          />\n\n          <main className=\"crayons-layout__content\">\n            <div className=\"crayons-card mb-4\">\n              {items.length > 0 ? itemsToRender : this.renderEmptyItems()}\n            </div>\n\n            <ItemListLoadMoreButton\n              show={showLoadMoreButton}\n              onClick={this.loadNextPage}\n            />\n          </main>\n\n          {snackBar}\n        </div>\n      </div>\n    );\n  }\n}\n\nReadingList.defaultProps = {\n  statusView: STATUS_VIEW_VALID,\n};\n\nReadingList.propTypes = {\n  availableTags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  statusView: PropTypes.oneOf([STATUS_VIEW_VALID, STATUS_VIEW_ARCHIVED]),\n};\n\nFilterText.propTypes = {\n  selectedTags: PropTypes.arrayOf(PropTypes.string).isRequired,\n  value: PropTypes.string.isRequired,\n  query: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}