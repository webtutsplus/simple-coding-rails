{"ast":null,"code":"import { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport { CommentListItem } from './CommentListItem';\nimport { Button } from '@crayons';\nvar numberOfCommentsToShow = 2;\n\nfunction linkToCommentsSection(articlePath) {\n  var str = \"\".concat(articlePath, \"#comments-container\");\n  return str;\n}\n\nfunction moreCommentsButton(comments, articlePath, totalCount) {\n  var button = '';\n\n  if (totalCount > numberOfCommentsToShow) {\n    button = h(\"div\", {\n      className: \"crayons-story__comments__actions\"\n    }, h(Button, {\n      variant: \"ghost\",\n      size: \"s\",\n      tagName: \"a\",\n      className: \"-ml-2\",\n      url: linkToCommentsSection(articlePath),\n      \"data-testid\": \"see-all-comments\"\n    }, \"See all \", totalCount, \" comments\"));\n  }\n\n  return button;\n}\n\nexport var CommentsList = function CommentsList(_ref) {\n  var _ref$comments = _ref.comments,\n      comments = _ref$comments === void 0 ? [] : _ref$comments,\n      articlePath = _ref.articlePath,\n      totalCount = _ref.totalCount;\n\n  if (comments && comments.length > 0) {\n    return h(\"div\", {\n      className: \"crayons-story__comments\"\n    }, comments.slice(0, numberOfCommentsToShow).map(function (comment) {\n      return h(CommentListItem, {\n        comment: comment\n      });\n    }), moreCommentsButton(comments, articlePath, totalCount));\n  }\n\n  return '';\n};\nCommentsList.displayName = 'CommentsList';\nComment.propTypes = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  profile_image_90: PropTypes.string.isRequired,\n  published_at_int: PropTypes.number.isRequired\n});\nCommentsList.propTypes = {\n  comments: PropTypes.arrayOf(Comment.propTypes).isRequired,\n  articlePath: PropTypes.string.isRequired,\n  totalCount: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/articles/components/CommentsList.jsx"],"names":["h","PropTypes","CommentListItem","Button","numberOfCommentsToShow","linkToCommentsSection","articlePath","str","moreCommentsButton","comments","totalCount","button","CommentsList","length","slice","map","comment","displayName","Comment","propTypes","shape","name","string","isRequired","profile_image_90","published_at_int","number","arrayOf"],"mappings":"AAAA,SAASA,CAAT,QAAkB,QAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,mBAAhC;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,IAAMC,sBAAsB,GAAG,CAA/B;;AAEA,SAASC,qBAAT,CAA+BC,WAA/B,EAA4C;AAC1C,MAAMC,GAAG,aAAMD,WAAN,wBAAT;AACA,SAAOC,GAAP;AACD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCH,WAAtC,EAAmDI,UAAnD,EAA+D;AAC7D,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAID,UAAU,GAAGN,sBAAjB,EAAyC;AACvCO,IAAAA,MAAM,GACJ;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,EAAC,MAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,IAAI,EAAC,GAFP;AAGE,MAAA,OAAO,EAAC,GAHV;AAIE,MAAA,SAAS,EAAC,OAJZ;AAKE,MAAA,GAAG,EAAEN,qBAAqB,CAACC,WAAD,CAL5B;AAME,qBAAY;AANd,mBAQWI,UARX,cADF,CADF;AAcD;;AACD,SAAOC,MAAP;AACD;;AAED,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgD;AAAA,2BAA7CH,QAA6C;AAAA,MAA7CA,QAA6C,8BAAlC,EAAkC;AAAA,MAA9BH,WAA8B,QAA9BA,WAA8B;AAAA,MAAjBI,UAAiB,QAAjBA,UAAiB;;AAC1E,MAAID,QAAQ,IAAIA,QAAQ,CAACI,MAAT,GAAkB,CAAlC,EAAqC;AACnC,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGJ,QAAQ,CAACK,KAAT,CAAe,CAAf,EAAkBV,sBAAlB,EAA0CW,GAA1C,CAA8C,UAACC,OAAD,EAAa;AAC1D,aAAO,EAAC,eAAD;AAAiB,QAAA,OAAO,EAAEA;AAA1B,QAAP;AACD,KAFA,CADH,EAKGR,kBAAkB,CAACC,QAAD,EAAWH,WAAX,EAAwBI,UAAxB,CALrB,CADF;AASD;;AACD,SAAO,EAAP;AACD,CAbM;AAePE,YAAY,CAACK,WAAb,GAA2B,cAA3B;AAEAC,OAAO,CAACC,SAAR,GAAoBlB,SAAS,CAACmB,KAAV,CAAgB;AAClCC,EAAAA,IAAI,EAAEpB,SAAS,CAACqB,MAAV,CAAiBC,UADW;AAElCC,EAAAA,gBAAgB,EAAEvB,SAAS,CAACqB,MAAV,CAAiBC,UAFD;AAGlCE,EAAAA,gBAAgB,EAAExB,SAAS,CAACyB,MAAV,CAAiBH;AAHD,CAAhB,CAApB;AAMAX,YAAY,CAACO,SAAb,GAAyB;AACvBV,EAAAA,QAAQ,EAAER,SAAS,CAAC0B,OAAV,CAAkBT,OAAO,CAACC,SAA1B,EAAqCI,UADxB;AAEvBjB,EAAAA,WAAW,EAAEL,SAAS,CAACqB,MAAV,CAAiBC,UAFP;AAGvBb,EAAAA,UAAU,EAAET,SAAS,CAACyB,MAAV,CAAiBH;AAHN,CAAzB","sourcesContent":["import { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport { CommentListItem } from './CommentListItem';\nimport { Button } from '@crayons';\n\nconst numberOfCommentsToShow = 2;\n\nfunction linkToCommentsSection(articlePath) {\n  const str = `${articlePath}#comments-container`;\n  return str;\n}\n\nfunction moreCommentsButton(comments, articlePath, totalCount) {\n  let button = '';\n  if (totalCount > numberOfCommentsToShow) {\n    button = (\n      <div className=\"crayons-story__comments__actions\">\n        <Button\n          variant=\"ghost\"\n          size=\"s\"\n          tagName=\"a\"\n          className=\"-ml-2\"\n          url={linkToCommentsSection(articlePath)}\n          data-testid=\"see-all-comments\"\n        >\n          See all {totalCount} comments\n        </Button>\n      </div>\n    );\n  }\n  return button;\n}\n\nexport const CommentsList = ({ comments = [], articlePath, totalCount }) => {\n  if (comments && comments.length > 0) {\n    return (\n      <div className=\"crayons-story__comments\">\n        {comments.slice(0, numberOfCommentsToShow).map((comment) => {\n          return <CommentListItem comment={comment} />;\n        })}\n\n        {moreCommentsButton(comments, articlePath, totalCount)}\n      </div>\n    );\n  }\n  return '';\n};\n\nCommentsList.displayName = 'CommentsList';\n\nComment.propTypes = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  profile_image_90: PropTypes.string.isRequired,\n  published_at_int: PropTypes.number.isRequired,\n});\n\nCommentsList.propTypes = {\n  comments: PropTypes.arrayOf(Comment.propTypes).isRequired,\n  articlePath: PropTypes.string.isRequired,\n  totalCount: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}