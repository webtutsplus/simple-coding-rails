{"ast":null,"code":"function initPreview() {\n  var colorField = {\n    // input type=\"color\"\n    bgColor: document.getElementById('bg-color-colorfield'),\n    textColor: document.getElementById('text-color-colorfield')\n  };\n  var textField = {\n    // input type=\"text\"\n    bgColor: document.getElementById('bg-color-textfield'),\n    textColor: document.getElementById('text-color-textfield')\n  };\n  var preview = document.getElementById('color-select-preview-logo'); // Assigns input[type='text'] values to input[type='color']\n\n  function updateColorFields() {\n    colorField.bgColor.value = textField.bgColor.value;\n    colorField.textColor.value = textField.textColor.value;\n  } // Updating text fields when color fields are changed\n\n\n  function updateTextFields() {\n    textField.bgColor.value = colorField.bgColor.value;\n    textField.textColor.value = colorField.textColor.value;\n  } // Updates Preview Colors\n\n\n  function updatePreview() {\n    preview.style.backgroundColor = textField.bgColor.value;\n    preview.style.fill = textField.textColor.value;\n  } // Event Watchers\n  // When color fields change -> updateTextField values and refresh preview\n\n\n  function watchColorFields() {\n    updateTextFields();\n    updatePreview();\n  } // When text fields change -> updateColorField values and refresh preview\n\n\n  function watchTextFields(e) {\n    if (e.target.value.match(/#[0-9a-f]{6}/gi)) {\n      updateColorFields();\n      updatePreview();\n    }\n  }\n\n  if (preview) {\n    // Event Listeners\n    colorField.bgColor.addEventListener('input', watchColorFields);\n    colorField.textColor.addEventListener('input', watchColorFields);\n    textField.bgColor.addEventListener('keyup', watchTextFields);\n    textField.textColor.addEventListener('keyup', watchTextFields); // on init\n\n    updateColorFields();\n    updatePreview();\n    preview.style.display = 'inline-block';\n  }\n}\n\ninitPreview();\nwindow.InstantClick.on('change', initPreview);","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/packs/colorPreview.js"],"names":["initPreview","colorField","bgColor","document","getElementById","textColor","textField","preview","updateColorFields","value","updateTextFields","updatePreview","style","backgroundColor","fill","watchColorFields","watchTextFields","e","target","match","addEventListener","display","window","InstantClick","on"],"mappings":"AAAA,SAASA,WAAT,GAAuB;AACrB,MAAMC,UAAU,GAAG;AACjB;AACAC,IAAAA,OAAO,EAAEC,QAAQ,CAACC,cAAT,CAAwB,qBAAxB,CAFQ;AAGjBC,IAAAA,SAAS,EAAEF,QAAQ,CAACC,cAAT,CAAwB,uBAAxB;AAHM,GAAnB;AAMA,MAAME,SAAS,GAAG;AAChB;AACAJ,IAAAA,OAAO,EAAEC,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,CAFO;AAGhBC,IAAAA,SAAS,EAAEF,QAAQ,CAACC,cAAT,CAAwB,sBAAxB;AAHK,GAAlB;AAMA,MAAMG,OAAO,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,2BAAxB,CAAhB,CAbqB,CAerB;;AACA,WAASI,iBAAT,GAA6B;AAC3BP,IAAAA,UAAU,CAACC,OAAX,CAAmBO,KAAnB,GAA2BH,SAAS,CAACJ,OAAV,CAAkBO,KAA7C;AACAR,IAAAA,UAAU,CAACI,SAAX,CAAqBI,KAArB,GAA6BH,SAAS,CAACD,SAAV,CAAoBI,KAAjD;AACD,GAnBoB,CAqBrB;;;AACA,WAASC,gBAAT,GAA4B;AAC1BJ,IAAAA,SAAS,CAACJ,OAAV,CAAkBO,KAAlB,GAA0BR,UAAU,CAACC,OAAX,CAAmBO,KAA7C;AACAH,IAAAA,SAAS,CAACD,SAAV,CAAoBI,KAApB,GAA4BR,UAAU,CAACI,SAAX,CAAqBI,KAAjD;AACD,GAzBoB,CA2BrB;;;AACA,WAASE,aAAT,GAAyB;AACvBJ,IAAAA,OAAO,CAACK,KAAR,CAAcC,eAAd,GAAgCP,SAAS,CAACJ,OAAV,CAAkBO,KAAlD;AACAF,IAAAA,OAAO,CAACK,KAAR,CAAcE,IAAd,GAAqBR,SAAS,CAACD,SAAV,CAAoBI,KAAzC;AACD,GA/BoB,CAiCrB;AACA;;;AACA,WAASM,gBAAT,GAA4B;AAC1BL,IAAAA,gBAAgB;AAChBC,IAAAA,aAAa;AACd,GAtCoB,CAwCrB;;;AACA,WAASK,eAAT,CAAyBC,CAAzB,EAA4B;AAC1B,QAAIA,CAAC,CAACC,MAAF,CAAST,KAAT,CAAeU,KAAf,CAAqB,gBAArB,CAAJ,EAA4C;AAC1CX,MAAAA,iBAAiB;AACjBG,MAAAA,aAAa;AACd;AACF;;AAED,MAAIJ,OAAJ,EAAa;AACX;AACAN,IAAAA,UAAU,CAACC,OAAX,CAAmBkB,gBAAnB,CAAoC,OAApC,EAA6CL,gBAA7C;AACAd,IAAAA,UAAU,CAACI,SAAX,CAAqBe,gBAArB,CAAsC,OAAtC,EAA+CL,gBAA/C;AACAT,IAAAA,SAAS,CAACJ,OAAV,CAAkBkB,gBAAlB,CAAmC,OAAnC,EAA4CJ,eAA5C;AACAV,IAAAA,SAAS,CAACD,SAAV,CAAoBe,gBAApB,CAAqC,OAArC,EAA8CJ,eAA9C,EALW,CAOX;;AACAR,IAAAA,iBAAiB;AACjBG,IAAAA,aAAa;AACbJ,IAAAA,OAAO,CAACK,KAAR,CAAcS,OAAd,GAAwB,cAAxB;AACD;AACF;;AAEDrB,WAAW;AACXsB,MAAM,CAACC,YAAP,CAAoBC,EAApB,CAAuB,QAAvB,EAAiCxB,WAAjC","sourcesContent":["function initPreview() {\n  const colorField = {\n    // input type=\"color\"\n    bgColor: document.getElementById('bg-color-colorfield'),\n    textColor: document.getElementById('text-color-colorfield'),\n  };\n\n  const textField = {\n    // input type=\"text\"\n    bgColor: document.getElementById('bg-color-textfield'),\n    textColor: document.getElementById('text-color-textfield'),\n  };\n\n  const preview = document.getElementById('color-select-preview-logo');\n\n  // Assigns input[type='text'] values to input[type='color']\n  function updateColorFields() {\n    colorField.bgColor.value = textField.bgColor.value;\n    colorField.textColor.value = textField.textColor.value;\n  }\n\n  // Updating text fields when color fields are changed\n  function updateTextFields() {\n    textField.bgColor.value = colorField.bgColor.value;\n    textField.textColor.value = colorField.textColor.value;\n  }\n\n  // Updates Preview Colors\n  function updatePreview() {\n    preview.style.backgroundColor = textField.bgColor.value;\n    preview.style.fill = textField.textColor.value;\n  }\n\n  // Event Watchers\n  // When color fields change -> updateTextField values and refresh preview\n  function watchColorFields() {\n    updateTextFields();\n    updatePreview();\n  }\n\n  // When text fields change -> updateColorField values and refresh preview\n  function watchTextFields(e) {\n    if (e.target.value.match(/#[0-9a-f]{6}/gi)) {\n      updateColorFields();\n      updatePreview();\n    }\n  }\n\n  if (preview) {\n    // Event Listeners\n    colorField.bgColor.addEventListener('input', watchColorFields);\n    colorField.textColor.addEventListener('input', watchColorFields);\n    textField.bgColor.addEventListener('keyup', watchTextFields);\n    textField.textColor.addEventListener('keyup', watchTextFields);\n\n    // on init\n    updateColorFields();\n    updatePreview();\n    preview.style.display = 'inline-block';\n  }\n}\n\ninitPreview();\nwindow.InstantClick.on('change', initPreview);\n"]},"metadata":{},"sourceType":"module"}