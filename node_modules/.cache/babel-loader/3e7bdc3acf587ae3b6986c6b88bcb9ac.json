{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { h, Component, Fragment, createRef } from 'preact';\nimport PropTypes from 'prop-types';\nimport { displaySearchResults, getSearchTermFromUrl, hasInstantClick, preloadSearchResults } from '../utilities/search';\nimport { KeyboardShortcuts } from '../shared/components/useKeyboardShortcuts';\nimport { SearchForm } from './SearchForm';\nvar GLOBAL_MINIMIZE_KEY = 'Digit0';\nvar GLOBAL_SEARCH_KEY = 'Slash';\nvar ENTER_KEY = 'Enter';\nexport var Search = /*#__PURE__*/function (_Component) {\n  _inherits(Search, _Component);\n\n  var _super = _createSuper(Search);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"enableSearchPageListener\", function () {\n      _this.enableSearchPageChecker = true;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasKeyModifiers\", function (event) {\n      return event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submit\", function (event) {\n      if (hasInstantClick) {\n        event.preventDefault();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"minimizeHeader\", function (event) {\n      event.preventDefault();\n      document.body.classList.toggle('zen-mode');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focusOnSearchBox\", function (event) {\n      event.preventDefault();\n      document.body.classList.remove('zen-mode');\n      var searchBox = _this.searchInputRef.current;\n      searchBox.focus();\n      searchBox.select();\n    });\n\n    _this.enableSearchPageChecker = true;\n    _this.syncSearchUrlWithInput = _this.syncSearchUrlWithInput.bind(_assertThisInitialized(_this));\n    _this.searchInputRef = createRef(null);\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          searchTerm = _this$props.searchTerm,\n          setSearchTerm = _this$props.setSearchTerm;\n\n      var searchPageChecker = function searchPageChecker() {\n        if (_this2.enableSearchPageChecker && searchTerm !== '' && /^http(s)?:\\/\\/[^/]+\\/search/.exec(window.location.href) === null) {\n          setSearchTerm('');\n        }\n\n        setTimeout(searchPageChecker, 500);\n      };\n\n      searchPageChecker();\n    }\n    /**\n     * Synchronizes the search input value with the search term defined in the URL.\n     */\n\n  }, {\n    key: \"syncSearchUrlWithInput\",\n    value: function syncSearchUrlWithInput() {\n      // TODO: Consolidate search functionality.\n      // Note that push states for search occur in _search.html.erb\n      // in initializeSortingTabs(query)\n      var setSearchTerm = this.props.setSearchTerm;\n      var searchTerm = getSearchTermFromUrl(window.location.search); // We set the value outside of React state so that there is no flickering of placeholder\n      // to search term.\n\n      var searchBox = this.searchInputRef.current;\n      searchBox.value = searchTerm; // Even though we set the search term directly via the DOM, it still needs to reside\n      // in component state.\n\n      setSearchTerm(searchTerm);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      InstantClick.on('change', this.enableSearchPageListener);\n      window.addEventListener('popstate', this.syncSearchUrlWithInput);\n    }\n  }, {\n    key: \"search\",\n    value: function search(key, searchTerm) {\n      var currentSearchTerm = this.props.searchTerm;\n      this.enableSearchPageChecker = false;\n\n      if (hasInstantClick() && key === ENTER_KEY && currentSearchTerm !== searchTerm) {\n        var setSearchTerm = this.props.setSearchTerm;\n        setSearchTerm(searchTerm);\n        preloadSearchResults({\n          searchTerm: searchTerm\n        });\n        displaySearchResults({\n          searchTerm: searchTerm\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('keydown', this.globalKeysListener);\n      window.removeEventListener('popstate', this.syncSearchUrlWithInput);\n      InstantClick.off && InstantClick.off('change', this.enableSearchPageListener);\n    }\n  }, {\n    key: \"render\",\n    value: function render(_ref) {\n      var _ref2,\n          _this3 = this;\n\n      var searchTerm = _ref.searchTerm;\n      return h(Fragment, null, h(KeyboardShortcuts, {\n        shortcuts: (_ref2 = {}, _defineProperty(_ref2, GLOBAL_SEARCH_KEY, this.focusOnSearchBox), _defineProperty(_ref2, GLOBAL_MINIMIZE_KEY, this.minimizeHeader), _ref2)\n      }), h(SearchForm, {\n        searchTerm: searchTerm,\n        onSearch: function onSearch(event) {\n          var key = event.key,\n              value = event.target.value;\n\n          _this3.search(key, value);\n        },\n        onSubmitSearch: this.submit,\n        ref: this.searchInputRef\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\nSearch.propTypes = {\n  searchTerm: PropTypes.string.isRequired,\n  setSearchTerm: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/Search/Search.jsx"],"names":["h","Component","Fragment","createRef","PropTypes","displaySearchResults","getSearchTermFromUrl","hasInstantClick","preloadSearchResults","KeyboardShortcuts","SearchForm","GLOBAL_MINIMIZE_KEY","GLOBAL_SEARCH_KEY","ENTER_KEY","Search","props","enableSearchPageChecker","event","altKey","ctrlKey","metaKey","shiftKey","preventDefault","document","body","classList","toggle","remove","searchBox","searchInputRef","current","focus","select","syncSearchUrlWithInput","bind","searchTerm","setSearchTerm","searchPageChecker","exec","window","location","href","setTimeout","search","value","InstantClick","on","enableSearchPageListener","addEventListener","key","currentSearchTerm","removeEventListener","globalKeysListener","off","focusOnSearchBox","minimizeHeader","target","submit","propTypes","string","isRequired","func"],"mappings":"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","sourcesContent":["import { h, Component, Fragment, createRef } from 'preact';\nimport PropTypes from 'prop-types';\nimport {\n  displaySearchResults,\n  getSearchTermFromUrl,\n  hasInstantClick,\n  preloadSearchResults,\n} from '../utilities/search';\nimport { KeyboardShortcuts } from '../shared/components/useKeyboardShortcuts';\nimport { SearchForm } from './SearchForm';\n\nconst GLOBAL_MINIMIZE_KEY = 'Digit0';\nconst GLOBAL_SEARCH_KEY = 'Slash';\nconst ENTER_KEY = 'Enter';\n\nexport class Search extends Component {\n  constructor(props) {\n    super(props);\n    this.enableSearchPageChecker = true;\n    this.syncSearchUrlWithInput = this.syncSearchUrlWithInput.bind(this);\n    this.searchInputRef = createRef(null);\n  }\n\n  componentWillMount() {\n    const { searchTerm, setSearchTerm } = this.props;\n\n    const searchPageChecker = () => {\n      if (\n        this.enableSearchPageChecker &&\n        searchTerm !== '' &&\n        /^http(s)?:\\/\\/[^/]+\\/search/.exec(window.location.href) === null\n      ) {\n        setSearchTerm('');\n      }\n\n      setTimeout(searchPageChecker, 500);\n    };\n\n    searchPageChecker();\n  }\n\n  /**\n   * Synchronizes the search input value with the search term defined in the URL.\n   */\n  syncSearchUrlWithInput() {\n    // TODO: Consolidate search functionality.\n    // Note that push states for search occur in _search.html.erb\n    // in initializeSortingTabs(query)\n    const { setSearchTerm } = this.props;\n    const searchTerm = getSearchTermFromUrl(window.location.search);\n\n    // We set the value outside of React state so that there is no flickering of placeholder\n    // to search term.\n    const searchBox = this.searchInputRef.current;\n    searchBox.value = searchTerm;\n\n    // Even though we set the search term directly via the DOM, it still needs to reside\n    // in component state.\n    setSearchTerm(searchTerm);\n  }\n\n  componentDidMount() {\n    InstantClick.on('change', this.enableSearchPageListener);\n\n    window.addEventListener('popstate', this.syncSearchUrlWithInput);\n  }\n\n  enableSearchPageListener = () => {\n    this.enableSearchPageChecker = true;\n  };\n\n  hasKeyModifiers = (event) => {\n    return event.altKey || event.ctrlKey || event.metaKey || event.shiftKey;\n  };\n\n  submit = (event) => {\n    if (hasInstantClick) {\n      event.preventDefault();\n    }\n  };\n\n  search(key, searchTerm) {\n    const { searchTerm: currentSearchTerm } = this.props;\n    this.enableSearchPageChecker = false;\n\n    if (\n      hasInstantClick() &&\n      key === ENTER_KEY &&\n      currentSearchTerm !== searchTerm\n    ) {\n      const { setSearchTerm } = this.props;\n\n      setSearchTerm(searchTerm);\n      preloadSearchResults({ searchTerm });\n      displaySearchResults({ searchTerm });\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.globalKeysListener);\n    window.removeEventListener('popstate', this.syncSearchUrlWithInput);\n    InstantClick.off &&\n      InstantClick.off('change', this.enableSearchPageListener);\n  }\n\n  minimizeHeader = (event) => {\n    event.preventDefault();\n    document.body.classList.toggle('zen-mode');\n  };\n\n  focusOnSearchBox = (event) => {\n    event.preventDefault();\n    document.body.classList.remove('zen-mode');\n\n    const searchBox = this.searchInputRef.current;\n    searchBox.focus();\n    searchBox.select();\n  };\n\n  render({ searchTerm }) {\n    return (\n      <Fragment>\n        <KeyboardShortcuts\n          shortcuts={{\n            [GLOBAL_SEARCH_KEY]: this.focusOnSearchBox,\n            [GLOBAL_MINIMIZE_KEY]: this.minimizeHeader,\n          }}\n        />\n        <SearchForm\n          searchTerm={searchTerm}\n          onSearch={(event) => {\n            const {\n              key,\n              target: { value },\n            } = event;\n            this.search(key, value);\n          }}\n          onSubmitSearch={this.submit}\n          ref={this.searchInputRef}\n        />\n      </Fragment>\n    );\n  }\n}\n\nSearch.propTypes = {\n  searchTerm: PropTypes.string.isRequired,\n  setSearchTerm: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}