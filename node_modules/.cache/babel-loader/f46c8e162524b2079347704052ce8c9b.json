{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { h, render, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { setupPusher } from './pusher';\n/* global userData */\n\nvar UnopenedChannelNotice = /*#__PURE__*/function (_Component) {\n  _inherits(UnopenedChannelNotice, _Component);\n\n  var _super = _createSuper(UnopenedChannelNotice);\n\n  function UnopenedChannelNotice(props) {\n    var _this;\n\n    _classCallCheck(this, UnopenedChannelNotice);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"propTypes\", {\n      pusherKey: PropTypes.Object\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"updateMessageNotification\", function (unopenedChannels) {\n      var number = document.getElementById('connect-number');\n\n      _this.setState({\n        unopenedChannels: unopenedChannels\n      });\n\n      if (unopenedChannels.length > 0) {\n        if (unopenedChannels[0].adjusted_slug === \"@\".concat(userData().username)) {\n          return;\n        }\n\n        number.classList.remove('hidden');\n        number.innerHTML = unopenedChannels.length;\n        document.getElementById('connect-link').href = \"/connect/\".concat(unopenedChannels[0].adjusted_slug);\n        InstantClick.preload(document.getElementById('connect-link').href, 'force');\n      } else {\n        number.classList.add('hidden');\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"removeMessage\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"updateMessage\", function () {});\n\n    _defineProperty(_assertThisInitialized(_this), \"mentionedMessage\", function (e) {\n      if (window.location.pathname.startsWith('/connect')) {\n        return;\n      }\n\n      _this.setState(function (prevState) {\n        return {\n          unopenedChannels: prevState.unopenedChannels.map(function (unopenedChannel) {\n            return unopenedChannel.adjusted_slug === e.chat_channel_adjusted_slug ? _objectSpread(_objectSpread({}, unopenedChannel), {}, {\n              request_type: 'mentioned'\n            }) : unopenedChannel;\n          }),\n          visible: true\n        };\n      });\n\n      _this.hideNotice();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"messageOpened\", function (e) {\n      var unopenedChannels = _this.state.unopenedChannels;\n      if (!window.location.pathname.startsWith('/connect') || !window.location.pathname.includes(e.adjusted_slug)) return;\n\n      _this.updateMessageNotification(unopenedChannels.filter(function (unopenedChannel) {\n        return unopenedChannel.adjusted_slug !== e.adjusted_slug;\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"receiveNewMessage\", function (e) {\n      if (e.user_id === window.currentUser.id || window.location.pathname.startsWith('/connect') && e.user_id === window.currentUser.id && e.channel_type !== 'direct' || window.location.pathname.includes(e.chat_channel_adjusted_slug)) {\n        return;\n      }\n\n      var unopenedChannels = _this.state.unopenedChannels;\n      var newObj = {\n        adjusted_slug: e.chat_channel_adjusted_slug\n      };\n      var ifMessageExist = unopenedChannels.some(function (channel) {\n        return channel.adjusted_slug === newObj.adjusted_slug;\n      });\n\n      if (!ifMessageExist && newObj.adjusted_slug !== \"@\".concat(window.currentUser.username)) {\n        unopenedChannels.push(newObj);\n      }\n\n      if (ifMessageExist) {\n        var index = unopenedChannels.findIndex(function (channel) {\n          return channel.adjusted_slug === newObj.adjusted_slug;\n        });\n        unopenedChannels[index].notified = false;\n      }\n\n      if (!window.location.pathname.startsWith('/connect')) {\n        _this.setState({\n          visible: unopenedChannels.length > 0 && e.user_id !== window.currentUser.id && e.channel_type === 'direct'\n        });\n      }\n\n      _this.updateMessageNotification(unopenedChannels);\n\n      _this.hideNotice();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function () {\n      _this.hideNotice();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hideNotice\", function () {\n      setTimeout(function () {\n        _this.setState(function (prevState) {\n          return {\n            unopenedChannels: prevState.unopenedChannels.map(function (unopenedChannel) {\n              return !unopenedChannel.notified ? _objectSpread(_objectSpread({}, unopenedChannel), {}, {\n                notified: true\n              }) : unopenedChannel;\n            }),\n            visible: false\n          };\n        });\n      }, 7500);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"fetchUnopenedChannel\", function (successCb) {\n      fetch('/chat_channels?state=unopened', {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        credentials: 'same-origin'\n      }).then(function (response) {\n        return response.json();\n      }).then(successCb);\n    });\n\n    _this.state = {\n      visible: false,\n      unopenedChannels: []\n    };\n    return _this;\n  }\n\n  _createClass(UnopenedChannelNotice, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var pusherKey = this.props.pusherKey;\n      var appDomain = document.body.dataset.appDomain;\n      setupPusher(pusherKey, {\n        channelId: \"private-message-notifications--\".concat(appDomain, \"-\").concat(window.currentUser.id),\n        messageCreated: this.receiveNewMessage,\n        messageDeleted: this.removeMessage,\n        messageEdited: this.updateMessage,\n        mentioned: this.mentionedMessage,\n        messageOpened: this.messageOpened\n      });\n      this.fetchUnopenedChannel(this.updateMessageNotification);\n\n      document.getElementById('connect-link').onclick = function () {\n        // Hack, should probably be its own component in future\n        document.getElementById('connect-number').classList.add('hidden');\n\n        _this2.setState({\n          visible: false\n        });\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          unopenedChannels = _this$state.unopenedChannels;\n\n      if (visible && unopenedChannels.some(function (channel) {\n        return !channel.notified;\n      })) {\n        var message = unopenedChannels.map(function (channel) {\n          if (channel.notified) return null;\n          return h(\"div\", null, channel.request_type === 'mentioned' ? 'You got mentioned in' : 'New Message from', ' ', h(\"a\", {\n            href: \"/connect/\".concat(channel.adjusted_slug),\n            style: {\n              background: '#66e2d5',\n              color: 'black',\n              border: '1px solid black',\n              padding: '2px 7px',\n              display: 'inline-block',\n              margin: '3px 6px',\n              borderRadius: '3px'\n            }\n          }, channel.adjusted_slug));\n        });\n        return h(\"a\", {\n          href: \"/connect/\".concat(unopenedChannels[0].adjusted_slug),\n          onClick: this.handleClick,\n          style: {\n            position: 'fixed',\n            zIndex: '200',\n            top: '44px',\n            right: 0,\n            left: 0,\n            background: '#66e2d5',\n            borderBottom: '1px solid black',\n            color: 'black',\n            fontWeight: 'bold',\n            textAlign: 'center',\n            fontSize: '17px',\n            opacity: '0.94',\n            padding: '19px 5px 14px'\n          }\n        }, message);\n      }\n\n      return '';\n    }\n  }]);\n\n  return UnopenedChannelNotice;\n}(Component);\n\n_defineProperty(UnopenedChannelNotice, \"defaultProps\", {\n  pusherKey: undefined\n});\n\nexport function getUnopenedChannels() {\n  if (window.frameElement) {\n    return;\n  }\n\n  render(h(UnopenedChannelNotice, {\n    pusherKey: document.body.dataset.pusherKey\n  }), document.getElementById('message-notice'));\n}","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/utilities/connect/getUnopenedChannels.jsx"],"names":["h","render","Component","PropTypes","setupPusher","UnopenedChannelNotice","props","pusherKey","Object","unopenedChannels","number","document","getElementById","setState","length","adjusted_slug","userData","username","classList","remove","innerHTML","href","InstantClick","preload","add","e","window","location","pathname","startsWith","prevState","map","unopenedChannel","chat_channel_adjusted_slug","request_type","visible","hideNotice","state","includes","updateMessageNotification","filter","user_id","currentUser","id","channel_type","newObj","ifMessageExist","some","channel","push","index","findIndex","notified","setTimeout","successCb","fetch","Accept","credentials","then","response","json","appDomain","body","dataset","channelId","messageCreated","receiveNewMessage","messageDeleted","removeMessage","messageEdited","updateMessage","mentioned","mentionedMessage","messageOpened","fetchUnopenedChannel","onclick","message","background","color","border","padding","display","margin","borderRadius","handleClick","position","zIndex","top","right","left","borderBottom","fontWeight","textAlign","fontSize","opacity","undefined","getUnopenedChannels","frameElement"],"mappings":"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","sourcesContent":["import { h, render, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { setupPusher } from './pusher';\n\n/* global userData */\n\nclass UnopenedChannelNotice extends Component {\n  propTypes = {\n    pusherKey: PropTypes.Object,\n  };\n\n  static defaultProps = {\n    pusherKey: undefined,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      unopenedChannels: [],\n    };\n  }\n\n  componentDidMount() {\n    const { pusherKey } = this.props;\n    const { appDomain } = document.body.dataset;\n    setupPusher(pusherKey, {\n      channelId: `private-message-notifications--${appDomain}-${window.currentUser.id}`,\n      messageCreated: this.receiveNewMessage,\n      messageDeleted: this.removeMessage,\n      messageEdited: this.updateMessage,\n      mentioned: this.mentionedMessage,\n      messageOpened: this.messageOpened,\n    });\n    this.fetchUnopenedChannel(this.updateMessageNotification);\n\n    document.getElementById('connect-link').onclick = () => {\n      // Hack, should probably be its own component in future\n      document.getElementById('connect-number').classList.add('hidden');\n      this.setState({ visible: false });\n    };\n  }\n\n  updateMessageNotification = (unopenedChannels) => {\n    const number = document.getElementById('connect-number');\n    this.setState({ unopenedChannels });\n    if (unopenedChannels.length > 0) {\n      if (unopenedChannels[0].adjusted_slug === `@${userData().username}`) {\n        return;\n      }\n      number.classList.remove('hidden');\n      number.innerHTML = unopenedChannels.length;\n      document.getElementById(\n        'connect-link',\n      ).href = `/connect/${unopenedChannels[0].adjusted_slug}`;\n      InstantClick.preload(\n        document.getElementById('connect-link').href,\n        'force',\n      );\n    } else {\n      number.classList.add('hidden');\n    }\n  };\n\n  removeMessage = () => {};\n\n  updateMessage = () => {};\n\n  mentionedMessage = (e) => {\n    if (window.location.pathname.startsWith('/connect')) {\n      return;\n    }\n\n    this.setState((prevState) => ({\n      unopenedChannels: prevState.unopenedChannels.map((unopenedChannel) =>\n        unopenedChannel.adjusted_slug === e.chat_channel_adjusted_slug\n          ? { ...unopenedChannel, request_type: 'mentioned' }\n          : unopenedChannel,\n      ),\n      visible: true,\n    }));\n\n    this.hideNotice();\n  };\n\n  messageOpened = (e) => {\n    const { unopenedChannels } = this.state;\n    if (\n      !window.location.pathname.startsWith('/connect') ||\n      !window.location.pathname.includes(e.adjusted_slug)\n    )\n      return;\n    this.updateMessageNotification(\n      unopenedChannels.filter(\n        (unopenedChannel) => unopenedChannel.adjusted_slug !== e.adjusted_slug,\n      ),\n    );\n  };\n\n  receiveNewMessage = (e) => {\n    if (\n      e.user_id === window.currentUser.id ||\n      (window.location.pathname.startsWith('/connect') &&\n        e.user_id === window.currentUser.id &&\n        e.channel_type !== 'direct') ||\n      window.location.pathname.includes(e.chat_channel_adjusted_slug)\n    ) {\n      return;\n    }\n    const { unopenedChannels } = this.state;\n    const newObj = { adjusted_slug: e.chat_channel_adjusted_slug };\n\n    const ifMessageExist = unopenedChannels.some(\n      (channel) => channel.adjusted_slug === newObj.adjusted_slug,\n    );\n\n    if (\n      !ifMessageExist &&\n      newObj.adjusted_slug !== `@${window.currentUser.username}`\n    ) {\n      unopenedChannels.push(newObj);\n    }\n    if (ifMessageExist) {\n      const index = unopenedChannels.findIndex(\n        (channel) => channel.adjusted_slug === newObj.adjusted_slug,\n      );\n      unopenedChannels[index].notified = false;\n    }\n\n    if (!window.location.pathname.startsWith('/connect')) {\n      this.setState({\n        visible:\n          unopenedChannels.length > 0 &&\n          e.user_id !== window.currentUser.id &&\n          e.channel_type === 'direct',\n      });\n    }\n    this.updateMessageNotification(unopenedChannels);\n    this.hideNotice();\n  };\n\n  handleClick = () => {\n    this.hideNotice();\n  };\n\n  hideNotice = () => {\n    setTimeout(() => {\n      this.setState((prevState) => ({\n        unopenedChannels: prevState.unopenedChannels.map((unopenedChannel) =>\n          !unopenedChannel.notified\n            ? { ...unopenedChannel, notified: true }\n            : unopenedChannel,\n        ),\n        visible: false,\n      }));\n    }, 7500);\n  };\n\n  fetchUnopenedChannel = (successCb) => {\n    fetch('/chat_channels?state=unopened', {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      credentials: 'same-origin',\n    })\n      .then((response) => response.json())\n      .then(successCb);\n  };\n\n  render() {\n    const { visible, unopenedChannels } = this.state;\n    if (visible && unopenedChannels.some((channel) => !channel.notified)) {\n      const message = unopenedChannels.map((channel) => {\n        if (channel.notified) return null;\n        return (\n          <div>\n            {channel.request_type === 'mentioned'\n              ? 'You got mentioned in'\n              : 'New Message from'}{' '}\n            <a\n              href={`/connect/${channel.adjusted_slug}`}\n              style={{\n                background: '#66e2d5',\n                color: 'black',\n                border: '1px solid black',\n                padding: '2px 7px',\n                display: 'inline-block',\n                margin: '3px 6px',\n                borderRadius: '3px',\n              }}\n            >\n              {channel.adjusted_slug}\n            </a>\n          </div>\n        );\n      });\n\n      return (\n        <a\n          href={`/connect/${unopenedChannels[0].adjusted_slug}`}\n          onClick={this.handleClick}\n          style={{\n            position: 'fixed',\n            zIndex: '200',\n            top: '44px',\n            right: 0,\n            left: 0,\n            background: '#66e2d5',\n            borderBottom: '1px solid black',\n            color: 'black',\n            fontWeight: 'bold',\n            textAlign: 'center',\n            fontSize: '17px',\n            opacity: '0.94',\n            padding: '19px 5px 14px',\n          }}\n        >\n          {message}\n        </a>\n      );\n    }\n\n    return '';\n  }\n}\n\nexport function getUnopenedChannels() {\n  if (window.frameElement) {\n    return;\n  }\n  render(\n    <UnopenedChannelNotice pusherKey={document.body.dataset.pusherKey} />,\n    document.getElementById('message-notice'),\n  );\n}\n"]},"metadata":{},"sourceType":"module"}