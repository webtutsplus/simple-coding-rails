{"ast":null,"code":"import { getUserDataAndCsrfToken } from '../chat/util';\nimport { getUnopenedChannels } from '../utilities/connect';\nHTMLDocument.prototype.ready = new Promise(function (resolve) {\n  if (document.readyState !== 'loading') {\n    return resolve();\n  }\n\n  document.addEventListener('DOMContentLoaded', function () {\n    return resolve();\n  });\n  return null;\n});\n\nfunction redirectableLocation() {\n  return window.location.pathname !== '/onboarding' && window.location.pathname !== '/signout_confirm' && window.location.pathname !== '/privacy';\n}\n\nfunction onboardingSkippable(currentUser) {\n  return currentUser.saw_onboarding && currentUser.checked_code_of_conduct && currentUser.checked_terms_and_conditions;\n}\n\ndocument.ready.then(getUserDataAndCsrfToken().then(function (_ref) {\n  var currentUser = _ref.currentUser,\n      csrfToken = _ref.csrfToken;\n  window.currentUser = currentUser;\n  window.csrfToken = csrfToken;\n  getUnopenedChannels();\n\n  if (redirectableLocation() && !onboardingSkippable(currentUser)) {\n    window.location = \"\".concat(window.location.origin, \"/onboarding?referrer=\").concat(window.location);\n  }\n})[\"catch\"](function (error) {\n  // eslint-disable-next-line no-console\n  console.error('Error getting user and CSRF Token', error);\n}));\nwindow.InstantClick.on('change', function () {\n  getUserDataAndCsrfToken().then(function (_ref2) {\n    var currentUser = _ref2.currentUser;\n\n    if (redirectableLocation() && localStorage.getItem('shouldRedirectToOnboarding') === null && !onboardingSkippable(currentUser)) {\n      window.location = \"\".concat(window.location.origin, \"/onboarding?referrer=\").concat(window.location);\n    }\n  })[\"catch\"](function (error) {\n    // eslint-disable-next-line no-console\n    console.error('Error getting user and CSRF Token', error);\n  });\n});","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/packs/onboardingRedirectCheck.jsx"],"names":["getUserDataAndCsrfToken","getUnopenedChannels","HTMLDocument","prototype","ready","Promise","resolve","document","readyState","addEventListener","redirectableLocation","window","location","pathname","onboardingSkippable","currentUser","saw_onboarding","checked_code_of_conduct","checked_terms_and_conditions","then","csrfToken","origin","error","console","InstantClick","on","localStorage","getItem"],"mappings":"AAAA,SAASA,uBAAT,QAAwC,cAAxC;AACA,SAASC,mBAAT,QAAoC,sBAApC;AAEAC,YAAY,CAACC,SAAb,CAAuBC,KAAvB,GAA+B,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAa;AACtD,MAAIC,QAAQ,CAACC,UAAT,KAAwB,SAA5B,EAAuC;AACrC,WAAOF,OAAO,EAAd;AACD;;AACDC,EAAAA,QAAQ,CAACE,gBAAT,CAA0B,kBAA1B,EAA8C;AAAA,WAAMH,OAAO,EAAb;AAAA,GAA9C;AACA,SAAO,IAAP;AACD,CAN8B,CAA/B;;AAQA,SAASI,oBAAT,GAAgC;AAC9B,SACEC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,aAA7B,IACAF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,kBAD7B,IAEAF,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,UAH/B;AAKD;;AAED,SAASC,mBAAT,CAA6BC,WAA7B,EAA0C;AACxC,SACEA,WAAW,CAACC,cAAZ,IACAD,WAAW,CAACE,uBADZ,IAEAF,WAAW,CAACG,4BAHd;AAKD;;AAEDX,QAAQ,CAACH,KAAT,CAAee,IAAf,CACEnB,uBAAuB,GACpBmB,IADH,CACQ,gBAAgC;AAAA,MAA7BJ,WAA6B,QAA7BA,WAA6B;AAAA,MAAhBK,SAAgB,QAAhBA,SAAgB;AACpCT,EAAAA,MAAM,CAACI,WAAP,GAAqBA,WAArB;AACAJ,EAAAA,MAAM,CAACS,SAAP,GAAmBA,SAAnB;AACAnB,EAAAA,mBAAmB;;AAEnB,MAAIS,oBAAoB,MAAM,CAACI,mBAAmB,CAACC,WAAD,CAAlD,EAAiE;AAC/DJ,IAAAA,MAAM,CAACC,QAAP,aAAqBD,MAAM,CAACC,QAAP,CAAgBS,MAArC,kCAAmEV,MAAM,CAACC,QAA1E;AACD;AACF,CATH,WAUS,UAACU,KAAD,EAAW;AAChB;AACAC,EAAAA,OAAO,CAACD,KAAR,CAAc,mCAAd,EAAmDA,KAAnD;AACD,CAbH,CADF;AAiBAX,MAAM,CAACa,YAAP,CAAoBC,EAApB,CAAuB,QAAvB,EAAiC,YAAM;AACrCzB,EAAAA,uBAAuB,GACpBmB,IADH,CACQ,iBAAqB;AAAA,QAAlBJ,WAAkB,SAAlBA,WAAkB;;AACzB,QACEL,oBAAoB,MACpBgB,YAAY,CAACC,OAAb,CAAqB,4BAArB,MAAuD,IADvD,IAEA,CAACb,mBAAmB,CAACC,WAAD,CAHtB,EAIE;AACAJ,MAAAA,MAAM,CAACC,QAAP,aAAqBD,MAAM,CAACC,QAAP,CAAgBS,MAArC,kCAAmEV,MAAM,CAACC,QAA1E;AACD;AACF,GATH,WAUS,UAACU,KAAD,EAAW;AAChB;AACAC,IAAAA,OAAO,CAACD,KAAR,CAAc,mCAAd,EAAmDA,KAAnD;AACD,GAbH;AAcD,CAfD","sourcesContent":["import { getUserDataAndCsrfToken } from '../chat/util';\nimport { getUnopenedChannels } from '../utilities/connect';\n\nHTMLDocument.prototype.ready = new Promise((resolve) => {\n  if (document.readyState !== 'loading') {\n    return resolve();\n  }\n  document.addEventListener('DOMContentLoaded', () => resolve());\n  return null;\n});\n\nfunction redirectableLocation() {\n  return (\n    window.location.pathname !== '/onboarding' &&\n    window.location.pathname !== '/signout_confirm' &&\n    window.location.pathname !== '/privacy'\n  );\n}\n\nfunction onboardingSkippable(currentUser) {\n  return (\n    currentUser.saw_onboarding &&\n    currentUser.checked_code_of_conduct &&\n    currentUser.checked_terms_and_conditions\n  );\n}\n\ndocument.ready.then(\n  getUserDataAndCsrfToken()\n    .then(({ currentUser, csrfToken }) => {\n      window.currentUser = currentUser;\n      window.csrfToken = csrfToken;\n      getUnopenedChannels();\n\n      if (redirectableLocation() && !onboardingSkippable(currentUser)) {\n        window.location = `${window.location.origin}/onboarding?referrer=${window.location}`;\n      }\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error getting user and CSRF Token', error);\n    }),\n);\n\nwindow.InstantClick.on('change', () => {\n  getUserDataAndCsrfToken()\n    .then(({ currentUser }) => {\n      if (\n        redirectableLocation() &&\n        localStorage.getItem('shouldRedirectToOnboarding') === null &&\n        !onboardingSkippable(currentUser)\n      ) {\n        window.location = `${window.location.origin}/onboarding?referrer=${window.location}`;\n      }\n    })\n    .catch((error) => {\n      // eslint-disable-next-line no-console\n      console.error('Error getting user and CSRF Token', error);\n    });\n});\n"]},"metadata":{},"sourceType":"module"}