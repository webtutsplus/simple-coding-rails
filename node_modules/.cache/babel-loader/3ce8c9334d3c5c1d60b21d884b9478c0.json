{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* global Runtime */\nimport { h } from 'preact';\nimport { useReducer } from 'preact/hooks';\nimport { generateMainImage } from '../actions';\nimport { validateFileInputs } from '../../packs/validateFileInputs';\nimport { ClipboardButton } from './ClipboardButton';\nimport { Button, Spinner } from '@crayons';\n\nvar ImageIcon = function ImageIcon() {\n  return h(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    className: \"crayons-icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    role: \"img\",\n    \"aria-labelledby\": \"a17qec5pfhrwzk9w4kg0tp62v27qqu9t\"\n  }, h(\"title\", {\n    id: \"a17qec5pfhrwzk9w4kg0tp62v27qqu9t\"\n  }, \"Upload image\"), h(\"path\", {\n    d: \"M20 5H4v14l9.292-9.294a1 1 0 011.414 0L20 15.01V5zM2 3.993A1 1 0 012.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 01-.992.993H2.992A.993.993 0 012 20.007V3.993zM8 11a2 2 0 110-4 2 2 0 010 4z\"\n  }));\n};\n\nImageIcon.displayName = 'ImageIcon';\n\nfunction imageUploaderReducer(state, action) {\n  var type = action.type,\n      payload = action.payload;\n\n  switch (type) {\n    case 'uploading_image':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        uploadError: false,\n        uploadingErrorMessage: null,\n        uploadingImage: true,\n        insertionImageUrls: [],\n        showImageCopiedMessage: false\n      });\n\n    case 'upload_error':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        insertionImageUrls: [],\n        uploadError: true,\n        uploadErrorMessage: payload.errorMessage,\n        uploadingImage: false\n      });\n\n    case 'show_copied_image_message':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        showImageCopiedMessage: true\n      });\n\n    case 'upload_image_success':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        insertionImageUrls: payload.insertionImageUrls,\n        uploadingImage: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nexport var ImageUploader = function ImageUploader() {\n  var _useReducer = useReducer(imageUploaderReducer, {\n    insertionImageUrls: [],\n    uploadError: false,\n    uploadErrorMessage: null,\n    showImageCopiedMessage: false,\n    uploadingImage: false\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var uploadingImage = state.uploadingImage,\n      showImageCopiedMessage = state.showImageCopiedMessage,\n      uploadErrorMessage = state.uploadErrorMessage,\n      uploadError = state.uploadError,\n      insertionImageUrls = state.insertionImageUrls;\n  var imageMarkdownInput = null;\n\n  function onUploadError(error) {\n    dispatch({\n      type: 'upload_error',\n      payload: {\n        errorMessage: error.message\n      }\n    });\n  }\n\n  function copyText() {\n    imageMarkdownInput = document.getElementById('image-markdown-copy-link-input');\n    Runtime.copyToClipboard(imageMarkdownInput.value).then(function () {\n      dispatch({\n        type: 'show_copied_image_message'\n      });\n    });\n  }\n\n  function handleInsertionImageUpload(e) {\n    var files = e.target.files;\n\n    if (files.length > 0 && validateFileInputs()) {\n      var payload = {\n        image: files\n      };\n      dispatch({\n        type: 'uploading_image'\n      });\n      generateMainImage(payload, handleInsertImageUploadSuccess, onUploadError);\n    }\n  }\n\n  function handleInsertImageUploadSuccess(response) {\n    dispatch({\n      type: 'upload_image_success',\n      payload: {\n        insertionImageUrls: response.links\n      }\n    });\n  }\n\n  function handleNativeMessage(e) {\n    var message = JSON.parse(e.target.value);\n\n    switch (message.action) {\n      case 'uploading':\n        dispatch({\n          type: 'uploading_image'\n        });\n        break;\n\n      case 'error':\n        dispatch({\n          type: 'upload_error',\n          payload: {\n            errorMessage: message.error\n          }\n        });\n        break;\n\n      case 'success':\n        dispatch({\n          type: 'upload_image_success',\n          payload: {\n            insertionImageUrls: [message.link]\n          }\n        });\n        break;\n    }\n  }\n\n  function initNativeImagePicker(e) {\n    e.preventDefault();\n    window.webkit.messageHandlers.imageUpload.postMessage({\n      id: 'native-image-upload-message'\n    });\n  } // When the component is rendered in an environment that supports a native\n  // image picker for image upload we want to add the aria-label attr and the\n  // onClick event to the UI button. This event will kick off the native UX.\n  // The props are unwrapped (using spread operator) in the button below\n\n\n  var useNativeUpload = Runtime.isNativeIOS('imageUpload');\n  var extraProps = useNativeUpload ? {\n    onClick: initNativeImagePicker,\n    'aria-label': 'Upload an image'\n  } : {\n    tabIndex: -1\n  };\n  return h(\"div\", {\n    className: \"flex items-center\"\n  }, uploadingImage ? h(\"span\", {\n    \"class\": \"lh-base pl-3 border-0 py-2 inline-block\"\n  }, h(Spinner, null), \" Uploading...\") : h(Button, _extends({\n    className: \"mr-2 fw-normal\",\n    variant: \"ghost\",\n    contentType: \"icon-left\",\n    icon: ImageIcon\n  }, extraProps), \"Upload image\", !useNativeUpload && h(\"input\", {\n    type: \"file\",\n    id: \"image-upload-field\",\n    onChange: handleInsertionImageUpload,\n    className: \"w-100 h-100 absolute left-0 right-0 top-0 bottom-0 overflow-hidden opacity-0 cursor-pointer\",\n    multiple: true,\n    accept: \"image/*\",\n    \"data-max-file-size-mb\": \"25\",\n    \"aria-label\": \"Upload an image\"\n  })), useNativeUpload && h(\"input\", {\n    type: \"hidden\",\n    id: \"native-image-upload-message\",\n    value: \"\",\n    onChange: handleNativeMessage\n  }), insertionImageUrls.length > 0 && h(ClipboardButton, {\n    onCopy: copyText,\n    imageUrls: insertionImageUrls,\n    showCopyMessage: showImageCopiedMessage\n  }), uploadError && h(\"span\", {\n    className: \"color-accent-danger\"\n  }, uploadErrorMessage));\n};\nImageUploader.displayName = 'ImageUploader';","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/article-form/components/ImageUploader.jsx"],"names":["h","useReducer","generateMainImage","validateFileInputs","ClipboardButton","Button","Spinner","ImageIcon","displayName","imageUploaderReducer","state","action","type","payload","uploadError","uploadingErrorMessage","uploadingImage","insertionImageUrls","showImageCopiedMessage","uploadErrorMessage","errorMessage","ImageUploader","dispatch","imageMarkdownInput","onUploadError","error","message","copyText","document","getElementById","Runtime","copyToClipboard","value","then","handleInsertionImageUpload","e","files","target","length","image","handleInsertImageUploadSuccess","response","links","handleNativeMessage","JSON","parse","link","initNativeImagePicker","preventDefault","window","webkit","messageHandlers","imageUpload","postMessage","id","useNativeUpload","isNativeIOS","extraProps","onClick","tabIndex"],"mappings":"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","sourcesContent":["/* global Runtime */\n\nimport { h } from 'preact';\nimport { useReducer } from 'preact/hooks';\nimport { generateMainImage } from '../actions';\nimport { validateFileInputs } from '../../packs/validateFileInputs';\nimport { ClipboardButton } from './ClipboardButton';\nimport { Button, Spinner } from '@crayons';\n\nconst ImageIcon = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    className=\"crayons-icon\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    aria-labelledby=\"a17qec5pfhrwzk9w4kg0tp62v27qqu9t\"\n  >\n    <title id=\"a17qec5pfhrwzk9w4kg0tp62v27qqu9t\">Upload image</title>\n    <path d=\"M20 5H4v14l9.292-9.294a1 1 0 011.414 0L20 15.01V5zM2 3.993A1 1 0 012.992 3h18.016c.548 0 .992.445.992.993v16.014a1 1 0 01-.992.993H2.992A.993.993 0 012 20.007V3.993zM8 11a2 2 0 110-4 2 2 0 010 4z\" />\n  </svg>\n);\n\nImageIcon.displayName = 'ImageIcon';\n\nfunction imageUploaderReducer(state, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case 'uploading_image':\n      return {\n        ...state,\n        uploadError: false,\n        uploadingErrorMessage: null,\n        uploadingImage: true,\n        insertionImageUrls: [],\n        showImageCopiedMessage: false,\n      };\n\n    case 'upload_error':\n      return {\n        ...state,\n        insertionImageUrls: [],\n        uploadError: true,\n        uploadErrorMessage: payload.errorMessage,\n        uploadingImage: false,\n      };\n\n    case 'show_copied_image_message':\n      return {\n        ...state,\n        showImageCopiedMessage: true,\n      };\n\n    case 'upload_image_success':\n      return {\n        ...state,\n        insertionImageUrls: payload.insertionImageUrls,\n        uploadingImage: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const ImageUploader = () => {\n  const [state, dispatch] = useReducer(imageUploaderReducer, {\n    insertionImageUrls: [],\n    uploadError: false,\n    uploadErrorMessage: null,\n    showImageCopiedMessage: false,\n    uploadingImage: false,\n  });\n\n  const {\n    uploadingImage,\n    showImageCopiedMessage,\n    uploadErrorMessage,\n    uploadError,\n    insertionImageUrls,\n  } = state;\n\n  let imageMarkdownInput = null;\n\n  function onUploadError(error) {\n    dispatch({\n      type: 'upload_error',\n      payload: { errorMessage: error.message },\n    });\n  }\n\n  function copyText() {\n    imageMarkdownInput = document.getElementById(\n      'image-markdown-copy-link-input',\n    );\n\n    Runtime.copyToClipboard(imageMarkdownInput.value).then(() => {\n      dispatch({\n        type: 'show_copied_image_message',\n      });\n    });\n  }\n\n  function handleInsertionImageUpload(e) {\n    const { files } = e.target;\n\n    if (files.length > 0 && validateFileInputs()) {\n      const payload = { image: files };\n      dispatch({\n        type: 'uploading_image',\n      });\n\n      generateMainImage(payload, handleInsertImageUploadSuccess, onUploadError);\n    }\n  }\n\n  function handleInsertImageUploadSuccess(response) {\n    dispatch({\n      type: 'upload_image_success',\n      payload: { insertionImageUrls: response.links },\n    });\n  }\n\n  function handleNativeMessage(e) {\n    const message = JSON.parse(e.target.value);\n\n    switch (message.action) {\n      case 'uploading':\n        dispatch({\n          type: 'uploading_image',\n        });\n        break;\n      case 'error':\n        dispatch({\n          type: 'upload_error',\n          payload: { errorMessage: message.error },\n        });\n        break;\n      case 'success':\n        dispatch({\n          type: 'upload_image_success',\n          payload: { insertionImageUrls: [message.link] },\n        });\n        break;\n    }\n  }\n\n  function initNativeImagePicker(e) {\n    e.preventDefault();\n    window.webkit.messageHandlers.imageUpload.postMessage({\n      id: 'native-image-upload-message',\n    });\n  }\n\n  // When the component is rendered in an environment that supports a native\n  // image picker for image upload we want to add the aria-label attr and the\n  // onClick event to the UI button. This event will kick off the native UX.\n  // The props are unwrapped (using spread operator) in the button below\n  const useNativeUpload = Runtime.isNativeIOS('imageUpload');\n  const extraProps = useNativeUpload\n    ? { onClick: initNativeImagePicker, 'aria-label': 'Upload an image' }\n    : { tabIndex: -1 };\n\n  return (\n    <div className=\"flex items-center\">\n      {uploadingImage ? (\n        <span class=\"lh-base pl-3 border-0 py-2 inline-block\">\n          <Spinner /> Uploading...\n        </span>\n      ) : (\n        <Button\n          className=\"mr-2 fw-normal\"\n          variant=\"ghost\"\n          contentType=\"icon-left\"\n          icon={ImageIcon}\n          {...extraProps}\n        >\n          Upload image\n          {!useNativeUpload && (\n            <input\n              type=\"file\"\n              id=\"image-upload-field\"\n              onChange={handleInsertionImageUpload}\n              className=\"w-100 h-100 absolute left-0 right-0 top-0 bottom-0 overflow-hidden opacity-0 cursor-pointer\"\n              multiple\n              accept=\"image/*\"\n              data-max-file-size-mb=\"25\"\n              aria-label=\"Upload an image\"\n            />\n          )}\n        </Button>\n      )}\n\n      {useNativeUpload && (\n        <input\n          type=\"hidden\"\n          id=\"native-image-upload-message\"\n          value=\"\"\n          onChange={handleNativeMessage}\n        />\n      )}\n\n      {insertionImageUrls.length > 0 && (\n        <ClipboardButton\n          onCopy={copyText}\n          imageUrls={insertionImageUrls}\n          showCopyMessage={showImageCopiedMessage}\n        />\n      )}\n\n      {uploadError && (\n        <span className=\"color-accent-danger\">{uploadErrorMessage}</span>\n      )}\n    </div>\n  );\n};\n\nImageUploader.displayName = 'ImageUploader';\n"]},"metadata":{},"sourceType":"module"}