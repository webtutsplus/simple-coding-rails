{"ast":null,"code":"import { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'preact/hooks';\nimport { ErrorList } from './ErrorList';\n\nfunction titleArea(previewResponse, articleState, errors) {\n  var tagArray = previewResponse.tags || articleState.tagList.split(', ');\n  var tags = '';\n\n  if (tagArray.length > 0 && tagArray[0].length > 0) {\n    tags = tagArray.map(function (tag) {\n      return tag.length > 0 && h(\"span\", {\n        className: \"crayons-tag mr-2\"\n      }, h(\"span\", {\n        className: \"crayons-tag__prefix\"\n      }, \"#\"), tag);\n    });\n  } // The v2 editor stores its cover image in articleState.mainImage, while the v1 editor\n  // stores it as previewRespose.cover_image. When previewing, we handle both by\n  // defaulting to setting the cover image to the mainImage on the article (v2),\n  //  and only using the cover image from the previewResponse if it exists (v1).\n\n\n  var coverImage = articleState.mainImage || '';\n\n  if (articleState.previewShowing) {\n    // In preview state, use the cover_image from previewResponse.\n    if (previewResponse.cover_image && previewResponse.cover_image.length > 0) {\n      coverImage = previewResponse.cover_image;\n    }\n  }\n\n  var previewTitle = previewResponse.title || articleState.title || '';\n  return h(\"header\", {\n    className: \"crayons-article__header\"\n  }, coverImage.length > 0 && h(\"div\", {\n    \"data-testid\": \"article-form__cover\",\n    className: \"crayons-article__cover\"\n  }, h(\"img\", {\n    className: \"crayons-article__cover__image\",\n    src: coverImage,\n    width: \"1000\",\n    height: \"420\",\n    alt: \"Post preview cover\"\n  })), h(\"div\", {\n    className: \"crayons-article__header__meta\"\n  }, errors && h(ErrorList, {\n    errors: errors\n  }), h(\"h1\", {\n    className: \"fs-3xl s:fs-4xl l:fs-5xl fw-bold s:fw-heavy lh-tight mb-6 spec-article__title\"\n  }, previewTitle), h(\"div\", {\n    className: \"spec-article__tags\"\n  }, tags)));\n}\n\nvar previewResponsePropTypes = PropTypes.shape({\n  processed_html: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  tags: PropTypes.array,\n  cover_image: PropTypes.string\n});\nexport var Preview = function Preview(_ref) {\n  var previewResponse = _ref.previewResponse,\n      articleState = _ref.articleState,\n      errors = _ref.errors;\n  useEffect(function () {\n    if (previewResponse.processed_html.includes('twitter-timeline')) {\n      attachTwitterTimelineScript();\n    }\n  }, [previewResponse]);\n  return h(\"div\", {\n    className: \"crayons-article-form__content crayons-card\"\n  }, h(\"article\", {\n    className: \"crayons-article\"\n  }, titleArea(previewResponse, articleState, errors), h(\"div\", {\n    className: \"crayons-article__main\"\n  }, h(\"div\", {\n    className: \"crayons-article__body text-styles\" // eslint-disable-next-line react/no-danger\n    ,\n    dangerouslySetInnerHTML: {\n      __html: previewResponse.processed_html\n    }\n  }))));\n};\n\nfunction attachTwitterTimelineScript() {\n  var script = document.createElement('script');\n  script.src = 'https://platform.twitter.com/widgets.js';\n  script.async = true;\n  document.body.appendChild(script);\n  return function () {\n    document.body.removeChild(script);\n  };\n}\n\nPreview.propTypes = {\n  previewResponse: previewResponsePropTypes.isRequired,\n  errors: PropTypes.string.isRequired,\n  articleState: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    tagList: PropTypes.string,\n    description: PropTypes.string,\n    canonicalUrl: PropTypes.string,\n    series: PropTypes.string,\n    allSeries: PropTypes.arrayOf(PropTypes.string),\n    bodyMarkdown: PropTypes.string,\n    published: PropTypes.bool,\n    previewShowing: PropTypes.bool,\n    helpShowing: PropTypes.bool,\n    previewResponse: previewResponsePropTypes,\n    helpHTML: PropTypes.string,\n    submitting: PropTypes.bool,\n    editing: PropTypes.bool,\n    imageManagementShowing: PropTypes.bool,\n    moreConfigShowing: PropTypes.bool,\n    mainImage: PropTypes.string,\n    organization: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      bg_color_hex: PropTypes.string.isRequired,\n      text_color_hex: PropTypes.string.isRequired,\n      profile_image_90: PropTypes.string.isRequired\n    }),\n    postUnderOrg: PropTypes.bool,\n    errors: PropTypes.any,\n    edited: PropTypes.bool,\n    version: PropTypes.string\n  }).isRequired\n};\nPreview.displayName = 'Preview';","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/article-form/components/Preview.jsx"],"names":["h","PropTypes","useEffect","ErrorList","titleArea","previewResponse","articleState","errors","tagArray","tags","tagList","split","length","map","tag","coverImage","mainImage","previewShowing","cover_image","previewTitle","title","previewResponsePropTypes","shape","processed_html","string","isRequired","array","Preview","includes","attachTwitterTimelineScript","__html","script","document","createElement","src","async","body","appendChild","removeChild","propTypes","id","number","description","canonicalUrl","series","allSeries","arrayOf","bodyMarkdown","published","bool","helpShowing","helpHTML","submitting","editing","imageManagementShowing","moreConfigShowing","organization","name","bg_color_hex","text_color_hex","profile_image_90","postUnderOrg","any","edited","version","displayName"],"mappings":"AAAA,SAASA,CAAT,QAAkB,QAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,SAASC,SAAT,CAAmBC,eAAnB,EAAoCC,YAApC,EAAkDC,MAAlD,EAA0D;AACxD,MAAMC,QAAQ,GAAGH,eAAe,CAACI,IAAhB,IAAwBH,YAAY,CAACI,OAAb,CAAqBC,KAArB,CAA2B,IAA3B,CAAzC;AACA,MAAIF,IAAI,GAAG,EAAX;;AACA,MAAID,QAAQ,CAACI,MAAT,GAAkB,CAAlB,IAAuBJ,QAAQ,CAAC,CAAD,CAAR,CAAYI,MAAZ,GAAqB,CAAhD,EAAmD;AACjDH,IAAAA,IAAI,GAAGD,QAAQ,CAACK,GAAT,CAAa,UAACC,GAAD,EAAS;AAC3B,aACEA,GAAG,CAACF,MAAJ,GAAa,CAAb,IACE;AAAM,QAAA,SAAS,EAAC;AAAhB,SACE;AAAM,QAAA,SAAS,EAAC;AAAhB,aADF,EAEGE,GAFH,CAFJ;AAQD,KATM,CAAP;AAUD,GAduD,CAgBxD;AACA;AACA;AACA;;;AACA,MAAIC,UAAU,GAAGT,YAAY,CAACU,SAAb,IAA0B,EAA3C;;AACA,MAAIV,YAAY,CAACW,cAAjB,EAAiC;AAC/B;AACA,QAAIZ,eAAe,CAACa,WAAhB,IAA+Bb,eAAe,CAACa,WAAhB,CAA4BN,MAA5B,GAAqC,CAAxE,EAA2E;AACzEG,MAAAA,UAAU,GAAGV,eAAe,CAACa,WAA7B;AACD;AACF;;AAED,MAAMC,YAAY,GAAGd,eAAe,CAACe,KAAhB,IAAyBd,YAAY,CAACc,KAAtC,IAA+C,EAApE;AAEA,SACE;AAAQ,IAAA,SAAS,EAAC;AAAlB,KACGL,UAAU,CAACH,MAAX,GAAoB,CAApB,IACC;AACE,mBAAY,qBADd;AAEE,IAAA,SAAS,EAAC;AAFZ,KAIE;AACE,IAAA,SAAS,EAAC,+BADZ;AAEE,IAAA,GAAG,EAAEG,UAFP;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC,KAJT;AAKE,IAAA,GAAG,EAAC;AALN,IAJF,CAFJ,EAeE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGR,MAAM,IAAI,EAAC,SAAD;AAAW,IAAA,MAAM,EAAEA;AAAnB,IADb,EAEE;AAAI,IAAA,SAAS,EAAC;AAAd,KACGY,YADH,CAFF,EAME;AAAK,IAAA,SAAS,EAAC;AAAf,KAAqCV,IAArC,CANF,CAfF,CADF;AA0BD;;AAED,IAAMY,wBAAwB,GAAGpB,SAAS,CAACqB,KAAV,CAAgB;AAC/CC,EAAAA,cAAc,EAAEtB,SAAS,CAACuB,MAAV,CAAiBC,UADc;AAE/CL,EAAAA,KAAK,EAAEnB,SAAS,CAACuB,MAF8B;AAG/Cf,EAAAA,IAAI,EAAER,SAAS,CAACyB,KAH+B;AAI/CR,EAAAA,WAAW,EAAEjB,SAAS,CAACuB;AAJwB,CAAhB,CAAjC;AAOA,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,OAA+C;AAAA,MAA5CtB,eAA4C,QAA5CA,eAA4C;AAAA,MAA3BC,YAA2B,QAA3BA,YAA2B;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACpEL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIG,eAAe,CAACkB,cAAhB,CAA+BK,QAA/B,CAAwC,kBAAxC,CAAJ,EAAiE;AAC/DC,MAAAA,2BAA2B;AAC5B;AACF,GAJQ,EAIN,CAACxB,eAAD,CAJM,CAAT;AAMA,SACE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AAAS,IAAA,SAAS,EAAC;AAAnB,KACGD,SAAS,CAACC,eAAD,EAAkBC,YAAlB,EAAgCC,MAAhC,CADZ,EAEE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE;AACE,IAAA,SAAS,EAAC,mCADZ,CAEE;AAFF;AAGE,IAAA,uBAAuB,EAAE;AAAEuB,MAAAA,MAAM,EAAEzB,eAAe,CAACkB;AAA1B;AAH3B,IADF,CAFF,CADF,CADF;AAcD,CArBM;;AAuBP,SAASM,2BAAT,GAAuC;AACrC,MAAME,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,EAAAA,MAAM,CAACG,GAAP,GAAa,yCAAb;AACAH,EAAAA,MAAM,CAACI,KAAP,GAAe,IAAf;AACAH,EAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,MAA1B;AACA,SAAO,YAAM;AACXC,IAAAA,QAAQ,CAACI,IAAT,CAAcE,WAAd,CAA0BP,MAA1B;AACD,GAFD;AAGD;;AAEDJ,OAAO,CAACY,SAAR,GAAoB;AAClBlC,EAAAA,eAAe,EAAEgB,wBAAwB,CAACI,UADxB;AAElBlB,EAAAA,MAAM,EAAEN,SAAS,CAACuB,MAAV,CAAiBC,UAFP;AAGlBnB,EAAAA,YAAY,EAAEL,SAAS,CAACqB,KAAV,CAAgB;AAC5BkB,IAAAA,EAAE,EAAEvC,SAAS,CAACwC,MADc;AAE5BrB,IAAAA,KAAK,EAAEnB,SAAS,CAACuB,MAFW;AAG5Bd,IAAAA,OAAO,EAAET,SAAS,CAACuB,MAHS;AAI5BkB,IAAAA,WAAW,EAAEzC,SAAS,CAACuB,MAJK;AAK5BmB,IAAAA,YAAY,EAAE1C,SAAS,CAACuB,MALI;AAM5BoB,IAAAA,MAAM,EAAE3C,SAAS,CAACuB,MANU;AAO5BqB,IAAAA,SAAS,EAAE5C,SAAS,CAAC6C,OAAV,CAAkB7C,SAAS,CAACuB,MAA5B,CAPiB;AAQ5BuB,IAAAA,YAAY,EAAE9C,SAAS,CAACuB,MARI;AAS5BwB,IAAAA,SAAS,EAAE/C,SAAS,CAACgD,IATO;AAU5BhC,IAAAA,cAAc,EAAEhB,SAAS,CAACgD,IAVE;AAW5BC,IAAAA,WAAW,EAAEjD,SAAS,CAACgD,IAXK;AAY5B5C,IAAAA,eAAe,EAAEgB,wBAZW;AAa5B8B,IAAAA,QAAQ,EAAElD,SAAS,CAACuB,MAbQ;AAc5B4B,IAAAA,UAAU,EAAEnD,SAAS,CAACgD,IAdM;AAe5BI,IAAAA,OAAO,EAAEpD,SAAS,CAACgD,IAfS;AAgB5BK,IAAAA,sBAAsB,EAAErD,SAAS,CAACgD,IAhBN;AAiB5BM,IAAAA,iBAAiB,EAAEtD,SAAS,CAACgD,IAjBD;AAkB5BjC,IAAAA,SAAS,EAAEf,SAAS,CAACuB,MAlBO;AAmB5BgC,IAAAA,YAAY,EAAEvD,SAAS,CAACqB,KAAV,CAAgB;AAC5BmC,MAAAA,IAAI,EAAExD,SAAS,CAACuB,MAAV,CAAiBC,UADK;AAE5BiC,MAAAA,YAAY,EAAEzD,SAAS,CAACuB,MAAV,CAAiBC,UAFH;AAG5BkC,MAAAA,cAAc,EAAE1D,SAAS,CAACuB,MAAV,CAAiBC,UAHL;AAI5BmC,MAAAA,gBAAgB,EAAE3D,SAAS,CAACuB,MAAV,CAAiBC;AAJP,KAAhB,CAnBc;AAyB5BoC,IAAAA,YAAY,EAAE5D,SAAS,CAACgD,IAzBI;AA0B5B1C,IAAAA,MAAM,EAAEN,SAAS,CAAC6D,GA1BU;AA2B5BC,IAAAA,MAAM,EAAE9D,SAAS,CAACgD,IA3BU;AA4B5Be,IAAAA,OAAO,EAAE/D,SAAS,CAACuB;AA5BS,GAAhB,EA6BXC;AAhCe,CAApB;AAmCAE,OAAO,CAACsC,WAAR,GAAsB,SAAtB","sourcesContent":["import { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'preact/hooks';\nimport { ErrorList } from './ErrorList';\n\nfunction titleArea(previewResponse, articleState, errors) {\n  const tagArray = previewResponse.tags || articleState.tagList.split(', ');\n  let tags = '';\n  if (tagArray.length > 0 && tagArray[0].length > 0) {\n    tags = tagArray.map((tag) => {\n      return (\n        tag.length > 0 && (\n          <span className=\"crayons-tag mr-2\">\n            <span className=\"crayons-tag__prefix\">#</span>\n            {tag}\n          </span>\n        )\n      );\n    });\n  }\n\n  // The v2 editor stores its cover image in articleState.mainImage, while the v1 editor\n  // stores it as previewRespose.cover_image. When previewing, we handle both by\n  // defaulting to setting the cover image to the mainImage on the article (v2),\n  //  and only using the cover image from the previewResponse if it exists (v1).\n  let coverImage = articleState.mainImage || '';\n  if (articleState.previewShowing) {\n    // In preview state, use the cover_image from previewResponse.\n    if (previewResponse.cover_image && previewResponse.cover_image.length > 0) {\n      coverImage = previewResponse.cover_image;\n    }\n  }\n\n  const previewTitle = previewResponse.title || articleState.title || '';\n\n  return (\n    <header className=\"crayons-article__header\">\n      {coverImage.length > 0 && (\n        <div\n          data-testid=\"article-form__cover\"\n          className=\"crayons-article__cover\"\n        >\n          <img\n            className=\"crayons-article__cover__image\"\n            src={coverImage}\n            width=\"1000\"\n            height=\"420\"\n            alt=\"Post preview cover\"\n          />\n        </div>\n      )}\n      <div className=\"crayons-article__header__meta\">\n        {errors && <ErrorList errors={errors} />}\n        <h1 className=\"fs-3xl s:fs-4xl l:fs-5xl fw-bold s:fw-heavy lh-tight mb-6 spec-article__title\">\n          {previewTitle}\n        </h1>\n\n        <div className=\"spec-article__tags\">{tags}</div>\n      </div>\n    </header>\n  );\n}\n\nconst previewResponsePropTypes = PropTypes.shape({\n  processed_html: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  tags: PropTypes.array,\n  cover_image: PropTypes.string,\n});\n\nexport const Preview = ({ previewResponse, articleState, errors }) => {\n  useEffect(() => {\n    if (previewResponse.processed_html.includes('twitter-timeline')) {\n      attachTwitterTimelineScript();\n    }\n  }, [previewResponse]);\n\n  return (\n    <div className=\"crayons-article-form__content crayons-card\">\n      <article className=\"crayons-article\">\n        {titleArea(previewResponse, articleState, errors)}\n        <div className=\"crayons-article__main\">\n          <div\n            className=\"crayons-article__body text-styles\"\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: previewResponse.processed_html }}\n          />\n        </div>\n      </article>\n    </div>\n  );\n};\n\nfunction attachTwitterTimelineScript() {\n  const script = document.createElement('script');\n  script.src = 'https://platform.twitter.com/widgets.js';\n  script.async = true;\n  document.body.appendChild(script);\n  return () => {\n    document.body.removeChild(script);\n  };\n}\n\nPreview.propTypes = {\n  previewResponse: previewResponsePropTypes.isRequired,\n  errors: PropTypes.string.isRequired,\n  articleState: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    tagList: PropTypes.string,\n    description: PropTypes.string,\n    canonicalUrl: PropTypes.string,\n    series: PropTypes.string,\n    allSeries: PropTypes.arrayOf(PropTypes.string),\n    bodyMarkdown: PropTypes.string,\n    published: PropTypes.bool,\n    previewShowing: PropTypes.bool,\n    helpShowing: PropTypes.bool,\n    previewResponse: previewResponsePropTypes,\n    helpHTML: PropTypes.string,\n    submitting: PropTypes.bool,\n    editing: PropTypes.bool,\n    imageManagementShowing: PropTypes.bool,\n    moreConfigShowing: PropTypes.bool,\n    mainImage: PropTypes.string,\n    organization: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      bg_color_hex: PropTypes.string.isRequired,\n      text_color_hex: PropTypes.string.isRequired,\n      profile_image_90: PropTypes.string.isRequired,\n    }),\n    postUnderOrg: PropTypes.bool,\n    errors: PropTypes.any,\n    edited: PropTypes.bool,\n    version: PropTypes.string,\n  }).isRequired,\n};\n\nPreview.displayName = 'Preview';\n"]},"metadata":{},"sourceType":"module"}