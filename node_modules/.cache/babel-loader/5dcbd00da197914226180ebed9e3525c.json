{"ast":null,"code":"import { h, render } from 'preact';\nimport { TagsFollowed } from '../leftSidebar/TagsFollowed';\n/* global userData */\n// This logic is similar to that in initScrolling.js.erb\n\nvar frontPageFeedPathNames = new Map([['/', ''], ['/top/week', 'week'], ['/top/month', 'month'], ['/top/year', 'year'], ['/top/infinity', 'infinity'], ['/latest', 'latest']]);\n/**\n * Renders tags followed in the left side bar of the homepage.\n *\n * @param {HTMLElement} tagsFollowedContainer DOM element to render tags followed.\n * @param {object} user The currently logged on user, null if not logged on.\n */\n\nfunction renderTagsFollowed() {\n  var user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userData();\n  var tagsFollowedContainer = document.getElementById('sidebar-nav-followed-tags');\n\n  if (!tagsFollowedContainer) {\n    // Not on the homepage, so nothing to do.\n    return false;\n  }\n\n  if (user === null || document.getElementById('followed-tags-wrapper')) {\n    return;\n  } // Only render if a user is logged on.\n\n\n  var followed_tags = user.followed_tags; // eslint-disable-line camelcase\n\n  var followedTags = JSON.parse(followed_tags); // This should be done server-side potentially\n  // sort tags by descending weight, descending popularity and name\n\n  followedTags.sort(function (tagA, tagB) {\n    return tagB.points - tagA.points || tagB.hotness_score - tagA.hotness_score || tagA.name.localeCompare(tagB.name);\n  });\n  render(h(TagsFollowed, {\n    tags: followedTags\n  }), tagsFollowedContainer, tagsFollowedContainer.firstElementChild);\n}\n\nfunction renderSidebar() {\n  var sidebarContainer = document.getElementById('sidebar-wrapper-right'); // If the screen's width is less than 1024px we don't need this extra data.\n\n  if (sidebarContainer && screen.width > 1023 && window.location.pathname === '/') {\n    window.fetch('/sidebars/home').then(function (res) {\n      return res.text();\n    }).then(function (response) {\n      sidebarContainer.innerHTML = response;\n    });\n  }\n}\n\nvar feedTimeFrame = frontPageFeedPathNames.get(window.location.pathname);\n\nif (!document.getElementById('featured-story-marker')) {\n  var waitingForDataLoad = setInterval(function () {\n    var _document$body$datase = document.body.dataset,\n        _document$body$datase2 = _document$body$datase.user,\n        user = _document$body$datase2 === void 0 ? null : _document$body$datase2,\n        userStatus = _document$body$datase.userStatus;\n\n    if (userStatus === 'logged-out') {\n      return;\n    }\n\n    if (userStatus === 'logged-in' && user !== null) {\n      clearInterval(waitingForDataLoad);\n\n      if (document.getElementById('rendered-article-feed')) {\n        return;\n      }\n\n      import('./homePageFeed').then(function (_ref) {\n        var renderFeed = _ref.renderFeed;\n        // We have user data, render followed tags.\n        renderFeed(feedTimeFrame);\n        InstantClick.on('change', function () {\n          var currentUserStatus = document.body.dataset.userStatus;\n\n          if (currentUserStatus === 'logged-out') {\n            return;\n          }\n\n          var url = new URL(window.location);\n          var changedFeedTimeFrame = frontPageFeedPathNames.get(url.pathname);\n\n          if (!frontPageFeedPathNames.has(url.pathname)) {\n            return;\n          }\n\n          renderFeed(changedFeedTimeFrame);\n        });\n      });\n      renderTagsFollowed();\n      renderSidebar();\n    }\n  }, 2);\n}\n\nInstantClick.on('change', function () {\n  if (document.body.dataset.userStatus !== 'logged-in') {\n    // Nothing to do, the user is not logged on.\n    return false;\n  }\n\n  renderTagsFollowed();\n  renderSidebar();\n});\nInstantClick.init();","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/packs/homePage.jsx"],"names":["h","render","TagsFollowed","frontPageFeedPathNames","Map","renderTagsFollowed","user","userData","tagsFollowedContainer","document","getElementById","followed_tags","followedTags","JSON","parse","sort","tagA","tagB","points","hotness_score","name","localeCompare","firstElementChild","renderSidebar","sidebarContainer","screen","width","window","location","pathname","fetch","then","res","text","response","innerHTML","feedTimeFrame","get","waitingForDataLoad","setInterval","body","dataset","userStatus","clearInterval","renderFeed","InstantClick","on","currentUserStatus","url","URL","changedFeedTimeFrame","has","init"],"mappings":"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","sourcesContent":["import { h, render } from 'preact';\nimport { TagsFollowed } from '../leftSidebar/TagsFollowed';\n\n/* global userData */\n// This logic is similar to that in initScrolling.js.erb\nconst frontPageFeedPathNames = new Map([\n  ['/', ''],\n  ['/top/week', 'week'],\n  ['/top/month', 'month'],\n  ['/top/year', 'year'],\n  ['/top/infinity', 'infinity'],\n  ['/latest', 'latest'],\n]);\n\n/**\n * Renders tags followed in the left side bar of the homepage.\n *\n * @param {HTMLElement} tagsFollowedContainer DOM element to render tags followed.\n * @param {object} user The currently logged on user, null if not logged on.\n */\n\nfunction renderTagsFollowed(user = userData()) {\n  const tagsFollowedContainer = document.getElementById(\n    'sidebar-nav-followed-tags',\n  );\n  if (!tagsFollowedContainer) {\n    // Not on the homepage, so nothing to do.\n    return false;\n  }\n  if (user === null || document.getElementById('followed-tags-wrapper')) {\n    return;\n  }\n\n  // Only render if a user is logged on.\n  const { followed_tags } = user; // eslint-disable-line camelcase\n  const followedTags = JSON.parse(followed_tags);\n\n  // This should be done server-side potentially\n  // sort tags by descending weight, descending popularity and name\n  followedTags.sort((tagA, tagB) => {\n    return (\n      tagB.points - tagA.points ||\n      tagB.hotness_score - tagA.hotness_score ||\n      tagA.name.localeCompare(tagB.name)\n    );\n  });\n\n  render(\n    <TagsFollowed tags={followedTags} />,\n    tagsFollowedContainer,\n    tagsFollowedContainer.firstElementChild,\n  );\n}\n\nfunction renderSidebar() {\n  const sidebarContainer = document.getElementById('sidebar-wrapper-right');\n\n  // If the screen's width is less than 1024px we don't need this extra data.\n  if (sidebarContainer && screen.width > 1023 && window.location.pathname === '/') {\n    window.fetch('/sidebars/home')\n    .then(res => res.text())\n    .then(response => {\n      sidebarContainer.innerHTML = response;\n    });\n  }\n}\n\nconst feedTimeFrame = frontPageFeedPathNames.get(window.location.pathname);\n\nif (!document.getElementById('featured-story-marker')) {\n  const waitingForDataLoad = setInterval(() => {\n    const { user = null, userStatus } = document.body.dataset;\n    if (userStatus === 'logged-out') {\n      return;\n    }\n\n    if (userStatus === 'logged-in' && user !== null) {\n      clearInterval(waitingForDataLoad);\n      if (document.getElementById('rendered-article-feed')) {\n        return;\n      }\n      import('./homePageFeed').then(({ renderFeed }) => {\n        // We have user data, render followed tags.\n        renderFeed(feedTimeFrame);\n\n        InstantClick.on('change', () => {\n          const { userStatus: currentUserStatus } = document.body.dataset;\n\n          if (currentUserStatus === 'logged-out') {\n            return;\n          }\n\n          const url = new URL(window.location);\n          const changedFeedTimeFrame = frontPageFeedPathNames.get(url.pathname);\n\n          if (!frontPageFeedPathNames.has(url.pathname)) {\n            return;\n          }\n\n          renderFeed(changedFeedTimeFrame);\n        });\n      });\n\n      renderTagsFollowed();\n      renderSidebar();\n    }\n  }, 2);\n}\n\nInstantClick.on('change', () => {\n  if (document.body.dataset.userStatus !== 'logged-in') {\n    // Nothing to do, the user is not logged on.\n    return false;\n  }\n\n  renderTagsFollowed();\n  renderSidebar();\n});\nInstantClick.init();\n"]},"metadata":{},"sourceType":"module"}