{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { userData, getContentOfToken, updateOnboarding } from '../utilities';\nimport Navigation from './Navigation';\nimport ColorPicker from './ProfileForm/ColorPicker';\nimport TextArea from './ProfileForm/TextArea';\nimport TextInput from './ProfileForm/TextInput';\nimport CheckBox from './ProfileForm/CheckBox';\nimport { request } from '@utilities/http';\n/* eslint-disable camelcase */\n\nvar ProfileForm = /*#__PURE__*/function (_Component) {\n  _inherits(ProfileForm, _Component);\n\n  var _super = _createSuper(ProfileForm);\n\n  function ProfileForm(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileForm);\n\n    _this = _super.call(this, props);\n    _this.handleFieldChange = _this.handleFieldChange.bind(_assertThisInitialized(_this));\n    _this.handleColorPickerChange = _this.handleColorPickerChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.user = userData();\n    _this.state = {\n      groups: [],\n      formValues: {},\n      canSkip: true,\n      last_onboarding_page: 'v2: personal info form'\n    };\n    return _this;\n  }\n\n  _createClass(ProfileForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getProfielFieldGroups();\n      updateOnboarding('v2: personal info form');\n    }\n  }, {\n    key: \"getProfielFieldGroups\",\n    value: function () {\n      var _getProfielFieldGroups = _asyncToGenerator(function* () {\n        try {\n          var response = yield request(\"/profile_field_groups?onboarding=true\");\n\n          if (response.ok) {\n            var data = yield response.json();\n            this.setState({\n              groups: data.profile_field_groups\n            });\n          } else {\n            throw new Error(response.statusText);\n          }\n        } catch (error) {\n          this.setState({\n            error: true,\n            errorMessage: error.toString()\n          });\n        }\n      });\n\n      function getProfielFieldGroups() {\n        return _getProfielFieldGroups.apply(this, arguments);\n      }\n\n      return getProfielFieldGroups;\n    }()\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var _this2 = this;\n\n      var csrfToken = getContentOfToken('csrf-token');\n      var _this$state = this.state,\n          formValues = _this$state.formValues,\n          last_onboarding_page = _this$state.last_onboarding_page;\n      fetch('/onboarding_update', {\n        method: 'PATCH',\n        headers: {\n          'X-CSRF-Token': csrfToken,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            last_onboarding_page: last_onboarding_page\n          },\n          profile: _objectSpread({}, formValues)\n        }),\n        credentials: 'same-origin'\n      }).then(function (response) {\n        if (response.ok) {\n          var next = _this2.props.next;\n          next();\n        }\n      });\n    }\n  }, {\n    key: \"handleFieldChange\",\n    value: function handleFieldChange(e) {\n      var _this$state2 = _objectSpread({}, this.state),\n          formValues = _this$state2.formValues;\n\n      var currentFormState = formValues;\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n      currentFormState[name] = value;\n      this.setState({\n        formValues: currentFormState,\n        canSkip: this.formIsEmpty(currentFormState)\n      });\n    }\n  }, {\n    key: \"handleColorPickerChange\",\n    value: function handleColorPickerChange(e) {\n      var _this$state3 = _objectSpread({}, this.state),\n          formValues = _this$state3.formValues;\n\n      var currentFormState = formValues;\n      var field = e.target;\n      var name = field.name,\n          value = field.value;\n      var sibling = field.nextElementSibling ? field.nextElementSibling : field.previousElementSibling;\n      sibling.value = value;\n      currentFormState[name] = value;\n      this.setState({\n        formValues: currentFormState,\n        canSkip: this.formIsEmpty(currentFormState)\n      });\n    }\n  }, {\n    key: \"formIsEmpty\",\n    value: function formIsEmpty(currentFormState) {\n      // Once we've derived the new form values, check if the form is empty\n      // and use that value to set the `canSkip` property on the state.\n      Object.values(currentFormState).filter(function (v) {\n        return v.length > 0;\n      }).length === 0;\n    }\n  }, {\n    key: \"renderAppropriateFieldType\",\n    value: function renderAppropriateFieldType(field) {\n      switch (field.input_type) {\n        case 'check_box':\n          return h(CheckBox, {\n            key: field.id,\n            field: field,\n            onFieldChange: this.handleFieldChange\n          });\n\n        case 'color_field':\n          return h(ColorPicker, {\n            key: field.id,\n            field: field,\n            onColorChange: this.handleColorPickerChange\n          });\n\n        case 'text_area':\n          return h(TextArea, {\n            key: field.id,\n            field: field,\n            onFieldChange: this.handleFieldChange\n          });\n\n        default:\n          return h(TextInput, {\n            key: field.id,\n            field: field,\n            onFieldChange: this.handleFieldChange\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          prev = _this$props.prev,\n          slidesCount = _this$props.slidesCount,\n          currentSlideIndex = _this$props.currentSlideIndex,\n          communityConfig = _this$props.communityConfig;\n      var _this$user = this.user,\n          profile_image_90 = _this$user.profile_image_90,\n          username = _this$user.username,\n          name = _this$user.name;\n      var _this$state4 = this.state,\n          canSkip = _this$state4.canSkip,\n          _this$state4$groups = _this$state4.groups,\n          groups = _this$state4$groups === void 0 ? [] : _this$state4$groups,\n          error = _this$state4.error,\n          errorMessage = _this$state4.errorMessage;\n\n      if (error) {\n        return h(\"div\", {\n          role: \"alert\",\n          \"class\": \"crayons-notice crayons-notice--danger\"\n        }, \"An error occurred: \", errorMessage);\n      }\n\n      var sections = groups.map(function (group) {\n        return h(\"div\", {\n          key: group.id,\n          \"class\": \"onboarding-profile-sub-section\"\n        }, h(\"h2\", null, group.name), group.description && h(\"div\", {\n          \"class\": \"color-base-60\"\n        }, group.description, \")\"), h(\"div\", null, group.profile_fields.map(function (field) {\n          return _this3.renderAppropriateFieldType(field);\n        })));\n      });\n      return h(\"div\", {\n        \"data-testid\": \"onboarding-profile-form\",\n        className: \"onboarding-main crayons-modal\"\n      }, h(\"div\", {\n        className: \"crayons-modal__box\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"title\",\n        \"aria-describedby\": \"subtitle\"\n      }, h(Navigation, {\n        prev: prev,\n        next: this.onSubmit,\n        canSkip: canSkip,\n        slidesCount: slidesCount,\n        currentSlideIndex: currentSlideIndex\n      }), h(\"div\", {\n        className: \"onboarding-content about\"\n      }, h(\"header\", {\n        className: \"onboarding-content-header\"\n      }, h(\"h1\", {\n        id: \"title\",\n        className: \"title\"\n      }, \"Build your profile\"), h(\"h2\", {\n        id: \"subtitle\",\n        \"data-testid\": \"onboarding-profile-subtitle\",\n        className: \"subtitle\"\n      }, \"Tell us a little bit about yourself \\u2014 this is how others will see you on \", communityConfig.communityName, \". You\\u2019ll always be able to edit this later in your Settings.\")), h(\"div\", {\n        className: \"current-user-info\"\n      }, h(\"figure\", {\n        className: \"current-user-avatar-container\"\n      }, h(\"img\", {\n        className: \"current-user-avatar\",\n        alt: \"profile\",\n        src: profile_image_90\n      })), h(\"h3\", null, name), h(\"p\", null, username)), h(\"div\", null, sections))));\n    }\n  }]);\n\n  return ProfileForm;\n}(Component);\n\nProfileForm.propTypes = {\n  prev: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  slidesCount: PropTypes.number.isRequired,\n  currentSlideIndex: PropTypes.func.isRequired,\n  communityConfig: PropTypes.shape({\n    communityName: PropTypes.string.isRequired\n  })\n};\nexport default ProfileForm;\n/* eslint-enable camelcase */","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/onboarding/components/ProfileForm.jsx"],"names":["h","Component","PropTypes","userData","getContentOfToken","updateOnboarding","Navigation","ColorPicker","TextArea","TextInput","CheckBox","request","ProfileForm","props","handleFieldChange","bind","handleColorPickerChange","onSubmit","user","state","groups","formValues","canSkip","last_onboarding_page","getProfielFieldGroups","response","ok","data","json","setState","profile_field_groups","Error","statusText","error","errorMessage","toString","csrfToken","fetch","method","headers","body","JSON","stringify","profile","credentials","then","next","e","currentFormState","target","name","value","formIsEmpty","field","sibling","nextElementSibling","previousElementSibling","Object","values","filter","v","length","input_type","id","prev","slidesCount","currentSlideIndex","communityConfig","profile_image_90","username","sections","map","group","description","profile_fields","renderAppropriateFieldType","communityName","propTypes","func","isRequired","number","shape","string"],"mappings":"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","sourcesContent":["import { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\n\nimport { userData, getContentOfToken, updateOnboarding } from '../utilities';\n\nimport Navigation from './Navigation';\nimport ColorPicker from './ProfileForm/ColorPicker';\nimport TextArea from './ProfileForm/TextArea';\nimport TextInput from './ProfileForm/TextInput';\nimport CheckBox from './ProfileForm/CheckBox';\n\nimport { request } from '@utilities/http';\n\n/* eslint-disable camelcase */\nclass ProfileForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFieldChange = this.handleFieldChange.bind(this);\n    this.handleColorPickerChange = this.handleColorPickerChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.user = userData();\n    this.state = {\n      groups: [],\n      formValues: {},\n      canSkip: true,\n      last_onboarding_page: 'v2: personal info form',\n    };\n  }\n\n  componentDidMount() {\n    this.getProfielFieldGroups();\n    updateOnboarding('v2: personal info form');\n  }\n\n  async getProfielFieldGroups() {\n    try {\n      const response = await request(`/profile_field_groups?onboarding=true`);\n      if (response.ok) {\n        const data = await response.json();\n        this.setState({ groups: data.profile_field_groups });\n      } else {\n        throw new Error(response.statusText);\n      }\n    } catch (error) {\n      this.setState({ error: true, errorMessage: error.toString() });\n    }\n  }\n\n  onSubmit() {\n    const csrfToken = getContentOfToken('csrf-token');\n    const { formValues, last_onboarding_page } = this.state;\n    fetch('/onboarding_update', {\n      method: 'PATCH',\n      headers: {\n        'X-CSRF-Token': csrfToken,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        user: { last_onboarding_page },\n        profile: { ...formValues },\n      }),\n      credentials: 'same-origin',\n    }).then((response) => {\n      if (response.ok) {\n        const { next } = this.props;\n        next();\n      }\n    });\n  }\n\n  handleFieldChange(e) {\n    const { formValues } = { ...this.state };\n    const currentFormState = formValues;\n    const { name, value } = e.target;\n\n    currentFormState[name] = value;\n    this.setState({\n      formValues: currentFormState,\n      canSkip: this.formIsEmpty(currentFormState),\n    });\n  }\n\n  handleColorPickerChange(e) {\n    const { formValues } = { ...this.state };\n    const currentFormState = formValues;\n\n    const field = e.target;\n    const { name, value } = field;\n\n    let sibling = field.nextElementSibling\n      ? field.nextElementSibling\n      : field.previousElementSibling;\n    sibling.value = value;\n\n    currentFormState[name] = value;\n    this.setState({\n      formValues: currentFormState,\n      canSkip: this.formIsEmpty(currentFormState),\n    });\n  }\n\n  formIsEmpty(currentFormState) {\n    // Once we've derived the new form values, check if the form is empty\n    // and use that value to set the `canSkip` property on the state.\n    Object.values(currentFormState).filter((v) => v.length > 0).length === 0;\n  }\n\n  renderAppropriateFieldType(field) {\n    switch (field.input_type) {\n      case 'check_box':\n        return (\n          <CheckBox\n            key={field.id}\n            field={field}\n            onFieldChange={this.handleFieldChange}\n          />\n        );\n      case 'color_field':\n        return (\n          <ColorPicker\n            key={field.id}\n            field={field}\n            onColorChange={this.handleColorPickerChange}\n          />\n        );\n      case 'text_area':\n        return (\n          <TextArea\n            key={field.id}\n            field={field}\n            onFieldChange={this.handleFieldChange}\n          />\n        );\n      default:\n        return (\n          <TextInput\n            key={field.id}\n            field={field}\n            onFieldChange={this.handleFieldChange}\n          />\n        );\n    }\n  }\n\n  render() {\n    const {\n      prev,\n      slidesCount,\n      currentSlideIndex,\n      communityConfig,\n    } = this.props;\n    const { profile_image_90, username, name } = this.user;\n    const { canSkip, groups = [], error, errorMessage } = this.state;\n\n    if (error) {\n      return (\n        <div role=\"alert\" class=\"crayons-notice crayons-notice--danger\">\n          An error occurred: {errorMessage}\n        </div>\n      );\n    }\n\n    const sections = groups.map((group) => {\n      return (\n        <div key={group.id} class=\"onboarding-profile-sub-section\">\n          <h2>{group.name}</h2>\n          {group.description && (\n            <div class=\"color-base-60\">{group.description})</div>\n          )}\n          <div>\n            {group.profile_fields.map((field) => {\n              return this.renderAppropriateFieldType(field);\n            })}\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div\n        data-testid=\"onboarding-profile-form\"\n        className=\"onboarding-main crayons-modal\"\n      >\n        <div\n          className=\"crayons-modal__box\"\n          role=\"dialog\"\n          aria-labelledby=\"title\"\n          aria-describedby=\"subtitle\"\n        >\n          <Navigation\n            prev={prev}\n            next={this.onSubmit}\n            canSkip={canSkip}\n            slidesCount={slidesCount}\n            currentSlideIndex={currentSlideIndex}\n          />\n          <div className=\"onboarding-content about\">\n            <header className=\"onboarding-content-header\">\n              <h1 id=\"title\" className=\"title\">\n                Build your profile\n              </h1>\n              <h2\n                id=\"subtitle\"\n                data-testid=\"onboarding-profile-subtitle\"\n                className=\"subtitle\"\n              >\n                Tell us a little bit about yourself — this is how others will\n                see you on {communityConfig.communityName}. You’ll always be\n                able to edit this later in your Settings.\n              </h2>\n            </header>\n            <div className=\"current-user-info\">\n              <figure className=\"current-user-avatar-container\">\n                <img\n                  className=\"current-user-avatar\"\n                  alt=\"profile\"\n                  src={profile_image_90}\n                />\n              </figure>\n              <h3>{name}</h3>\n              <p>{username}</p>\n            </div>\n            <div>{sections}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProfileForm.propTypes = {\n  prev: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  slidesCount: PropTypes.number.isRequired,\n  currentSlideIndex: PropTypes.func.isRequired,\n  communityConfig: PropTypes.shape({\n    communityName: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ProfileForm;\n\n/* eslint-enable camelcase */\n"]},"metadata":{},"sourceType":"module"}