{"ast":null,"code":"import { handleFetchAPIErrors } from '../utilities/http';\n\nfunction callAnalyticsAPI(path, date, _ref, callback) {\n  var organizationId = _ref.organizationId,\n      articleId = _ref.articleId;\n  var url = \"\".concat(path, \"?start=\").concat(date.toISOString().split('T')[0]);\n\n  if (organizationId) {\n    url = \"\".concat(url, \"&organization_id=\").concat(organizationId);\n  }\n\n  if (articleId) {\n    url = \"\".concat(url, \"&article_id=\").concat(articleId);\n  }\n\n  fetch(url).then(handleFetchAPIErrors).then(function (response) {\n    return response.json();\n  }).then(callback) // eslint-disable-next-line no-console\n  [\"catch\"](function (error) {\n    return console.error(error);\n  }); // we should come up with better error handling\n}\n\nexport function callHistoricalAPI(date, _ref2, callback) {\n  var organizationId = _ref2.organizationId,\n      articleId = _ref2.articleId;\n  callAnalyticsAPI('/api/analytics/historical', date, {\n    organizationId: organizationId,\n    articleId: articleId\n  }, callback);\n}\nexport function callReferrersAPI(date, _ref3, callback) {\n  var organizationId = _ref3.organizationId,\n      articleId = _ref3.articleId;\n  callAnalyticsAPI('/api/analytics/referrers', date, {\n    organizationId: organizationId,\n    articleId: articleId\n  }, callback);\n}","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/analytics/client.js"],"names":["handleFetchAPIErrors","callAnalyticsAPI","path","date","callback","organizationId","articleId","url","toISOString","split","fetch","then","response","json","error","console","callHistoricalAPI","callReferrersAPI"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,mBAArC;;AAEA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgCC,IAAhC,QAAqEC,QAArE,EAA+E;AAAA,MAAvCC,cAAuC,QAAvCA,cAAuC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAC7E,MAAIC,GAAG,aAAML,IAAN,oBAAoBC,IAAI,CAACK,WAAL,GAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAApB,CAAP;;AAEA,MAAIJ,cAAJ,EAAoB;AAClBE,IAAAA,GAAG,aAAMA,GAAN,8BAA6BF,cAA7B,CAAH;AACD;;AACD,MAAIC,SAAJ,EAAe;AACbC,IAAAA,GAAG,aAAMA,GAAN,yBAAwBD,SAAxB,CAAH;AACD;;AAEDI,EAAAA,KAAK,CAACH,GAAD,CAAL,CACGI,IADH,CACQX,oBADR,EAEGW,IAFH,CAEQ,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GAFR,EAGGF,IAHH,CAGQP,QAHR,EAIE;AAJF,YAKS,UAACU,KAAD;AAAA,WAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,GALT,EAV6E,CAelC;AAC5C;;AAED,OAAO,SAASE,iBAAT,CACLb,IADK,SAGLC,QAHK,EAIL;AAAA,MAFEC,cAEF,SAFEA,cAEF;AAAA,MAFkBC,SAElB,SAFkBA,SAElB;AACAL,EAAAA,gBAAgB,CACd,2BADc,EAEdE,IAFc,EAGd;AAAEE,IAAAA,cAAc,EAAdA,cAAF;AAAkBC,IAAAA,SAAS,EAATA;AAAlB,GAHc,EAIdF,QAJc,CAAhB;AAMD;AAED,OAAO,SAASa,gBAAT,CACLd,IADK,SAGLC,QAHK,EAIL;AAAA,MAFEC,cAEF,SAFEA,cAEF;AAAA,MAFkBC,SAElB,SAFkBA,SAElB;AACAL,EAAAA,gBAAgB,CACd,0BADc,EAEdE,IAFc,EAGd;AAAEE,IAAAA,cAAc,EAAdA,cAAF;AAAkBC,IAAAA,SAAS,EAATA;AAAlB,GAHc,EAIdF,QAJc,CAAhB;AAMD","sourcesContent":["import { handleFetchAPIErrors } from '../utilities/http';\n\nfunction callAnalyticsAPI(path, date, { organizationId, articleId }, callback) {\n  let url = `${path}?start=${date.toISOString().split('T')[0]}`;\n\n  if (organizationId) {\n    url = `${url}&organization_id=${organizationId}`;\n  }\n  if (articleId) {\n    url = `${url}&article_id=${articleId}`;\n  }\n\n  fetch(url)\n    .then(handleFetchAPIErrors)\n    .then((response) => response.json())\n    .then(callback)\n    // eslint-disable-next-line no-console\n    .catch((error) => console.error(error)); // we should come up with better error handling\n}\n\nexport function callHistoricalAPI(\n  date,\n  { organizationId, articleId },\n  callback,\n) {\n  callAnalyticsAPI(\n    '/api/analytics/historical',\n    date,\n    { organizationId, articleId },\n    callback,\n  );\n}\n\nexport function callReferrersAPI(\n  date,\n  { organizationId, articleId },\n  callback,\n) {\n  callAnalyticsAPI(\n    '/api/analytics/referrers',\n    date,\n    { organizationId, articleId },\n    callback,\n  );\n}\n"]},"metadata":{},"sourceType":"module"}