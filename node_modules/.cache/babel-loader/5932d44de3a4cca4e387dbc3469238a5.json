{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { addSnackbarItem } from '../../Snackbar';\nimport { getChannelRequestInfo, updateMembership, acceptJoiningRequest, rejectJoiningRequest } from '../actions/requestActions';\nimport HeaderSection from './HeaderSection';\nimport ChannelRequestSection from './ChannelRequestSection';\nimport PersonalInvitations from './PersonalInvitationSection';\n\nvar RequestManager = /*#__PURE__*/function (_Component) {\n  _inherits(RequestManager, _Component);\n\n  var _super = _createSuper(RequestManager);\n\n  function RequestManager(props) {\n    var _this;\n\n    _classCallCheck(this, RequestManager);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleIUpdateMembership\", /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (e) {\n        var _e$target$dataset = e.target.dataset,\n            membershipId = _e$target$dataset.membershipId,\n            userAction = _e$target$dataset.userAction,\n            channelSlug = _e$target$dataset.channelSlug,\n            channelId = _e$target$dataset.channelId;\n        var response = yield updateMembership(membershipId, userAction);\n        var success = response.success,\n            membership = response.membership,\n            message = response.message;\n        var updateRequestCount = _this.state.updateRequestCount;\n\n        if (success) {\n          _this.setState(function (prevState) {\n            var filteredUserInvitations = prevState.userInvitations.filter(function (userInvitation) {\n              return userInvitation.membership_id !== membership.membership_id;\n            });\n            return {\n              userInvitations: filteredUserInvitations\n            };\n          });\n\n          if (userAction === 'accept') {\n            updateRequestCount(true, {\n              channelSlug: channelSlug,\n              channelId: channelId\n            });\n          }\n\n          updateRequestCount();\n          addSnackbarItem({\n            message: message\n          });\n        } else {\n          addSnackbarItem({\n            message: message\n          });\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleAcceptJoingRequest\", /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (e) {\n        var _e$target$dataset2 = e.target.dataset,\n            membershipId = _e$target$dataset2.membershipId,\n            channelId = _e$target$dataset2.channelId;\n        var response = yield acceptJoiningRequest(channelId, membershipId);\n        var success = response.success,\n            message = response.message,\n            membership = response.membership;\n        var updateRequestCount = _this.state.updateRequestCount;\n\n        if (success) {\n          _this.setState(function (prevState) {\n            var formattedChannelJoiningRequests = prevState.channelJoiningRequests.filter(function (channelJoiningRequest) {\n              return channelJoiningRequest.membership_id !== membership.membership_id;\n            });\n            return {\n              channelJoiningRequests: formattedChannelJoiningRequests\n            };\n          });\n\n          updateRequestCount();\n          addSnackbarItem({\n            message: message\n          });\n        } else {\n          addSnackbarItem({\n            message: message\n          });\n        }\n      });\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleRejectJoingRequest\", /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (e) {\n        var _e$target$dataset3 = e.target.dataset,\n            membershipId = _e$target$dataset3.membershipId,\n            channelId = _e$target$dataset3.channelId;\n        var response = yield rejectJoiningRequest(channelId, membershipId);\n        var success = response.success,\n            message = response.message;\n        var updateRequestCount = _this.state.updateRequestCount;\n\n        if (success) {\n          _this.setState(function (prevState) {\n            var formattedChannelJoiningRequests = prevState.channelJoiningRequests.filter(function (channelJoiningRequest) {\n              return channelJoiningRequest.membership_id !== Number(membershipId);\n            });\n            return {\n              channelJoiningRequests: formattedChannelJoiningRequests\n            };\n          });\n\n          updateRequestCount();\n          addSnackbarItem({\n            message: message\n          });\n        } else {\n          addSnackbarItem({\n            message: message\n          });\n        }\n      });\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n\n    _this.state = {\n      updateRequestCount: props.updateRequestCount,\n      channelJoiningRequests: [],\n      userInvitations: []\n    };\n    return _this;\n  }\n\n  _createClass(RequestManager, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps() {\n      this.setState({\n        updateRequestCount: this.props.updateRequestCount\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      getChannelRequestInfo().then(function (response) {\n        var result = response.result;\n        var user_joining_requests = result.user_joining_requests,\n            channel_joining_memberships = result.channel_joining_memberships;\n\n        _this2.setState({\n          channelJoiningRequests: channel_joining_memberships,\n          userInvitations: user_joining_requests\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          channelJoiningRequests = _this$state.channelJoiningRequests,\n          userInvitations = _this$state.userInvitations;\n      return h(\"div\", null, h(\"div\", {\n        className: \"p-4\"\n      }, h(HeaderSection, null), channelJoiningRequests.length <= 0 && userInvitations.length <= 0 ? h(\"p\", null, \"You have no pending invitations/Joining Requests.\") : null, h(ChannelRequestSection, {\n        channelRequests: channelJoiningRequests,\n        handleRequestRejection: this.handleRejectJoingRequest,\n        handleRequestApproval: this.handleAcceptJoingRequest\n      }), h(PersonalInvitations, {\n        userInvitations: userInvitations,\n        updateMembership: this.handleIUpdateMembership\n      })));\n    }\n  }]);\n\n  return RequestManager;\n}(Component);\n\n_defineProperty(RequestManager, \"propTypes\", {\n  resource: PropTypes.shape({\n    data: PropTypes.object\n  }).isRequired,\n  updateRequestCount: PropTypes.func.isRequired\n});\n\nexport { RequestManager as default };","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/chat/RequestManager/RequestManager.jsx"],"names":["h","Component","PropTypes","addSnackbarItem","getChannelRequestInfo","updateMembership","acceptJoiningRequest","rejectJoiningRequest","HeaderSection","ChannelRequestSection","PersonalInvitations","RequestManager","props","e","target","dataset","membershipId","userAction","channelSlug","channelId","response","success","membership","message","updateRequestCount","state","setState","prevState","filteredUserInvitations","userInvitations","filter","userInvitation","membership_id","formattedChannelJoiningRequests","channelJoiningRequests","channelJoiningRequest","Number","then","result","user_joining_requests","channel_joining_memberships","length","handleRejectJoingRequest","handleAcceptJoingRequest","handleIUpdateMembership","resource","shape","data","object","isRequired","func"],"mappings":"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","sourcesContent":["import { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\n\nimport { addSnackbarItem } from '../../Snackbar';\nimport {\n  getChannelRequestInfo,\n  updateMembership,\n  acceptJoiningRequest,\n  rejectJoiningRequest,\n} from '../actions/requestActions';\nimport HeaderSection from './HeaderSection';\nimport ChannelRequestSection from './ChannelRequestSection';\nimport PersonalInvitations from './PersonalInvitationSection';\n\nexport default class RequestManager extends Component {\n  static propTypes = {\n    resource: PropTypes.shape({\n      data: PropTypes.object,\n    }).isRequired,\n    updateRequestCount: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      updateRequestCount: props.updateRequestCount,\n      channelJoiningRequests: [],\n      userInvitations: [],\n    };\n  }\n\n  componentWillReceiveProps() {\n    this.setState({\n      updateRequestCount: this.props.updateRequestCount,\n    });\n  }\n\n  componentDidMount() {\n    getChannelRequestInfo().then((response) => {\n      const { result } = response;\n      const { user_joining_requests, channel_joining_memberships } = result;\n      this.setState({\n        channelJoiningRequests: channel_joining_memberships,\n        userInvitations: user_joining_requests,\n      });\n    });\n  }\n\n  handleIUpdateMembership = async (e) => {\n    const {\n      membershipId,\n      userAction,\n      channelSlug,\n      channelId,\n    } = e.target.dataset;\n    const response = await updateMembership(membershipId, userAction);\n    const { success, membership, message } = response;\n    const { updateRequestCount } = this.state;\n    if (success) {\n      this.setState((prevState) => {\n        const filteredUserInvitations = prevState.userInvitations.filter(\n          (userInvitation) =>\n            userInvitation.membership_id !== membership.membership_id,\n        );\n\n        return {\n          userInvitations: filteredUserInvitations,\n        };\n      });\n      if (userAction === 'accept') {\n        updateRequestCount(true, { channelSlug, channelId });\n      }\n      updateRequestCount();\n      addSnackbarItem({ message });\n    } else {\n      addSnackbarItem({ message });\n    }\n  };\n\n  handleAcceptJoingRequest = async (e) => {\n    const { membershipId, channelId } = e.target.dataset;\n    const response = await acceptJoiningRequest(channelId, membershipId);\n    const { success, message, membership } = response;\n    const { updateRequestCount } = this.state;\n\n    if (success) {\n      this.setState((prevState) => {\n        const formattedChannelJoiningRequests = prevState.channelJoiningRequests.filter(\n          (channelJoiningRequest) =>\n            channelJoiningRequest.membership_id !== membership.membership_id,\n        );\n        return {\n          channelJoiningRequests: formattedChannelJoiningRequests,\n        };\n      });\n\n      updateRequestCount();\n      addSnackbarItem({ message });\n    } else {\n      addSnackbarItem({ message });\n    }\n  };\n\n  handleRejectJoingRequest = async (e) => {\n    const { membershipId, channelId } = e.target.dataset;\n    const response = await rejectJoiningRequest(channelId, membershipId);\n    const { success, message } = response;\n    const { updateRequestCount } = this.state;\n\n    if (success) {\n      this.setState((prevState) => {\n        const formattedChannelJoiningRequests = prevState.channelJoiningRequests.filter(\n          (channelJoiningRequest) =>\n            channelJoiningRequest.membership_id !== Number(membershipId),\n        );\n        return {\n          channelJoiningRequests: formattedChannelJoiningRequests,\n        };\n      });\n\n      updateRequestCount();\n      addSnackbarItem({ message });\n    } else {\n      addSnackbarItem({ message });\n    }\n  };\n\n  render() {\n    const { channelJoiningRequests, userInvitations } = this.state;\n\n    return (\n      <div>\n        <div className=\"p-4\">\n          <HeaderSection />\n          {channelJoiningRequests.length <= 0 && userInvitations.length <= 0 ? (\n            <p>You have no pending invitations/Joining Requests.</p>\n          ) : null}\n          <ChannelRequestSection\n            channelRequests={channelJoiningRequests}\n            handleRequestRejection={this.handleRejectJoingRequest}\n            handleRequestApproval={this.handleAcceptJoingRequest}\n          />\n          <PersonalInvitations\n            userInvitations={userInvitations}\n            updateMembership={this.handleIUpdateMembership}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}