{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { getContentOfToken, userData, updateOnboarding } from '../utilities';\nimport Navigation from './Navigation';\n/* eslint-disable camelcase */\n\nvar IntroSlide = /*#__PURE__*/function (_Component) {\n  _inherits(IntroSlide, _Component);\n\n  var _super = _createSuper(IntroSlide);\n\n  function IntroSlide(props) {\n    var _this;\n\n    _classCallCheck(this, IntroSlide);\n\n    _this = _super.call(this, props);\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.user = userData();\n    _this.state = {\n      checked_code_of_conduct: false,\n      checked_terms_and_conditions: false,\n      text: null\n    };\n    return _this;\n  }\n\n  _createClass(IntroSlide, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      updateOnboarding('v2: intro, code of conduct, terms & conditions');\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var next = this.props.next;\n      var csrfToken = getContentOfToken('csrf-token');\n      fetch('/onboarding_checkbox_update', {\n        method: 'PATCH',\n        headers: {\n          'X-CSRF-Token': csrfToken,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: this.state\n        }),\n        credentials: 'same-origin'\n      }).then(function (response) {\n        if (response.ok) {\n          localStorage.setItem('shouldRedirectToOnboarding', false);\n          next();\n        }\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var name = event.target.name;\n      this.setState(function (currentState) {\n        return _defineProperty({}, name, !currentState[name]);\n      });\n    }\n  }, {\n    key: \"handleShowText\",\n    value: function handleShowText(event, id) {\n      event.preventDefault();\n      this.setState({\n        text: document.getElementById(id).innerHTML\n      });\n    }\n  }, {\n    key: \"isButtonDisabled\",\n    value: function isButtonDisabled() {\n      var _this$state = this.state,\n          checked_code_of_conduct = _this$state.checked_code_of_conduct,\n          checked_terms_and_conditions = _this$state.checked_terms_and_conditions;\n      return !checked_code_of_conduct || !checked_terms_and_conditions;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          slidesCount = _this$props.slidesCount,\n          currentSlideIndex = _this$props.currentSlideIndex,\n          prev = _this$props.prev,\n          communityConfig = _this$props.communityConfig;\n      var _this$state2 = this.state,\n          checked_code_of_conduct = _this$state2.checked_code_of_conduct,\n          checked_terms_and_conditions = _this$state2.checked_terms_and_conditions,\n          text = _this$state2.text;\n\n      if (text) {\n        return h(\"div\", {\n          className: \"onboarding-main crayons-modal crayons-modal--m\"\n        }, h(\"div\", {\n          className: \"crayons-modal__box overflow-auto\"\n        }, h(\"div\", {\n          className: \"onboarding-content terms-and-conditions-wrapper\"\n        }, h(\"button\", {\n          type: \"button\",\n          onClick: function onClick() {\n            return _this2.setState({\n              text: null\n            });\n          }\n        }, \"Back\"), h(\"div\", {\n          className: \"terms-and-conditions-content\"\n          /* eslint-disable react/no-danger */\n          ,\n          dangerouslySetInnerHTML: {\n            __html: text\n          }\n          /* eslint-enable react/no-danger */\n\n        }))));\n      }\n\n      return h(\"div\", {\n        \"data-testid\": \"onboarding-intro-slide\",\n        className: \"onboarding-main introduction crayons-modal crayons-modal--m\"\n      }, h(\"div\", {\n        className: \"crayons-modal__box overflow-auto\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"title\",\n        \"aria-describedby\": \"subtitle\"\n      }, h(\"div\", {\n        className: \"onboarding-content\"\n      }, h(\"figure\", null, h(\"img\", {\n        src: communityConfig.communityLogo,\n        className: \"sticker-logo\",\n        alt: communityConfig.communityName\n      })), h(\"h1\", {\n        id: \"title\",\n        \"data-testid\": \"onboarding-introduction-title\",\n        className: \"introduction-title\"\n      }, this.user.name, \"\\u2014 welcome to \", communityConfig.communityName, \"!\"), h(\"h2\", {\n        id: \"subtitle\",\n        className: \"introduction-subtitle\"\n      }, communityConfig.communityDescription)), h(\"div\", {\n        className: \"checkbox-form-wrapper\"\n      }, h(\"form\", {\n        className: \"checkbox-form\"\n      }, h(\"fieldset\", null, h(\"ul\", null, h(\"li\", {\n        className: \"checkbox-item\"\n      }, h(\"label\", {\n        \"data-testid\": \"checked-code-of-conduct\",\n        htmlFor: \"checked_code_of_conduct\",\n        className: \"lh-base py-1\"\n      }, h(\"input\", {\n        type: \"checkbox\",\n        id: \"checked_code_of_conduct\",\n        name: \"checked_code_of_conduct\",\n        checked: checked_code_of_conduct,\n        onChange: this.handleChange\n      }), \"You agree to uphold our\\xA0\", h(\"a\", {\n        href: \"/code-of-conduct\",\n        \"data-no-instant\": true,\n        onClick: function onClick(e) {\n          return _this2.handleShowText(e, 'coc');\n        }\n      }, \"Code of Conduct\"), \".\")), h(\"li\", {\n        className: \"checkbox-item\"\n      }, h(\"label\", {\n        \"data-testid\": \"checked-terms-and-conditions\",\n        htmlFor: \"checked_terms_and_conditions\",\n        className: \"lh-base py-1\"\n      }, h(\"input\", {\n        type: \"checkbox\",\n        id: \"checked_terms_and_conditions\",\n        name: \"checked_terms_and_conditions\",\n        checked: checked_terms_and_conditions,\n        onChange: this.handleChange\n      }), \"You agree to our\\xA0\", h(\"a\", {\n        href: \"/terms\",\n        \"data-no-instant\": true,\n        onClick: function onClick(e) {\n          return _this2.handleShowText(e, 'terms');\n        }\n      }, \"Terms and Conditions\"), \".\"))))), h(Navigation, {\n        disabled: this.isButtonDisabled(),\n        className: \"intro-slide\",\n        prev: prev,\n        slidesCount: slidesCount,\n        currentSlideIndex: currentSlideIndex,\n        next: this.onSubmit,\n        hidePrev: true\n      }))));\n    }\n  }]);\n\n  return IntroSlide;\n}(Component);\n\nIntroSlide.propTypes = {\n  prev: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  slidesCount: PropTypes.number.isRequired,\n  currentSlideIndex: PropTypes.func.isRequired,\n  communityConfig: PropTypes.shape({\n    communityLogo: PropTypes.string.isRequired,\n    communityName: PropTypes.string.isRequired,\n    communityDescription: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default IntroSlide;\n/* eslint-enable camelcase */","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/onboarding/components/IntroSlide.jsx"],"names":["h","Component","PropTypes","getContentOfToken","userData","updateOnboarding","Navigation","IntroSlide","props","handleChange","bind","onSubmit","user","state","checked_code_of_conduct","checked_terms_and_conditions","text","next","csrfToken","fetch","method","headers","body","JSON","stringify","credentials","then","response","ok","localStorage","setItem","event","name","target","setState","currentState","id","preventDefault","document","getElementById","innerHTML","slidesCount","currentSlideIndex","prev","communityConfig","__html","communityLogo","communityName","communityDescription","e","handleShowText","isButtonDisabled","propTypes","func","isRequired","number","shape","string"],"mappings":"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","sourcesContent":["import { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\n\nimport { getContentOfToken, userData, updateOnboarding } from '../utilities';\nimport Navigation from './Navigation';\n\n/* eslint-disable camelcase */\nclass IntroSlide extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.user = userData();\n\n    this.state = {\n      checked_code_of_conduct: false,\n      checked_terms_and_conditions: false,\n      text: null,\n    };\n  }\n\n  componentDidMount() {\n    updateOnboarding('v2: intro, code of conduct, terms & conditions');\n  }\n\n  onSubmit() {\n    const { next } = this.props;\n    const csrfToken = getContentOfToken('csrf-token');\n\n    fetch('/onboarding_checkbox_update', {\n      method: 'PATCH',\n      headers: {\n        'X-CSRF-Token': csrfToken,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ user: this.state }),\n      credentials: 'same-origin',\n    }).then((response) => {\n      if (response.ok) {\n        localStorage.setItem('shouldRedirectToOnboarding', false);\n        next();\n      }\n    });\n  }\n\n  handleChange(event) {\n    const { name } = event.target;\n    this.setState((currentState) => ({\n      [name]: !currentState[name],\n    }));\n  }\n\n  handleShowText(event, id) {\n    event.preventDefault();\n    this.setState({ text: document.getElementById(id).innerHTML });\n  }\n\n  isButtonDisabled() {\n    const {\n      checked_code_of_conduct,\n      checked_terms_and_conditions,\n    } = this.state;\n\n    return !checked_code_of_conduct || !checked_terms_and_conditions;\n  }\n\n  render() {\n    const {\n      slidesCount,\n      currentSlideIndex,\n      prev,\n      communityConfig,\n    } = this.props;\n    const {\n      checked_code_of_conduct,\n      checked_terms_and_conditions,\n      text,\n    } = this.state;\n\n    if (text) {\n      return (\n        <div className=\"onboarding-main crayons-modal crayons-modal--m\">\n          <div className=\"crayons-modal__box overflow-auto\">\n            <div className=\"onboarding-content terms-and-conditions-wrapper\">\n              <button\n                type=\"button\"\n                onClick={() => this.setState({ text: null })}\n              >\n                Back\n              </button>\n              <div\n                className=\"terms-and-conditions-content\"\n                /* eslint-disable react/no-danger */\n                dangerouslySetInnerHTML={{ __html: text }}\n                /* eslint-enable react/no-danger */\n              />\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        data-testid=\"onboarding-intro-slide\"\n        className=\"onboarding-main introduction crayons-modal crayons-modal--m\"\n      >\n        <div\n          className=\"crayons-modal__box overflow-auto\"\n          role=\"dialog\"\n          aria-labelledby=\"title\"\n          aria-describedby=\"subtitle\"\n        >\n          <div className=\"onboarding-content\">\n            <figure>\n              <img\n                src={communityConfig.communityLogo}\n                className=\"sticker-logo\"\n                alt={communityConfig.communityName}\n              />\n            </figure>\n            <h1\n              id=\"title\"\n              data-testid=\"onboarding-introduction-title\"\n              className=\"introduction-title\"\n            >\n              {this.user.name}\n              &mdash; welcome to {communityConfig.communityName}!\n            </h1>\n            <h2 id=\"subtitle\" className=\"introduction-subtitle\">\n              {communityConfig.communityDescription}\n            </h2>\n          </div>\n\n          <div className=\"checkbox-form-wrapper\">\n            <form className=\"checkbox-form\">\n              <fieldset>\n                <ul>\n                  <li className=\"checkbox-item\">\n                    <label\n                      data-testid=\"checked-code-of-conduct\"\n                      htmlFor=\"checked_code_of_conduct\"\n                      className=\"lh-base py-1\"\n                    >\n                      <input\n                        type=\"checkbox\"\n                        id=\"checked_code_of_conduct\"\n                        name=\"checked_code_of_conduct\"\n                        checked={checked_code_of_conduct}\n                        onChange={this.handleChange}\n                      />\n                      You agree to uphold our&nbsp;\n                      <a\n                        href=\"/code-of-conduct\"\n                        data-no-instant\n                        onClick={(e) => this.handleShowText(e, 'coc')}\n                      >\n                        Code of Conduct\n                      </a>\n                      .\n                    </label>\n                  </li>\n\n                  <li className=\"checkbox-item\">\n                    <label\n                      data-testid=\"checked-terms-and-conditions\"\n                      htmlFor=\"checked_terms_and_conditions\"\n                      className=\"lh-base py-1\"\n                    >\n                      <input\n                        type=\"checkbox\"\n                        id=\"checked_terms_and_conditions\"\n                        name=\"checked_terms_and_conditions\"\n                        checked={checked_terms_and_conditions}\n                        onChange={this.handleChange}\n                      />\n                      You agree to our&nbsp;\n                      <a\n                        href=\"/terms\"\n                        data-no-instant\n                        onClick={(e) => this.handleShowText(e, 'terms')}\n                      >\n                        Terms and Conditions\n                      </a>\n                      .\n                    </label>\n                  </li>\n                </ul>\n              </fieldset>\n            </form>\n            <Navigation\n              disabled={this.isButtonDisabled()}\n              className=\"intro-slide\"\n              prev={prev}\n              slidesCount={slidesCount}\n              currentSlideIndex={currentSlideIndex}\n              next={this.onSubmit}\n              hidePrev\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nIntroSlide.propTypes = {\n  prev: PropTypes.func.isRequired,\n  next: PropTypes.func.isRequired,\n  slidesCount: PropTypes.number.isRequired,\n  currentSlideIndex: PropTypes.func.isRequired,\n  communityConfig: PropTypes.shape({\n    communityLogo: PropTypes.string.isRequired,\n    communityName: PropTypes.string.isRequired,\n    communityDescription: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default IntroSlide;\n\n/* eslint-enable camelcase */\n"]},"metadata":{},"sourceType":"module"}