{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction toggleBurgerMenu() {\n  document.body.classList.toggle('hamburger-open');\n}\n\nfunction showMoreMenu(_ref) {\n  var target = _ref.target;\n  target.nextElementSibling.classList.remove('hidden');\n  target.classList.add('hidden');\n}\n/**\n * Gets a reference to InstantClick\n *\n * @param {number} [waitTime=2000] The amount of time to wait\n * until giving up waiting for InstantClick to exist\n *\n * @returns {Promise<object>} The global instance of InstantClick.\n */\n\n\nexport function getInstantClick() {\n  return _getInstantClick.apply(this, arguments);\n}\n/**\n * Initializes the hamburger menu for mobile navigation\n *\n * @param {HTMLElement[]} menus\n * @param {HTMLElement[]} moreMenus\n */\n\nfunction _getInstantClick() {\n  _getInstantClick = _asyncToGenerator(function* () {\n    var waitTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2000;\n    return new Promise(function (resolve, reject) {\n      var failTimer = setTimeout(function () {\n        clearInterval(timer);\n        reject(new Error('Unable to resolve InstantClick'));\n      }, waitTime);\n      var timer = setInterval(function () {\n        if (typeof InstantClick !== 'undefined') {\n          clearTimeout(failTimer);\n          clearInterval(timer);\n          resolve(InstantClick);\n        }\n      });\n    });\n  });\n  return _getInstantClick.apply(this, arguments);\n}\n\nexport function initializeMobileMenu(menus, moreMenus) {\n  menus.forEach(function (trigger) {\n    trigger.addEventListener('click', toggleBurgerMenu);\n  });\n  moreMenus.forEach(function (trigger) {\n    trigger.addEventListener('click', showMoreMenu);\n  });\n}\n/**\n * Sets the icon link visually for the current page if the current page\n * is one of the main icon links of the top navigation.\n *\n * @param {string} currentPage\n * @param {[string, HTMLElement][]} pageEntries\n */\n\nexport function setCurrentPageIconLink(currentPage, pageEntries) {\n  pageEntries // Filter out nulls (means the user is logged out so most icons are not in the logged out view)\n  .filter(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        iconLink = _ref3[1];\n\n    return iconLink;\n  }).forEach(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n        page = _ref5[0],\n        iconLink = _ref5[1];\n\n    if (currentPage === page) {\n      iconLink.blur();\n      iconLink.classList.add('crayons-header__link--current');\n    } else {\n      iconLink.classList.remove('crayons-header__link--current');\n    }\n  });\n}","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/topNavigation/utilities.js"],"names":["toggleBurgerMenu","document","body","classList","toggle","showMoreMenu","target","nextElementSibling","remove","add","getInstantClick","waitTime","Promise","resolve","reject","failTimer","setTimeout","clearInterval","timer","Error","setInterval","InstantClick","clearTimeout","initializeMobileMenu","menus","moreMenus","forEach","trigger","addEventListener","setCurrentPageIconLink","currentPage","pageEntries","filter","iconLink","page","blur"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,gBAAT,GAA4B;AAC1BC,EAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,gBAA/B;AACD;;AAED,SAASC,YAAT,OAAkC;AAAA,MAAVC,MAAU,QAAVA,MAAU;AAChCA,EAAAA,MAAM,CAACC,kBAAP,CAA0BJ,SAA1B,CAAoCK,MAApC,CAA2C,QAA3C;AACAF,EAAAA,MAAM,CAACH,SAAP,CAAiBM,GAAjB,CAAqB,QAArB;AACD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,gBAAsBC,eAAtB;AAAA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;;;uCAtBO,aAAgD;AAAA,QAAjBC,QAAiB,uEAAN,IAAM;AACrD,WAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,UAAMC,SAAS,GAAGC,UAAU,CAAC,YAAM;AACjCC,QAAAA,aAAa,CAACC,KAAD,CAAb;AACAJ,QAAAA,MAAM,CAAC,IAAIK,KAAJ,CAAU,gCAAV,CAAD,CAAN;AACD,OAH2B,EAGzBR,QAHyB,CAA5B;AAKA,UAAMO,KAAK,GAAGE,WAAW,CAAC,YAAM;AAC9B,YAAI,OAAOC,YAAP,KAAwB,WAA5B,EAAyC;AACvCC,UAAAA,YAAY,CAACP,SAAD,CAAZ;AACAE,UAAAA,aAAa,CAACC,KAAD,CAAb;AACAL,UAAAA,OAAO,CAACQ,YAAD,CAAP;AACD;AACF,OANwB,CAAzB;AAOD,KAbM,CAAP;AAcD,G;;;;AAQD,OAAO,SAASE,oBAAT,CAA8BC,KAA9B,EAAqCC,SAArC,EAAgD;AACrDD,EAAAA,KAAK,CAACE,OAAN,CAAc,UAACC,OAAD,EAAa;AACzBA,IAAAA,OAAO,CAACC,gBAAR,CAAyB,OAAzB,EAAkC5B,gBAAlC;AACD,GAFD;AAIAyB,EAAAA,SAAS,CAACC,OAAV,CAAkB,UAACC,OAAD,EAAa;AAC7BA,IAAAA,OAAO,CAACC,gBAAR,CAAyB,OAAzB,EAAkCvB,YAAlC;AACD,GAFD;AAGD;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASwB,sBAAT,CAAgCC,WAAhC,EAA6CC,WAA7C,EAA0D;AAC/DA,EAAAA,WAAW,CACT;AADS,GAERC,MAFH,CAEU;AAAA;AAAA,QAAIC,QAAJ;;AAAA,WAAkBA,QAAlB;AAAA,GAFV,EAGGP,OAHH,CAGW,iBAAsB;AAAA;AAAA,QAApBQ,IAAoB;AAAA,QAAdD,QAAc;;AAC7B,QAAIH,WAAW,KAAKI,IAApB,EAA0B;AACxBD,MAAAA,QAAQ,CAACE,IAAT;AACAF,MAAAA,QAAQ,CAAC9B,SAAT,CAAmBM,GAAnB,CAAuB,+BAAvB;AACD,KAHD,MAGO;AACLwB,MAAAA,QAAQ,CAAC9B,SAAT,CAAmBK,MAAnB,CAA0B,+BAA1B;AACD;AACF,GAVH;AAWD","sourcesContent":["function toggleBurgerMenu() {\n  document.body.classList.toggle('hamburger-open');\n}\n\nfunction showMoreMenu({ target }) {\n  target.nextElementSibling.classList.remove('hidden');\n  target.classList.add('hidden');\n}\n\n/**\n * Gets a reference to InstantClick\n *\n * @param {number} [waitTime=2000] The amount of time to wait\n * until giving up waiting for InstantClick to exist\n *\n * @returns {Promise<object>} The global instance of InstantClick.\n */\nexport async function getInstantClick(waitTime = 2000) {\n  return new Promise((resolve, reject) => {\n    const failTimer = setTimeout(() => {\n      clearInterval(timer);\n      reject(new Error('Unable to resolve InstantClick'));\n    }, waitTime);\n\n    const timer = setInterval(() => {\n      if (typeof InstantClick !== 'undefined') {\n        clearTimeout(failTimer);\n        clearInterval(timer);\n        resolve(InstantClick);\n      }\n    });\n  });\n}\n\n/**\n * Initializes the hamburger menu for mobile navigation\n *\n * @param {HTMLElement[]} menus\n * @param {HTMLElement[]} moreMenus\n */\nexport function initializeMobileMenu(menus, moreMenus) {\n  menus.forEach((trigger) => {\n    trigger.addEventListener('click', toggleBurgerMenu);\n  });\n\n  moreMenus.forEach((trigger) => {\n    trigger.addEventListener('click', showMoreMenu);\n  });\n}\n\n/**\n * Sets the icon link visually for the current page if the current page\n * is one of the main icon links of the top navigation.\n *\n * @param {string} currentPage\n * @param {[string, HTMLElement][]} pageEntries\n */\nexport function setCurrentPageIconLink(currentPage, pageEntries) {\n  pageEntries\n    // Filter out nulls (means the user is logged out so most icons are not in the logged out view)\n    .filter(([, iconLink]) => iconLink)\n    .forEach(([page, iconLink]) => {\n      if (currentPage === page) {\n        iconLink.blur();\n        iconLink.classList.add('crayons-header__link--current');\n      } else {\n        iconLink.classList.remove('crayons-header__link--current');\n      }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}