{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { SnackbarItem } from './SnackbarItem';\nvar snackbarItems = [];\nexport function addSnackbarItem(snackbarItem) {\n  if (!Array.isArray(snackbarItem.actions)) {\n    snackbarItem.actions = []; // eslint-disable-line no-param-reassign\n  }\n\n  snackbarItems.push(snackbarItem);\n}\nexport var Snackbar = /*#__PURE__*/function (_Component) {\n  _inherits(Snackbar, _Component);\n\n  var _super = _createSuper(Snackbar);\n\n  function Snackbar() {\n    var _this;\n\n    _classCallCheck(this, Snackbar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      snacks: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"pollingId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"paused\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"pauseLifespan\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"resumeLifespan\", void 0);\n\n    return _this;\n  }\n\n  _createClass(Snackbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initializePolling();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this2 = this;\n\n      if (!this.pauseLifespan) {\n        this.pauseLifespan = function (_event) {\n          _this2.paused = true;\n        };\n\n        this.resumeLifespan = function (event) {\n          event.stopPropagation();\n          _this2.paused = false;\n        };\n\n        this.element.addEventListener('mouseover', this.pauseLifespan);\n        this.element.addEventListener('mouseout', this.resumeLifespan, true);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.element) {\n        this.element.removeEventListener('mouseover', this.pauseLifespan);\n        this.element.addEventListener('mouseout', this.resumeLifespan);\n      }\n    }\n  }, {\n    key: \"initializePolling\",\n    value: function initializePolling() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          pollingTime = _this$props.pollingTime,\n          lifespan = _this$props.lifespan;\n      this.pollingId = setInterval(function () {\n        if (snackbarItems.length > 0) {\n          // Need to add the lifespan to snackbar items because each second that goes by, we\n          // decrease the lifespan until it is no more.\n          var newSnacks = snackbarItems.map(function (snackbarItem) {\n            return _objectSpread(_objectSpread({}, snackbarItem), {}, {\n              lifespan: lifespan\n            });\n          });\n          snackbarItems = [];\n\n          _this3.updateSnackbarItems(newSnacks); // Start the lifespan countdowns for each new snackbar item.\n\n\n          newSnacks.forEach(function (snack) {\n            // eslint-disable-next-line no-param-reassign\n            snack.lifespanTimeoutId = setTimeout(function () {\n              _this3.decreaseLifespan(snack);\n            }, 1000);\n\n            if (snack.addCloseButton) {\n              // Adds an optional close button if addDefaultACtion is true.\n              snack.actions.push({\n                text: 'Dismiss',\n                handler: function handler() {\n                  _this3.setState(function (prevState) {\n                    return {\n                      prevState: prevState,\n                      snacks: prevState.snacks.filter(function (potentialSnackToFilterOut) {\n                        return potentialSnackToFilterOut !== snack;\n                      })\n                    };\n                  });\n                }\n              });\n            }\n          });\n        }\n      }, pollingTime);\n    }\n  }, {\n    key: \"updateSnackbarItems\",\n    value: function updateSnackbarItems(newSnacks) {\n      this.setState(function (prevState) {\n        var updatedSnacks = [].concat(_toConsumableArray(prevState.snacks), _toConsumableArray(newSnacks));\n\n        if (updatedSnacks.length > 3) {\n          var snacksToBeDiscarded = updatedSnacks.slice(0, updatedSnacks.length - 3);\n          snacksToBeDiscarded.forEach(function (_ref) {\n            var lifespanTimeoutId = _ref.lifespanTimeoutId;\n            clearTimeout(lifespanTimeoutId);\n          });\n          updatedSnacks = updatedSnacks.slice(updatedSnacks.length - 3);\n        }\n\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          snacks: updatedSnacks\n        });\n      });\n    }\n  }, {\n    key: \"decreaseLifespan\",\n    value: function decreaseLifespan(snack) {\n      var _this4 = this;\n\n      /* eslint-disable  no-param-reassign */\n      if (!this.paused && snack.lifespan === 0) {\n        clearTimeout(snack.lifespanTimeoutId);\n        this.setState(function (prevState) {\n          var snacks = prevState.snacks.filter(function (currentSnack) {\n            return currentSnack !== snack;\n          });\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            snacks: snacks\n          });\n        });\n        return;\n      }\n\n      if (!this.paused) {\n        snack.lifespan -= 1;\n      }\n\n      snack.lifespanTimeoutId = setTimeout(function () {\n        _this4.decreaseLifespan(snack);\n      }, 1000);\n      /* eslint-enable  no-param-reassign */\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var snacks = this.state.snacks;\n      return h(\"div\", {\n        className: snacks.length > 0 ? 'crayons-snackbar' : 'hidden',\n        ref: function ref(element) {\n          _this5.element = element;\n        }\n      }, snacks.map(function (_ref2) {\n        var message = _ref2.message,\n            _ref2$actions = _ref2.actions,\n            actions = _ref2$actions === void 0 ? [] : _ref2$actions;\n        return h(SnackbarItem, {\n          message: message,\n          actions: actions\n        });\n      }));\n    }\n  }]);\n\n  return Snackbar;\n}(Component);\nSnackbar.defaultProps = {\n  lifespan: 5,\n  pollingTime: 300\n};\nSnackbar.displayName = 'Snackbar';\nSnackbar.propTypes = {\n  lifespan: PropTypes.number,\n  pollingTime: PropTypes.number\n};","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/Snackbar/Snackbar.jsx"],"names":["h","Component","PropTypes","SnackbarItem","snackbarItems","addSnackbarItem","snackbarItem","Array","isArray","actions","push","Snackbar","snacks","initializePolling","pauseLifespan","_event","paused","resumeLifespan","event","stopPropagation","element","addEventListener","removeEventListener","props","pollingTime","lifespan","pollingId","setInterval","length","newSnacks","map","updateSnackbarItems","forEach","snack","lifespanTimeoutId","setTimeout","decreaseLifespan","addCloseButton","text","handler","setState","prevState","filter","potentialSnackToFilterOut","updatedSnacks","snacksToBeDiscarded","slice","clearTimeout","currentSnack","state","message","defaultProps","displayName","propTypes","number"],"mappings":"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","sourcesContent":["import { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { SnackbarItem } from './SnackbarItem';\n\nlet snackbarItems = [];\n\nexport function addSnackbarItem(snackbarItem) {\n  if (!Array.isArray(snackbarItem.actions)) {\n    snackbarItem.actions = []; // eslint-disable-line no-param-reassign\n  }\n\n  snackbarItems.push(snackbarItem);\n}\n\nexport class Snackbar extends Component {\n  state = {\n    snacks: [],\n  };\n\n  pollingId;\n\n  paused = false;\n\n  pauseLifespan;\n\n  resumeLifespan;\n\n  componentDidMount() {\n    this.initializePolling();\n  }\n\n  componentDidUpdate() {\n    if (!this.pauseLifespan) {\n      this.pauseLifespan = (_event) => {\n        this.paused = true;\n      };\n\n      this.resumeLifespan = (event) => {\n        event.stopPropagation();\n        this.paused = false;\n      };\n\n      this.element.addEventListener('mouseover', this.pauseLifespan);\n      this.element.addEventListener('mouseout', this.resumeLifespan, true);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.element) {\n      this.element.removeEventListener('mouseover', this.pauseLifespan);\n      this.element.addEventListener('mouseout', this.resumeLifespan);\n    }\n  }\n\n  initializePolling() {\n    const { pollingTime, lifespan } = this.props;\n\n    this.pollingId = setInterval(() => {\n      if (snackbarItems.length > 0) {\n        // Need to add the lifespan to snackbar items because each second that goes by, we\n        // decrease the lifespan until it is no more.\n        const newSnacks = snackbarItems.map((snackbarItem) => ({\n          ...snackbarItem,\n          lifespan,\n        }));\n\n        snackbarItems = [];\n\n        this.updateSnackbarItems(newSnacks);\n\n        // Start the lifespan countdowns for each new snackbar item.\n        newSnacks.forEach((snack) => {\n          // eslint-disable-next-line no-param-reassign\n          snack.lifespanTimeoutId = setTimeout(() => {\n            this.decreaseLifespan(snack);\n          }, 1000);\n\n          if (snack.addCloseButton) {\n            // Adds an optional close button if addDefaultACtion is true.\n            snack.actions.push({\n              text: 'Dismiss',\n              handler: () => {\n                this.setState((prevState) => {\n                  return {\n                    prevState,\n                    snacks: prevState.snacks.filter(\n                      (potentialSnackToFilterOut) =>\n                        potentialSnackToFilterOut !== snack,\n                    ),\n                  };\n                });\n              },\n            });\n          }\n        });\n      }\n    }, pollingTime);\n  }\n\n  updateSnackbarItems(newSnacks) {\n    this.setState((prevState) => {\n      let updatedSnacks = [...prevState.snacks, ...newSnacks];\n\n      if (updatedSnacks.length > 3) {\n        const snacksToBeDiscarded = updatedSnacks.slice(\n          0,\n          updatedSnacks.length - 3,\n        );\n\n        snacksToBeDiscarded.forEach(({ lifespanTimeoutId }) => {\n          clearTimeout(lifespanTimeoutId);\n        });\n\n        updatedSnacks = updatedSnacks.slice(updatedSnacks.length - 3);\n      }\n\n      return { ...prevState, snacks: updatedSnacks };\n    });\n  }\n\n  decreaseLifespan(snack) {\n    /* eslint-disable  no-param-reassign */\n    if (!this.paused && snack.lifespan === 0) {\n      clearTimeout(snack.lifespanTimeoutId);\n\n      this.setState((prevState) => {\n        const snacks = prevState.snacks.filter(\n          (currentSnack) => currentSnack !== snack,\n        );\n\n        return {\n          ...prevState,\n          snacks,\n        };\n      });\n\n      return;\n    }\n\n    if (!this.paused) {\n      snack.lifespan -= 1;\n    }\n\n    snack.lifespanTimeoutId = setTimeout(() => {\n      this.decreaseLifespan(snack);\n    }, 1000);\n    /* eslint-enable  no-param-reassign */\n  }\n\n  render() {\n    const { snacks } = this.state;\n\n    return (\n      <div\n        className={snacks.length > 0 ? 'crayons-snackbar' : 'hidden'}\n        ref={(element) => {\n          this.element = element;\n        }}\n      >\n        {snacks.map(({ message, actions = [] }) => (\n          <SnackbarItem message={message} actions={actions} />\n        ))}\n      </div>\n    );\n  }\n}\n\nSnackbar.defaultProps = {\n  lifespan: 5,\n  pollingTime: 300,\n};\n\nSnackbar.displayName = 'Snackbar';\n\nSnackbar.propTypes = {\n  lifespan: PropTypes.number,\n  pollingTime: PropTypes.number,\n};\n"]},"metadata":{},"sourceType":"module"}