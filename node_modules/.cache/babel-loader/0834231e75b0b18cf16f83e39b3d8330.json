{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* global Runtime */\nimport { h, Component, Fragment } from 'preact';\nimport PropTypes from 'prop-types';\nimport { addSnackbarItem } from '../../Snackbar';\nimport { generateMainImage } from '../actions';\nimport { validateFileInputs } from '../../packs/validateFileInputs';\nimport { onDragOver, onDragExit } from './dragAndDropHelpers';\nimport { Button } from '@crayons';\nimport { Spinner } from '@crayons/Spinner/Spinner';\nimport { DragAndDropZone } from '@utilities/dragAndDrop';\nexport var ArticleCoverImage = /*#__PURE__*/function (_Component) {\n  _inherits(ArticleCoverImage, _Component);\n\n  var _super = _createSuper(ArticleCoverImage);\n\n  function ArticleCoverImage() {\n    var _this;\n\n    _classCallCheck(this, ArticleCoverImage);\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(_args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      uploadError: false,\n      uploadErrorMessage: null,\n      uploadingImage: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onImageUploadSuccess\", function () {\n      var _this$props;\n\n      (_this$props = _this.props).onMainImageUrlChange.apply(_this$props, arguments);\n\n      _this.setState({\n        uploadingImage: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleMainImageUpload\", function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        uploadingImage: true\n      });\n\n      _this.clearUploadError();\n\n      if (validateFileInputs()) {\n        var _ref = event.dataTransfer || event.target,\n            image = _ref.files;\n\n        var payload = {\n          image: image\n        };\n        generateMainImage(payload, _this.onImageUploadSuccess, _this.onUploadError);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearUploadError\", function () {\n      _this.setState({\n        uploadError: false,\n        uploadErrorMessage: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onUploadError\", function (error) {\n      _this.setState({\n        uploadingImage: false,\n        uploadError: true,\n        uploadErrorMessage: error.message\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"useNativeUpload\", function () {\n      return Runtime.isNativeIOS('imageUpload');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"initNativeImagePicker\", function (e) {\n      e.preventDefault();\n      window.webkit.messageHandlers.imageUpload.postMessage({\n        id: 'native-cover-image-upload-message',\n        ratio: \"\".concat(100.0 / 42.0)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNativeMessage\", function (e) {\n      var message = JSON.parse(e.target.value);\n\n      switch (message.action) {\n        case 'uploading':\n          _this.setState({\n            uploadingImage: true\n          });\n\n          _this.clearUploadError();\n\n          break;\n\n        case 'error':\n          _this.setState({\n            uploadingImage: false,\n            uploadError: true,\n            uploadErrorMessage: message.error\n          });\n\n          break;\n\n        case 'success':\n          _this.props.onMainImageUrlChange({\n            links: [message.link]\n          });\n\n          _this.setState({\n            uploadingImage: false\n          });\n\n          break;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"triggerMainImageRemoval\", function (e) {\n      e.preventDefault();\n      var onMainImageUrlChange = _this.props.onMainImageUrlChange;\n      onMainImageUrlChange({\n        links: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onDropImage\", function (event) {\n      onDragExit(event);\n\n      if (event.dataTransfer.files.length > 1) {\n        addSnackbarItem({\n          message: 'Only one image can be dropped at a time.',\n          addCloseButton: true\n        });\n        return;\n      }\n\n      _this.handleMainImageUpload(event);\n    });\n\n    return _this;\n  }\n\n  _createClass(ArticleCoverImage, [{\n    key: \"render\",\n    value: function render() {\n      var mainImage = this.props.mainImage;\n      var _this$state = this.state,\n          uploadError = _this$state.uploadError,\n          uploadErrorMessage = _this$state.uploadErrorMessage,\n          uploadingImage = _this$state.uploadingImage;\n      var uploadLabel = mainImage ? 'Change' : 'Add a cover image'; // When the component is rendered in an environment that supports a native\n      // image picker for image upload we want to add the aria-label attr and the\n      // onClick event to the UI button. This event will kick off the native UX.\n      // The props are unwrapped (using spread operator) in the button below\n\n      var extraProps = this.useNativeUpload() ? {\n        onClick: this.initNativeImagePicker,\n        'aria-label': 'Upload cover image'\n      } : {};\n      return h(DragAndDropZone, {\n        onDragOver: onDragOver,\n        onDragExit: onDragExit,\n        onDrop: this.onDropImage\n      }, h(\"div\", {\n        className: \"crayons-article-form__cover\",\n        role: \"presentation\"\n      }, !uploadingImage && mainImage && h(\"img\", {\n        src: mainImage,\n        className: \"crayons-article-form__cover__image\",\n        width: \"250\",\n        height: \"105\",\n        alt: \"Post cover\"\n      }), h(\"div\", {\n        className: \"flex items-center\"\n      }, uploadingImage ? h(\"span\", {\n        \"class\": \"lh-base pl-1 border-0 py-2 inline-block\"\n      }, h(Spinner, null), \" Uploading...\") : h(Fragment, null, h(Button, _extends({\n        variant: \"outlined\",\n        className: \"mr-2 whitespace-nowrap\"\n      }, extraProps), h(\"label\", {\n        htmlFor: \"cover-image-input\"\n      }, uploadLabel), !this.useNativeUpload() && h(\"input\", {\n        id: \"cover-image-input\",\n        type: \"file\",\n        onChange: this.handleMainImageUpload,\n        accept: \"image/*\",\n        className: \"w-100 h-100 absolute left-0 right-0 top-0 bottom-0 overflow-hidden opacity-0 cursor-pointer\",\n        \"data-max-file-size-mb\": \"25\"\n      })), mainImage && h(Button, {\n        variant: \"ghost-danger\",\n        onClick: this.triggerMainImageRemoval\n      }, \"Remove\")), this.useNativeUpload() && h(\"input\", {\n        type: \"hidden\",\n        id: \"native-cover-image-upload-message\",\n        value: \"\",\n        onChange: this.handleNativeMessage\n      })), uploadError && h(\"p\", {\n        className: \"articleform__uploaderror\"\n      }, uploadErrorMessage)));\n    }\n  }]);\n\n  return ArticleCoverImage;\n}(Component);\nArticleCoverImage.propTypes = {\n  mainImage: PropTypes.string.isRequired,\n  onMainImageUrlChange: PropTypes.func.isRequired\n};\nArticleCoverImage.displayName = 'ArticleCoverImage';","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/article-form/components/ArticleCoverImage.jsx"],"names":["h","Component","Fragment","PropTypes","addSnackbarItem","generateMainImage","validateFileInputs","onDragOver","onDragExit","Button","Spinner","DragAndDropZone","ArticleCoverImage","uploadError","uploadErrorMessage","uploadingImage","props","onMainImageUrlChange","setState","event","preventDefault","clearUploadError","dataTransfer","target","image","files","payload","onImageUploadSuccess","onUploadError","error","message","Runtime","isNativeIOS","e","window","webkit","messageHandlers","imageUpload","postMessage","id","ratio","JSON","parse","value","action","links","link","length","addCloseButton","handleMainImageUpload","mainImage","state","uploadLabel","extraProps","useNativeUpload","onClick","initNativeImagePicker","onDropImage","triggerMainImageRemoval","handleNativeMessage","propTypes","string","isRequired","func","displayName"],"mappings":"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","sourcesContent":["/* global Runtime */\n\nimport { h, Component, Fragment } from 'preact';\nimport PropTypes from 'prop-types';\nimport { addSnackbarItem } from '../../Snackbar';\nimport { generateMainImage } from '../actions';\nimport { validateFileInputs } from '../../packs/validateFileInputs';\nimport { onDragOver, onDragExit } from './dragAndDropHelpers';\nimport { Button } from '@crayons';\nimport { Spinner } from '@crayons/Spinner/Spinner';\nimport { DragAndDropZone } from '@utilities/dragAndDrop';\n\nexport class ArticleCoverImage extends Component {\n  state = {\n    uploadError: false,\n    uploadErrorMessage: null,\n    uploadingImage: false,\n  };\n\n  onImageUploadSuccess = (...args) => {\n    this.props.onMainImageUrlChange(...args);\n    this.setState({ uploadingImage: false });\n  };\n\n  handleMainImageUpload = (event) => {\n    event.preventDefault();\n\n    this.setState({ uploadingImage: true });\n    this.clearUploadError();\n\n    if (validateFileInputs()) {\n      const { files: image } = event.dataTransfer || event.target;\n      const payload = { image };\n\n      generateMainImage(payload, this.onImageUploadSuccess, this.onUploadError);\n    }\n  };\n\n  clearUploadError = () => {\n    this.setState({\n      uploadError: false,\n      uploadErrorMessage: null,\n    });\n  };\n\n  onUploadError = (error) => {\n    this.setState({\n      uploadingImage: false,\n      uploadError: true,\n      uploadErrorMessage: error.message,\n    });\n  };\n\n  useNativeUpload = () => {\n    return Runtime.isNativeIOS('imageUpload');\n  };\n\n  initNativeImagePicker = (e) => {\n    e.preventDefault();\n    window.webkit.messageHandlers.imageUpload.postMessage({\n      id: 'native-cover-image-upload-message',\n      ratio: `${100.0 / 42.0}`,\n    });\n  };\n\n  handleNativeMessage = (e) => {\n    const message = JSON.parse(e.target.value);\n\n    switch (message.action) {\n      case 'uploading':\n        this.setState({ uploadingImage: true });\n        this.clearUploadError();\n        break;\n      case 'error':\n        this.setState({\n          uploadingImage: false,\n          uploadError: true,\n          uploadErrorMessage: message.error,\n        });\n        break;\n      case 'success':\n        this.props.onMainImageUrlChange({ links: [message.link] });\n        this.setState({ uploadingImage: false });\n        break;\n    }\n  };\n\n  triggerMainImageRemoval = (e) => {\n    e.preventDefault();\n    const { onMainImageUrlChange } = this.props;\n    onMainImageUrlChange({\n      links: [],\n    });\n  };\n\n  onDropImage = (event) => {\n    onDragExit(event);\n\n    if (event.dataTransfer.files.length > 1) {\n      addSnackbarItem({\n        message: 'Only one image can be dropped at a time.',\n        addCloseButton: true,\n      });\n      return;\n    }\n\n    this.handleMainImageUpload(event);\n  };\n\n  render() {\n    const { mainImage } = this.props;\n    const { uploadError, uploadErrorMessage, uploadingImage } = this.state;\n    const uploadLabel = mainImage ? 'Change' : 'Add a cover image';\n\n    // When the component is rendered in an environment that supports a native\n    // image picker for image upload we want to add the aria-label attr and the\n    // onClick event to the UI button. This event will kick off the native UX.\n    // The props are unwrapped (using spread operator) in the button below\n    const extraProps = this.useNativeUpload()\n      ? {\n          onClick: this.initNativeImagePicker,\n          'aria-label': 'Upload cover image',\n        }\n      : {};\n\n    return (\n      <DragAndDropZone\n        onDragOver={onDragOver}\n        onDragExit={onDragExit}\n        onDrop={this.onDropImage}\n      >\n        <div className=\"crayons-article-form__cover\" role=\"presentation\">\n          {!uploadingImage && mainImage && (\n            <img\n              src={mainImage}\n              className=\"crayons-article-form__cover__image\"\n              width=\"250\"\n              height=\"105\"\n              alt=\"Post cover\"\n            />\n          )}\n          <div className=\"flex items-center\">\n            {uploadingImage ? (\n              <span class=\"lh-base pl-1 border-0 py-2 inline-block\">\n                <Spinner /> Uploading...\n              </span>\n            ) : (\n              <Fragment>\n                <Button\n                  variant=\"outlined\"\n                  className=\"mr-2 whitespace-nowrap\"\n                  {...extraProps}\n                >\n                  <label htmlFor=\"cover-image-input\">{uploadLabel}</label>\n                  {!this.useNativeUpload() && (\n                    <input\n                      id=\"cover-image-input\"\n                      type=\"file\"\n                      onChange={this.handleMainImageUpload}\n                      accept=\"image/*\"\n                      className=\"w-100 h-100 absolute left-0 right-0 top-0 bottom-0 overflow-hidden opacity-0 cursor-pointer\"\n                      data-max-file-size-mb=\"25\"\n                    />\n                  )}\n                </Button>\n                {mainImage && (\n                  <Button\n                    variant=\"ghost-danger\"\n                    onClick={this.triggerMainImageRemoval}\n                  >\n                    Remove\n                  </Button>\n                )}\n              </Fragment>\n            )}\n            {this.useNativeUpload() && (\n              <input\n                type=\"hidden\"\n                id=\"native-cover-image-upload-message\"\n                value=\"\"\n                onChange={this.handleNativeMessage}\n              />\n            )}\n          </div>\n          {uploadError && (\n            <p className=\"articleform__uploaderror\">{uploadErrorMessage}</p>\n          )}\n        </div>\n      </DragAndDropZone>\n    );\n  }\n}\n\nArticleCoverImage.propTypes = {\n  mainImage: PropTypes.string.isRequired,\n  onMainImageUrlChange: PropTypes.func.isRequired,\n};\n\nArticleCoverImage.displayName = 'ArticleCoverImage';\n"]},"metadata":{},"sourceType":"module"}