{"ast":null,"code":"/**\n * A color input and a text input that reacts to an onColorChange change event.\n *\n * @example\n * field = {\n *  \"id\": 164,\n *  \"attribute_name\": \"brand_color1\",\n *  \"description\": \"Used for backgrounds, borders etc.\",\n *  \"input_type\": \"color_field\",\n *  \"label\": \"Brand color 1\",\n *  \"placeholder_text\": \"#000000\"\n * }\n * <ColorPicker\n   key={field.id}\n   field={field}\n   onColorChange={this.handleColorPickerChange}/>\n\n * Note:\n * field is an json object that will contain the following attributes: attribute_name, placeholder_text, description, label.\n */\nimport { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport { FormField } from '@crayons';\n\nfunction ColorPicker(props) {\n  var onColorChange = props.onColorChange;\n  var _props$field = props.field,\n      attribute_name = _props$field.attribute_name,\n      placeholder_text = _props$field.placeholder_text,\n      description = _props$field.description,\n      label = _props$field.label;\n  return h(FormField, null, h(\"label\", {\n    \"class\": \"crayons-field__label\",\n    htmlFor: attribute_name\n  }, label), h(\"div\", {\n    \"class\": \"flex items-center w-100 m:w-50\"\n  }, h(\"input\", {\n    placeholder: placeholder_text,\n    \"class\": \"crayons-textfield js-color-field\",\n    type: \"text\",\n    name: attribute_name,\n    id: attribute_name,\n    onChange: onColorChange\n  }), h(\"input\", {\n    \"class\": \"crayons-color-selector js-color-field ml-2\",\n    type: \"color\",\n    name: attribute_name,\n    id: attribute_name,\n    onChange: onColorChange\n  })), description && h(\"p\", {\n    \"class\": \"crayons-field__description\"\n  }, description));\n}\n\nColorPicker.propTypes = {\n  field: PropTypes.shape({\n    attribute_name: PropTypes.string.isRequired,\n    placeholder_text: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default ColorPicker;","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/onboarding/components/ProfileForm/ColorPicker.jsx"],"names":["h","PropTypes","FormField","ColorPicker","props","onColorChange","field","attribute_name","placeholder_text","description","label","propTypes","shape","string","isRequired"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,CAAT,QAAkB,QAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,UAA1B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,MAClBC,aADkB,GACAD,KADA,CAClBC,aADkB;AAAA,qBAEuCD,KAAK,CAACE,KAF7C;AAAA,MAElBC,cAFkB,gBAElBA,cAFkB;AAAA,MAEFC,gBAFE,gBAEFA,gBAFE;AAAA,MAEgBC,WAFhB,gBAEgBA,WAFhB;AAAA,MAE6BC,KAF7B,gBAE6BA,KAF7B;AAI1B,SACE,EAAC,SAAD,QACE;AAAO,aAAM,sBAAb;AAAoC,IAAA,OAAO,EAAEH;AAA7C,KACGG,KADH,CADF,EAIE;AAAK,aAAM;AAAX,KACE;AACE,IAAA,WAAW,EAAEF,gBADf;AAEE,aAAM,kCAFR;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,IAAI,EAAED,cAJR;AAKE,IAAA,EAAE,EAAEA,cALN;AAME,IAAA,QAAQ,EAAEF;AANZ,IADF,EASE;AACE,aAAM,4CADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,IAAI,EAAEE,cAHR;AAIE,IAAA,EAAE,EAAEA,cAJN;AAKE,IAAA,QAAQ,EAAEF;AALZ,IATF,CAJF,EAqBGI,WAAW,IAAI;AAAG,aAAM;AAAT,KAAuCA,WAAvC,CArBlB,CADF;AAyBD;;AAEDN,WAAW,CAACQ,SAAZ,GAAwB;AACtBL,EAAAA,KAAK,EAAEL,SAAS,CAACW,KAAV,CAAgB;AACrBL,IAAAA,cAAc,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UADZ;AAErBN,IAAAA,gBAAgB,EAAEP,SAAS,CAACY,MAAV,CAAiBC,UAFd;AAGrBL,IAAAA,WAAW,EAAER,SAAS,CAACY,MAAV,CAAiBC,UAHT;AAIrBJ,IAAAA,KAAK,EAAET,SAAS,CAACY,MAAV,CAAiBC;AAJH,GAAhB,EAKJA;AANmB,CAAxB;AASA,eAAeX,WAAf","sourcesContent":["/**\n * A color input and a text input that reacts to an onColorChange change event.\n *\n * @example\n * field = {\n *  \"id\": 164,\n *  \"attribute_name\": \"brand_color1\",\n *  \"description\": \"Used for backgrounds, borders etc.\",\n *  \"input_type\": \"color_field\",\n *  \"label\": \"Brand color 1\",\n *  \"placeholder_text\": \"#000000\"\n * }\n * <ColorPicker\n   key={field.id}\n   field={field}\n   onColorChange={this.handleColorPickerChange}/>\n\n * Note:\n * field is an json object that will contain the following attributes: attribute_name, placeholder_text, description, label.\n */\n\nimport { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport { FormField } from '@crayons';\n\nfunction ColorPicker(props) {\n  const { onColorChange } = props;\n  const { attribute_name, placeholder_text, description, label } = props.field;\n\n  return (\n    <FormField>\n      <label class=\"crayons-field__label\" htmlFor={attribute_name}>\n        {label}\n      </label>\n      <div class=\"flex items-center w-100 m:w-50\">\n        <input\n          placeholder={placeholder_text}\n          class=\"crayons-textfield js-color-field\"\n          type=\"text\"\n          name={attribute_name}\n          id={attribute_name}\n          onChange={onColorChange}\n        />\n        <input\n          class=\"crayons-color-selector js-color-field ml-2\"\n          type=\"color\"\n          name={attribute_name}\n          id={attribute_name}\n          onChange={onColorChange}\n        />\n      </div>\n      {description && <p class=\"crayons-field__description\">{description}</p>}\n    </FormField>\n  );\n}\n\nColorPicker.propTypes = {\n  field: PropTypes.shape({\n    attribute_name: PropTypes.string.isRequired,\n    placeholder_text: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ColorPicker;\n"]},"metadata":{},"sourceType":"module"}