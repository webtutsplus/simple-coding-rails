{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { Button } from '@crayons';\nexport var SingleRepo = /*#__PURE__*/function (_Component) {\n  _inherits(SingleRepo, _Component);\n\n  var _super = _createSuper(SingleRepo);\n\n  function SingleRepo(props) {\n    var _this;\n\n    _classCallCheck(this, SingleRepo);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"forkLabel\", function () {\n      var fork = _this.props.fork;\n\n      if (fork) {\n        return h(\"span\", {\n          className: \"crayons-indicator crayons-indicator--accent\"\n        }, \"fork\");\n      }\n\n      return null;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"submitRepo\", function () {\n      var featured = _this.state.featured;\n      var githubIdCode = _this.props.githubIdCode;\n      var submitButton = document.getElementById(\"github-repo-button-\".concat(githubIdCode));\n      submitButton.textContent = '';\n      submitButton.disabled = true;\n      var csrfToken = document.querySelector(\"meta[name='csrf-token']\").content;\n      var formData = new FormData();\n      var formAttributes = {\n        github_id_code: githubIdCode,\n        featured: !featured\n      };\n      formData.append('github_repo', JSON.stringify(formAttributes));\n      fetch('/github_repos/update_or_create', {\n        method: 'POST',\n        headers: {\n          'X-CSRF-TOKEN': csrfToken\n        },\n        body: formData,\n        credentials: 'same-origin'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        submitButton.disabled = false;\n\n        _this.setState({\n          featured: json.featured\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"githubRepoClassName\", function () {\n      var featured = _this.state.featured;\n\n      if (featured) {\n        return 'github-repo-row github-repo-row-featured';\n      }\n\n      return 'github-repo-row';\n    });\n\n    var _featured = _this.props.featured;\n    _this.state = {\n      featured: _featured\n    };\n    return _this;\n  }\n\n  _createClass(SingleRepo, [{\n    key: \"render\",\n    value: function render() {\n      var featured = this.state.featured;\n      var _this$props = this.props,\n          name = _this$props.name,\n          githubIdCode = _this$props.githubIdCode;\n      return h(\"div\", {\n        className: this.githubRepoClassName()\n      }, h(\"div\", {\n        className: \"github-repo-row-name\"\n      }, h(\"div\", {\n        className: \"github-repo-row-label\"\n      }, name, this.forkLabel()), h(Button, {\n        className: \"crayons-btn\",\n        id: \"github-repo-button-\".concat(githubIdCode),\n        onClick: this.submitRepo\n      }, featured ? 'Remove' : 'Select')));\n    }\n  }]);\n\n  return SingleRepo;\n}(Component);\nSingleRepo.displayName = 'Single GitHub Repo';\nSingleRepo.propTypes = {\n  name: PropTypes.string.isRequired,\n  githubIdCode: PropTypes.number.isRequired,\n  fork: PropTypes.bool.isRequired,\n  featured: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/githubRepos/singleRepo.jsx"],"names":["h","Component","PropTypes","Button","SingleRepo","props","fork","featured","state","githubIdCode","submitButton","document","getElementById","textContent","disabled","csrfToken","querySelector","content","formData","FormData","formAttributes","github_id_code","append","JSON","stringify","fetch","method","headers","body","credentials","then","response","json","setState","name","githubRepoClassName","forkLabel","submitRepo","displayName","propTypes","string","isRequired","number","bool"],"mappings":"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","sourcesContent":["import { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { Button } from '@crayons';\n\nexport class SingleRepo extends Component {\n  constructor(props) {\n    super(props);\n    const { featured } = this.props;\n    this.state = { featured };\n  }\n\n  forkLabel = () => {\n    const { fork } = this.props;\n    if (fork) {\n      return (\n        <span className=\"crayons-indicator crayons-indicator--accent\">\n          fork\n        </span>\n      );\n    }\n    return null;\n  };\n\n  submitRepo = () => {\n    const { featured } = this.state;\n    const { githubIdCode } = this.props;\n\n    const submitButton = document.getElementById(\n      `github-repo-button-${githubIdCode}`,\n    );\n    submitButton.textContent = '';\n    submitButton.disabled = true;\n\n    const csrfToken = document.querySelector(\"meta[name='csrf-token']\").content;\n    const formData = new FormData();\n    const formAttributes = {\n      github_id_code: githubIdCode,\n      featured: !featured,\n    };\n    formData.append('github_repo', JSON.stringify(formAttributes));\n\n    fetch('/github_repos/update_or_create', {\n      method: 'POST',\n      headers: {\n        'X-CSRF-TOKEN': csrfToken,\n      },\n      body: formData,\n      credentials: 'same-origin',\n    })\n      .then((response) => response.json())\n      .then((json) => {\n        submitButton.disabled = false;\n        this.setState({ featured: json.featured });\n      });\n  };\n\n  githubRepoClassName = () => {\n    const { featured } = this.state;\n    if (featured) {\n      return 'github-repo-row github-repo-row-featured';\n    }\n    return 'github-repo-row';\n  };\n\n  render() {\n    const { featured } = this.state;\n    const { name, githubIdCode } = this.props;\n    return (\n      <div className={this.githubRepoClassName()}>\n        <div className=\"github-repo-row-name\">\n          <div className=\"github-repo-row-label\">\n            {name}\n            {this.forkLabel()}\n          </div>\n          <Button\n            className=\"crayons-btn\"\n            id={`github-repo-button-${githubIdCode}`}\n            onClick={this.submitRepo}\n          >\n            {featured ? 'Remove' : 'Select'}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nSingleRepo.displayName = 'Single GitHub Repo';\n\nSingleRepo.propTypes = {\n  name: PropTypes.string.isRequired,\n  githubIdCode: PropTypes.number.isRequired,\n  fork: PropTypes.bool.isRequired,\n  featured: PropTypes.bool.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}