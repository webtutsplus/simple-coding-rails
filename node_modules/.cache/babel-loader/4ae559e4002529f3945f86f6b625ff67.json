{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* global Runtime */\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\nimport { Button } from '@crayons';\n\nvar CopyIcon = function CopyIcon() {\n  return h(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    className: \"crayons-icon copy-icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    role: \"img\",\n    \"aria-labelledby\": \"fc5f15add1e114844f5e\"\n  }, h(\"title\", {\n    id: \"fc5f15add1e114844f5e\"\n  }, \"Copy Invitation Url\"), h(\"path\", {\n    d: \"M7 6V3a1 1 0 011-1h12a1 1 0 011 1v14a1 1 0 01-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1 1 0 013 21l.003-14c0-.552.45-1 1.007-1H7zm2 0h8v10h2V4H9v2zm-2 5v2h6v-2H7zm0 4v2h6v-2H7z\"\n  }));\n};\n\nvar InvitationLinkManager = /*#__PURE__*/function (_Component) {\n  _inherits(InvitationLinkManager, _Component);\n\n  var _super = _createSuper(InvitationLinkManager);\n\n  function InvitationLinkManager(props) {\n    var _this;\n\n    _classCallCheck(this, InvitationLinkManager);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"copyText\", function () {\n      _this.imageMarkdownInput = document.getElementById('chat-channel-unviation-url');\n      Runtime.copyToClipboard(_this.imageMarkdownInput.value).then(function () {\n        _this.setState({\n          showImageCopiedMessage: true\n        });\n      });\n    });\n\n    _this.state = {\n      invitationLink: props.invitationLink,\n      showImageCopiedMessage: false,\n      currentMembership: props.currentMembership\n    };\n    return _this;\n  }\n\n  _createClass(InvitationLinkManager, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          showImageCopiedMessage = _this$state.showImageCopiedMessage,\n          invitationLink = _this$state.invitationLink,\n          currentMembership = _this$state.currentMembership;\n\n      if (currentMembership.role !== 'mod') {\n        return null;\n      }\n\n      return h(\"div\", {\n        className: \"p-4 grid gap-2 crayons-card my-4 invitation-section\"\n      }, h(\"h3\", {\n        className: \"text-center title\"\n      }, \"Invitation Link\"), h(\"clipboard-copy\", {\n        onClick: this.copyText,\n        \"for\": \"chat-channel-unviation-url\",\n        \"aria-live\": \"polite\",\n        className: \"flex items-center flex-1\",\n        \"aria-controls\": \"image-markdown-copy-link-announcer\"\n      }, h(\"input\", {\n        type: \"text\",\n        className: \"crayons-textfield mr-2\",\n        id: \"chat-channel-unviation-url\",\n        readOnly: \"true\",\n        value: invitationLink,\n        \"aria-label\": \"invitation-link\"\n      }), h(Button, {\n        className: \"spec__image-markdown-copy\",\n        variant: \"ghost\",\n        contentType: \"icon\",\n        icon: CopyIcon\n      }), h(\"span\", {\n        id: \"image-markdown-copy-link-announcer\",\n        role: \"alert\",\n        className: \"fs-s \".concat(showImageCopiedMessage ? '' : 'opacity-0')\n      }, \"Copied!\")));\n    }\n  }]);\n\n  return InvitationLinkManager;\n}(Component);\n\n_defineProperty(InvitationLinkManager, \"propTypes\", {\n  invitationLink: PropTypes.string.isRequired,\n  currentMembership: PropTypes.isRequired\n});\n\nexport { InvitationLinkManager as default };","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/chat/ChatChannelSettings/MembershipManager/InvitationLinkManager.jsx"],"names":["h","Component","PropTypes","Button","CopyIcon","InvitationLinkManager","props","imageMarkdownInput","document","getElementById","Runtime","copyToClipboard","value","then","setState","showImageCopiedMessage","state","invitationLink","currentMembership","role","copyText","string","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA,SAASA,CAAT,EAAYC,SAAZ,QAA6B,QAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SACf;AACE,IAAA,KAAK,EAAC,IADR;AAEE,IAAA,MAAM,EAAC,IAFT;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,SAAS,EAAC,wBAJZ;AAKE,IAAA,KAAK,EAAC,4BALR;AAME,IAAA,IAAI,EAAC,KANP;AAOE,uBAAgB;AAPlB,KASE;AAAO,IAAA,EAAE,EAAC;AAAV,2BATF,EAUE;AAAM,IAAA,CAAC,EAAC;AAAR,IAVF,CADe;AAAA,CAAjB;;IAeqBC,qB;;;;;AAMnB,iCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,+DAUR,YAAM;AACf,YAAKC,kBAAL,GAA0BC,QAAQ,CAACC,cAAT,CACxB,4BADwB,CAA1B;AAIAC,MAAAA,OAAO,CAACC,eAAR,CAAwB,MAAKJ,kBAAL,CAAwBK,KAAhD,EAAuDC,IAAvD,CAA4D,YAAM;AAChE,cAAKC,QAAL,CAAc;AAAEC,UAAAA,sBAAsB,EAAE;AAA1B,SAAd;AACD,OAFD;AAGD,KAlBkB;;AAGjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAEX,KAAK,CAACW,cADX;AAEXF,MAAAA,sBAAsB,EAAE,KAFb;AAGXG,MAAAA,iBAAiB,EAAEZ,KAAK,CAACY;AAHd,KAAb;AAHiB;AAQlB;;;;6BAYQ;AAAA,wBAKH,KAAKF,KALF;AAAA,UAELD,sBAFK,eAELA,sBAFK;AAAA,UAGLE,cAHK,eAGLA,cAHK;AAAA,UAILC,iBAJK,eAILA,iBAJK;;AAOP,UAAIA,iBAAiB,CAACC,IAAlB,KAA2B,KAA/B,EAAsC;AACpC,eAAO,IAAP;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAI,QAAA,SAAS,EAAC;AAAd,2BADF,EAEE;AACE,QAAA,OAAO,EAAE,KAAKC,QADhB;AAEE,eAAI,4BAFN;AAGE,qBAAU,QAHZ;AAIE,QAAA,SAAS,EAAC,0BAJZ;AAKE,yBAAc;AALhB,SAOE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,wBAFZ;AAGE,QAAA,EAAE,EAAC,4BAHL;AAIE,QAAA,QAAQ,EAAC,MAJX;AAKE,QAAA,KAAK,EAAEH,cALT;AAME,sBAAW;AANb,QAPF,EAeE,EAAC,MAAD;AACE,QAAA,SAAS,EAAC,2BADZ;AAEE,QAAA,OAAO,EAAC,OAFV;AAGE,QAAA,WAAW,EAAC,MAHd;AAIE,QAAA,IAAI,EAAEb;AAJR,QAfF,EAqBE;AACE,QAAA,EAAE,EAAC,oCADL;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,iBAAUW,sBAAsB,GAAG,EAAH,GAAQ,WAAxC;AAHX,mBArBF,CAFF,CADF;AAkCD;;;;EAvEgDd,S;;gBAA9BI,qB,eACA;AACjBY,EAAAA,cAAc,EAAEf,SAAS,CAACmB,MAAV,CAAiBC,UADhB;AAEjBJ,EAAAA,iBAAiB,EAAEhB,SAAS,CAACoB;AAFZ,C;;SADAjB,qB","sourcesContent":["/* global Runtime */\n\nimport { h, Component } from 'preact';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@crayons';\n\nconst CopyIcon = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    className=\"crayons-icon copy-icon\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    aria-labelledby=\"fc5f15add1e114844f5e\"\n  >\n    <title id=\"fc5f15add1e114844f5e\">Copy Invitation Url</title>\n    <path d=\"M7 6V3a1 1 0 011-1h12a1 1 0 011 1v14a1 1 0 01-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1 1 0 013 21l.003-14c0-.552.45-1 1.007-1H7zm2 0h8v10h2V4H9v2zm-2 5v2h6v-2H7zm0 4v2h6v-2H7z\" />\n  </svg>\n);\n\nexport default class InvitationLinkManager extends Component {\n  static propTypes = {\n    invitationLink: PropTypes.string.isRequired,\n    currentMembership: PropTypes.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      invitationLink: props.invitationLink,\n      showImageCopiedMessage: false,\n      currentMembership: props.currentMembership,\n    };\n  }\n\n  copyText = () => {\n    this.imageMarkdownInput = document.getElementById(\n      'chat-channel-unviation-url',\n    );\n\n    Runtime.copyToClipboard(this.imageMarkdownInput.value).then(() => {\n      this.setState({ showImageCopiedMessage: true });\n    });\n  };\n\n  render() {\n    const {\n      showImageCopiedMessage,\n      invitationLink,\n      currentMembership,\n    } = this.state;\n\n    if (currentMembership.role !== 'mod') {\n      return null;\n    }\n\n    return (\n      <div className=\"p-4 grid gap-2 crayons-card my-4 invitation-section\">\n        <h3 className=\"text-center title\">Invitation Link</h3>\n        <clipboard-copy\n          onClick={this.copyText}\n          for=\"chat-channel-unviation-url\"\n          aria-live=\"polite\"\n          className=\"flex items-center flex-1\"\n          aria-controls=\"image-markdown-copy-link-announcer\"\n        >\n          <input\n            type=\"text\"\n            className=\"crayons-textfield mr-2\"\n            id=\"chat-channel-unviation-url\"\n            readOnly=\"true\"\n            value={invitationLink}\n            aria-label=\"invitation-link\"\n          />\n          <Button\n            className=\"spec__image-markdown-copy\"\n            variant=\"ghost\"\n            contentType=\"icon\"\n            icon={CopyIcon}\n          />\n          <span\n            id=\"image-markdown-copy-link-announcer\"\n            role=\"alert\"\n            className={`fs-s ${showImageCopiedMessage ? '' : 'opacity-0'}`}\n          >\n            Copied!\n          </span>\n        </clipboard-copy>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}