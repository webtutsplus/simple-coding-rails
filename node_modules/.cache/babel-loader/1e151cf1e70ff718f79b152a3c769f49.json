{"ast":null,"code":"function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Controller } from 'stimulus';\n\nvar ReactionController = /*#__PURE__*/function (_Controller) {\n  _inherits(ReactionController, _Controller);\n\n  var _super = _createSuper(ReactionController);\n\n  function ReactionController() {\n    _classCallCheck(this, ReactionController);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ReactionController, [{\n    key: \"updateReaction\",\n    value: function updateReaction(status) {\n      var _this = this;\n\n      var id = this.idValue;\n      fetch(this.urlValue, {\n        method: 'PATCH',\n        headers: {\n          Accept: 'application/json',\n          'X-CSRF-Token': document.querySelector(\"meta[name='csrf-token']\").content,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          id: id,\n          status: status\n        }),\n        credentials: 'same-origin'\n      }).then(function (response) {\n        return response.json().then(function (json) {\n          if (json.outcome === 'Success') {\n            _this.element.remove();\n\n            document.getElementById(\"js__reaction__div__hr__\".concat(id)).remove();\n          } else {\n            window.alert(json.error);\n          }\n        })[\"catch\"](function (error) {\n          window.alert(error);\n        });\n      });\n    }\n  }, {\n    key: \"updateReactionInvalid\",\n    value: function updateReactionInvalid() {\n      this.updateReaction(this.invalidStatus);\n    }\n  }, {\n    key: \"updateReactionConfirmed\",\n    value: function updateReactionConfirmed() {\n      this.updateReaction(this.confirmedStatus);\n    }\n  }, {\n    key: \"reactableUserCheck\",\n    value: function reactableUserCheck() {\n      if (this.reactableType === 'user') {\n        if (window.confirm('You are confirming a User vomit reaction; are you sure?')) {\n          this.updateReaction(this.confirmedStatus);\n        }\n      } else {\n        this.updateReaction(this.confirmedStatus);\n      }\n    }\n  }, {\n    key: \"reactableType\",\n    get: function get() {\n      return this.confirmedTarget.dataset.reactable;\n    }\n  }, {\n    key: \"confirmedStatus\",\n    get: function get() {\n      return this.confirmedTarget.dataset.status;\n    }\n  }, {\n    key: \"invalidStatus\",\n    get: function get() {\n      return this.invalidTarget.dataset.altstatus;\n    }\n  }]);\n\n  return ReactionController;\n}(Controller);\n\n_defineProperty(ReactionController, \"targets\", ['invalid', 'confirmed']);\n\n_defineProperty(ReactionController, \"values\", {\n  id: Number,\n  url: String\n});\n\nexport { ReactionController as default };","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/admin/controllers/reaction_controller.js"],"names":["Controller","ReactionController","status","id","idValue","fetch","urlValue","method","headers","Accept","document","querySelector","content","body","JSON","stringify","credentials","then","response","json","outcome","element","remove","getElementById","window","alert","error","updateReaction","invalidStatus","confirmedStatus","reactableType","confirm","confirmedTarget","dataset","reactable","invalidTarget","altstatus","Number","url","String"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,UAA3B;;IAEqBC,kB;;;;;;;;;;;;;mCAOJC,M,EAAQ;AAAA;;AACrB,UAAMC,EAAE,GAAG,KAAKC,OAAhB;AAEAC,MAAAA,KAAK,CAAC,KAAKC,QAAN,EAAgB;AACnBC,QAAAA,MAAM,EAAE,OADW;AAEnBC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,kBADD;AAEP,0BAAgBC,QAAQ,CAACC,aAAT,CAAuB,yBAAvB,EACbC,OAHI;AAIP,0BAAgB;AAJT,SAFU;AAQnBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBZ,UAAAA,EAAE,EAAFA,EADmB;AAEnBD,UAAAA,MAAM,EAANA;AAFmB,SAAf,CARa;AAYnBc,QAAAA,WAAW,EAAE;AAZM,OAAhB,CAAL,CAaGC,IAbH,CAaQ,UAACC,QAAD;AAAA,eACNA,QAAQ,CACLC,IADH,GAEGF,IAFH,CAEQ,UAACE,IAAD,EAAU;AACd,cAAIA,IAAI,CAACC,OAAL,KAAiB,SAArB,EAAgC;AAC9B,YAAA,KAAI,CAACC,OAAL,CAAaC,MAAb;;AACAZ,YAAAA,QAAQ,CAACa,cAAT,kCAAkDpB,EAAlD,GAAwDmB,MAAxD;AACD,WAHD,MAGO;AACLE,YAAAA,MAAM,CAACC,KAAP,CAAaN,IAAI,CAACO,KAAlB;AACD;AACF,SATH,WAUS,UAACA,KAAD,EAAW;AAChBF,UAAAA,MAAM,CAACC,KAAP,CAAaC,KAAb;AACD,SAZH,CADM;AAAA,OAbR;AA4BD;;;4CAEuB;AACtB,WAAKC,cAAL,CAAoB,KAAKC,aAAzB;AACD;;;8CAEyB;AACxB,WAAKD,cAAL,CAAoB,KAAKE,eAAzB;AACD;;;yCAEoB;AACnB,UAAI,KAAKC,aAAL,KAAuB,MAA3B,EAAmC;AACjC,YACEN,MAAM,CAACO,OAAP,CACE,yDADF,CADF,EAIE;AACA,eAAKJ,cAAL,CAAoB,KAAKE,eAAzB;AACD;AACF,OARD,MAQO;AACL,aAAKF,cAAL,CAAoB,KAAKE,eAAzB;AACD;AACF;;;wBAEmB;AAClB,aAAO,KAAKG,eAAL,CAAqBC,OAArB,CAA6BC,SAApC;AACD;;;wBAEqB;AACpB,aAAO,KAAKF,eAAL,CAAqBC,OAArB,CAA6B/B,MAApC;AACD;;;wBAEmB;AAClB,aAAO,KAAKiC,aAAL,CAAmBF,OAAnB,CAA2BG,SAAlC;AACD;;;;EAxE6CpC,U;;gBAA3BC,kB,aACF,CAAC,SAAD,EAAY,WAAZ,C;;gBADEA,kB,YAEH;AACdE,EAAAA,EAAE,EAAEkC,MADU;AAEdC,EAAAA,GAAG,EAAEC;AAFS,C;;SAFGtC,kB","sourcesContent":["import { Controller } from 'stimulus';\n\nexport default class ReactionController extends Controller {\n  static targets = ['invalid', 'confirmed'];\n  static values = {\n    id: Number,\n    url: String,\n  };\n\n  updateReaction(status) {\n    const id = this.idValue;\n\n    fetch(this.urlValue, {\n      method: 'PATCH',\n      headers: {\n        Accept: 'application/json',\n        'X-CSRF-Token': document.querySelector(\"meta[name='csrf-token']\")\n          .content,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        id,\n        status,\n      }),\n      credentials: 'same-origin',\n    }).then((response) =>\n      response\n        .json()\n        .then((json) => {\n          if (json.outcome === 'Success') {\n            this.element.remove();\n            document.getElementById(`js__reaction__div__hr__${id}`).remove();\n          } else {\n            window.alert(json.error);\n          }\n        })\n        .catch((error) => {\n          window.alert(error);\n        }),\n    );\n  }\n\n  updateReactionInvalid() {\n    this.updateReaction(this.invalidStatus);\n  }\n\n  updateReactionConfirmed() {\n    this.updateReaction(this.confirmedStatus);\n  }\n\n  reactableUserCheck() {\n    if (this.reactableType === 'user') {\n      if (\n        window.confirm(\n          'You are confirming a User vomit reaction; are you sure?',\n        )\n      ) {\n        this.updateReaction(this.confirmedStatus);\n      }\n    } else {\n      this.updateReaction(this.confirmedStatus);\n    }\n  }\n\n  get reactableType() {\n    return this.confirmedTarget.dataset.reactable;\n  }\n\n  get confirmedStatus() {\n    return this.confirmedTarget.dataset.status;\n  }\n\n  get invalidStatus() {\n    return this.invalidTarget.dataset.altstatus;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}