{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport PropTypes from 'prop-types';\nimport { useListNavigation } from '../shared/components/useListNavigation';\nimport { useKeyboardShortcuts } from '../shared/components/useKeyboardShortcuts';\n/* global userData sendHapticMessage showModal buttonFormData renderNewSidebarCount */\n\nexport var Feed = function Feed(_ref) {\n  var timeFrame = _ref.timeFrame,\n      renderFeed = _ref.renderFeed;\n\n  var _userData = userData(),\n      _userData$reading_lis = _userData.reading_list_ids,\n      reading_list_ids = _userData$reading_lis === void 0 ? [] : _userData$reading_lis; // eslint-disable-line camelcase\n\n\n  var _useState = useState(new Set(reading_list_ids)),\n      _useState2 = _slicedToArray(_useState, 2),\n      bookmarkedFeedItems = _useState2[0],\n      setBookmarkedFeedItems = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      feedItems = _useState4[0],\n      setFeedItems = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      podcastEpisodes = _useState6[0],\n      setPodcastEpisodes = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      onError = _useState8[0],\n      setOnError = _useState8[1];\n\n  useEffect(function () {\n    setPodcastEpisodes(getPodcastEpisodes());\n  }, []);\n  useEffect(function () {\n    var fetchFeedItems = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          if (onError) setOnError(false);\n\n          var _feedItems = yield getFeedItems(timeFrame); // Ensure first article is one with a main_image\n          // This is important because the featuredStory will\n          // appear at the top of the feed, with a larger\n          // main_image than any of the stories or feed elements.\n\n\n          var featuredStory = _feedItems.find(function (story) {\n            return story.main_image !== null;\n          }); // Remove that first story from the array to\n          // prevent it from rendering twice in the feed.\n\n\n          var index = _feedItems.indexOf(featuredStory);\n\n          var deleteCount = featuredStory ? 1 : 0;\n\n          _feedItems.splice(index, deleteCount);\n\n          var subStories = _feedItems;\n          var organizedFeedItems = [featuredStory, subStories].flat();\n          setFeedItems(organizedFeedItems);\n        } catch (_unused) {\n          if (!onError) setOnError(true);\n        }\n      });\n\n      return function fetchFeedItems() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchFeedItems();\n  }, [timeFrame, onError]);\n  /**\n   * Retrieves feed data.\n   *\n   * @param {number} [page=1] Page of feed data to retrieve\n   *\n   * @returns {Promise} A promise containing the JSON response for the feed data.\n   */\n\n  function getFeedItems() {\n    return _getFeedItems.apply(this, arguments);\n  }\n\n  function _getFeedItems() {\n    _getFeedItems = _asyncToGenerator(function* () {\n      var timeFrame = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var response = yield fetch(\"/stories/feed/\".concat(timeFrame, \"?page=\").concat(page), {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json',\n          'X-CSRF-Token': window.csrfToken,\n          'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin'\n      });\n      return yield response.json();\n    });\n    return _getFeedItems.apply(this, arguments);\n  }\n\n  function getPodcastEpisodes() {\n    var el = document.getElementById('followed-podcasts');\n    var user = userData(); // Global\n\n    var episodes = [];\n\n    if (user && user.followed_podcast_ids && user.followed_podcast_ids.length > 0) {\n      var data = JSON.parse(el.dataset.episodes);\n      data.forEach(function (episode) {\n        if (user.followed_podcast_ids.indexOf(episode.podcast.id) > -1) {\n          episodes.push(episode);\n        }\n      });\n    }\n\n    return episodes;\n  }\n  /**\n   * Dispatches a click event to bookmark/unbook,ard an article.\n   *\n   * @param {Event} event\n   */\n\n\n  function bookmarkClick(_x) {\n    return _bookmarkClick.apply(this, arguments);\n  }\n\n  function _bookmarkClick() {\n    _bookmarkClick = _asyncToGenerator(function* (event) {\n      // The assumption is that the user is logged on at this point.\n      var userStatus = document.body.userStatus;\n      event.preventDefault();\n      sendHapticMessage('medium');\n\n      if (userStatus === 'logged-out') {\n        showModal('add-to-readinglist-from-index');\n        return;\n      }\n\n      var button = event.currentTarget;\n      var data = buttonFormData(button);\n      var csrfToken = yield getCsrfToken();\n      if (!csrfToken) return;\n      var fetchCallback = sendFetch('reaction-creation', data);\n      var response = yield fetchCallback(csrfToken);\n\n      if (response.status === 200) {\n        var json = yield response.json();\n        var articleId = Number(button.dataset.reactableId);\n        var result = json.result;\n        var updatedBookmarkedFeedItems = new Set(_toConsumableArray(bookmarkedFeedItems.values()));\n\n        if (result === 'create') {\n          updatedBookmarkedFeedItems.add(articleId);\n        }\n\n        if (result === 'destroy') {\n          updatedBookmarkedFeedItems[\"delete\"](articleId);\n        }\n\n        renderNewSidebarCount(button, json);\n        setBookmarkedFeedItems(updatedBookmarkedFeedItems);\n      }\n    });\n    return _bookmarkClick.apply(this, arguments);\n  }\n\n  useListNavigation('article.crayons-story', 'a.crayons-story__hidden-navigation-link', 'div.paged-stories');\n  useKeyboardShortcuts({\n    b: function b(event) {\n      var _event$target, _article$querySelecto;\n\n      var article = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.closest('article.crayons-story');\n      if (!article) return;\n      (_article$querySelecto = article.querySelector('button[id^=article-save-button]')) === null || _article$querySelecto === void 0 ? void 0 : _article$querySelecto.click();\n    }\n  });\n  return h(\"div\", {\n    id: \"rendered-article-feed\"\n  }, onError ? h(\"div\", {\n    \"class\": \"crayons-notice crayons-notice--danger\"\n  }, \"There was a problem fetching your feed.\") : renderFeed({\n    feedItems: feedItems,\n    podcastEpisodes: podcastEpisodes,\n    bookmarkedFeedItems: bookmarkedFeedItems,\n    bookmarkClick: bookmarkClick\n  }));\n};\nFeed.defaultProps = {\n  timeFrame: ''\n};\nFeed.propTypes = {\n  timeFrame: PropTypes.string,\n  renderFeed: PropTypes.func.isRequired\n};\nFeed.displayName = 'Feed';","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/articles/Feed.jsx"],"names":["h","useEffect","useState","PropTypes","useListNavigation","useKeyboardShortcuts","Feed","timeFrame","renderFeed","userData","reading_list_ids","Set","bookmarkedFeedItems","setBookmarkedFeedItems","feedItems","setFeedItems","podcastEpisodes","setPodcastEpisodes","onError","setOnError","getPodcastEpisodes","fetchFeedItems","getFeedItems","featuredStory","find","story","main_image","index","indexOf","deleteCount","splice","subStories","organizedFeedItems","flat","page","response","fetch","method","headers","Accept","window","csrfToken","credentials","json","el","document","getElementById","user","episodes","followed_podcast_ids","length","data","JSON","parse","dataset","forEach","episode","podcast","id","push","bookmarkClick","event","userStatus","body","preventDefault","sendHapticMessage","showModal","button","currentTarget","buttonFormData","getCsrfToken","fetchCallback","sendFetch","status","articleId","Number","reactableId","result","updatedBookmarkedFeedItems","values","add","renderNewSidebarCount","b","article","target","closest","querySelector","click","defaultProps","propTypes","string","func","isRequired","displayName"],"mappings":"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","sourcesContent":["import { h } from 'preact';\nimport { useEffect, useState } from 'preact/hooks';\nimport PropTypes from 'prop-types';\nimport { useListNavigation } from '../shared/components/useListNavigation';\nimport { useKeyboardShortcuts } from '../shared/components/useKeyboardShortcuts';\n\n/* global userData sendHapticMessage showModal buttonFormData renderNewSidebarCount */\n\nexport const Feed = ({ timeFrame, renderFeed }) => {\n  const { reading_list_ids = [] } = userData(); // eslint-disable-line camelcase\n  const [bookmarkedFeedItems, setBookmarkedFeedItems] = useState(\n    new Set(reading_list_ids),\n  );\n  const [feedItems, setFeedItems] = useState([]);\n  const [podcastEpisodes, setPodcastEpisodes] = useState([]);\n  const [onError, setOnError] = useState(false);\n\n  useEffect(() => {\n    setPodcastEpisodes(getPodcastEpisodes());\n  }, []);\n\n  useEffect(() => {\n    const fetchFeedItems = async () => {\n      try {\n        if (onError) setOnError(false);\n\n        const feedItems = await getFeedItems(timeFrame);\n\n        // Ensure first article is one with a main_image\n        // This is important because the featuredStory will\n        // appear at the top of the feed, with a larger\n        // main_image than any of the stories or feed elements.\n        const featuredStory = feedItems.find(\n          (story) => story.main_image !== null,\n        );\n\n        // Remove that first story from the array to\n        // prevent it from rendering twice in the feed.\n        const index = feedItems.indexOf(featuredStory);\n        const deleteCount = featuredStory ? 1 : 0;\n        feedItems.splice(index, deleteCount);\n        const subStories = feedItems;\n        const organizedFeedItems = [featuredStory, subStories].flat();\n\n        setFeedItems(organizedFeedItems);\n      } catch {\n        if (!onError) setOnError(true);\n      }\n    };\n\n    fetchFeedItems();\n  }, [timeFrame, onError]);\n\n  /**\n   * Retrieves feed data.\n   *\n   * @param {number} [page=1] Page of feed data to retrieve\n   *\n   * @returns {Promise} A promise containing the JSON response for the feed data.\n   */\n  async function getFeedItems(timeFrame = '', page = 1) {\n    const response = await fetch(`/stories/feed/${timeFrame}?page=${page}`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json',\n        'X-CSRF-Token': window.csrfToken,\n        'Content-Type': 'application/json',\n      },\n      credentials: 'same-origin',\n    });\n    return await response.json();\n  }\n\n  function getPodcastEpisodes() {\n    const el = document.getElementById('followed-podcasts');\n    const user = userData(); // Global\n    const episodes = [];\n    if (\n      user &&\n      user.followed_podcast_ids &&\n      user.followed_podcast_ids.length > 0\n    ) {\n      const data = JSON.parse(el.dataset.episodes);\n      data.forEach((episode) => {\n        if (user.followed_podcast_ids.indexOf(episode.podcast.id) > -1) {\n          episodes.push(episode);\n        }\n      });\n    }\n    return episodes;\n  }\n\n  /**\n   * Dispatches a click event to bookmark/unbook,ard an article.\n   *\n   * @param {Event} event\n   */\n  async function bookmarkClick(event) {\n    // The assumption is that the user is logged on at this point.\n    const { userStatus } = document.body;\n    event.preventDefault();\n    sendHapticMessage('medium');\n\n    if (userStatus === 'logged-out') {\n      showModal('add-to-readinglist-from-index');\n      return;\n    }\n\n    const { currentTarget: button } = event;\n    const data = buttonFormData(button);\n\n    const csrfToken = await getCsrfToken();\n    if (!csrfToken) return;\n\n    const fetchCallback = sendFetch('reaction-creation', data);\n    const response = await fetchCallback(csrfToken);\n    if (response.status === 200) {\n      const json = await response.json();\n      const articleId = Number(button.dataset.reactableId);\n\n      const { result } = json;\n      const updatedBookmarkedFeedItems = new Set([\n        ...bookmarkedFeedItems.values(),\n      ]);\n\n      if (result === 'create') {\n        updatedBookmarkedFeedItems.add(articleId);\n      }\n\n      if (result === 'destroy') {\n        updatedBookmarkedFeedItems.delete(articleId);\n      }\n\n      renderNewSidebarCount(button, json);\n\n      setBookmarkedFeedItems(updatedBookmarkedFeedItems);\n    }\n  }\n\n  useListNavigation(\n    'article.crayons-story',\n    'a.crayons-story__hidden-navigation-link',\n    'div.paged-stories',\n  );\n\n  useKeyboardShortcuts({\n    b: (event) => {\n      const article = event.target?.closest('article.crayons-story');\n\n      if (!article) return;\n\n      article.querySelector('button[id^=article-save-button]')?.click();\n    },\n  });\n\n  return (\n    <div id=\"rendered-article-feed\">\n      {onError ? (\n        <div class=\"crayons-notice crayons-notice--danger\">\n          There was a problem fetching your feed.\n        </div>\n      ) : (\n        renderFeed({\n          feedItems,\n          podcastEpisodes,\n          bookmarkedFeedItems,\n          bookmarkClick,\n        })\n      )}\n    </div>\n  );\n};\n\nFeed.defaultProps = {\n  timeFrame: '',\n};\n\nFeed.propTypes = {\n  timeFrame: PropTypes.string,\n  renderFeed: PropTypes.func.isRequired,\n};\n\nFeed.displayName = 'Feed';\n"]},"metadata":{},"sourceType":"module"}