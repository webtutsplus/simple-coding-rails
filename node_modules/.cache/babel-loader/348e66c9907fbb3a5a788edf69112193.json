{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { h, render } from 'preact';\nimport { useState, useRef } from 'preact/hooks';\nimport PropTypes from 'prop-types';\nimport { request } from '../utilities/http';\nimport { Button } from '@crayons/Button/Button';\n\nfunction confirmFlagUser(_x) {\n  return _confirmFlagUser.apply(this, arguments);\n}\n/**\n * Shows or hides the flag user modal.\n */\n\n\nfunction _confirmFlagUser() {\n  _confirmFlagUser = _asyncToGenerator(function* (_ref) {\n    var reactableType = _ref.reactableType,\n        category = _ref.category,\n        reactableId = _ref.reactableId;\n    var body = JSON.stringify({\n      reactable_type: reactableType,\n      category: category,\n      reactable_id: reactableId\n    });\n\n    try {\n      var response = yield request('/reactions', {\n        method: 'POST',\n        body: body\n      });\n      var outcome = yield response.json();\n\n      if (outcome.result === 'create') {\n        top.addSnackbarItem({\n          message: 'All posts by this author will be less visible.',\n          addCloseButton: true\n        });\n      } else if (outcome.result === null) {\n        top.addSnackbarItem({\n          message: \"It seems you've already reduced the visibility of this author's posts.\",\n          addCloseButton: true\n        });\n      } else {\n        top.addSnackbarItem({\n          message: \"Response from server: \".concat(JSON.stringify(outcome)),\n          addCloseButton: true\n        });\n      }\n    } catch (error) {\n      top.addSnackbarItem({\n        message: error,\n        addCloseButton: true\n      });\n    }\n\n    toggleFlagUserModal();\n  });\n  return _confirmFlagUser.apply(this, arguments);\n}\n\nexport function toggleFlagUserModal() {\n  var modalContainer = top.document.getElementsByClassName('flag-user-modal-container')[0];\n  modalContainer.classList.toggle('hidden');\n\n  if (!modalContainer.classList.contains('hidden')) {\n    top.window.scrollTo(0, 0);\n    top.document.body.style.height = '100vh';\n    top.document.body.style.overflowY = 'hidden';\n  } else {\n    top.document.body.style.height = 'inherit';\n    top.document.body.style.overflowY = 'inherit';\n  }\n}\n/**\n * Initializes the flag user modal for the given author ID.\n *\n * @param {number} authorId\n */\n\nexport function initializeFlagUserModal(authorId) {\n  // Check whether context is ModCenter or Friday-Night-Mode\n  var modContainer = document.getElementById('mod-container');\n\n  if (!modContainer) {\n    return;\n  }\n\n  render(h(FlagUserModal, {\n    authorId: authorId\n  }), document.getElementsByClassName('flag-user-modal-container')[0]);\n}\n/**\n * A modal for flagging a user and their content. This can be used in the moderation\n * or on an article page.\n *\n * @param {string} props.modCenterUrl (optional) The article URL loaded when in the moderation center.\n * @param {number} props.authorId The author ID associated to the content being moderated.\n */\n\nexport function FlagUserModal(_ref2) {\n  var modCenterArticleUrl = _ref2.modCenterArticleUrl,\n      authorId = _ref2.authorId;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isConfirmButtonEnabled = _useState2[0],\n      enableConfirmButton = _useState2[1];\n\n  var vomitAllRef = useRef(null);\n  return h(\"div\", {\n    \"data-testid\": \"flag-user-modal\",\n    \"class\": \"crayons-modal crayons-modal--s absolute flag-user-modal\"\n  }, h(\"div\", {\n    \"class\": \"crayons-modal__box\"\n  }, h(\"header\", {\n    \"class\": \"crayons-modal__box__header flag-user-modal-header\"\n  }, h(\"h2\", {\n    \"class\": \"crayons-modal__box__header__title\"\n  }, \"Flag User\"), h(\"button\", {\n    type: \"button\",\n    \"class\": \"crayons-btn crayons-btn--icon crayons-btn--ghost modal-header-close-icon\",\n    onClick: toggleFlagUserModal\n  }, h(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    \"class\": \"crayons-icon\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, h(\"path\", {\n    d: \"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636l4.95 4.95z\"\n  })))), h(\"div\", {\n    \"class\": \"crayons-modal__box__body\"\n  }, h(\"div\", {\n    \"class\": \"grid gap-4\"\n  }, h(\"p\", null, \"Thanks for keeping DEV safe. Here is what you can do to flag this user:\"), h(\"div\", {\n    \"class\": \"crayons-field crayons-field--radio\"\n  }, h(\"input\", {\n    type: \"radio\",\n    id: \"vomit-all\",\n    ref: vomitAllRef,\n    name: \"flag-user\",\n    \"class\": \"crayons-radio\",\n    \"data-reactable-id\": authorId,\n    \"data-category\": \"vomit\",\n    \"data-reactable-type\": \"User\",\n    checked: isConfirmButtonEnabled,\n    onClick: function onClick(event) {\n      var target = event.target;\n      enableConfirmButton(target.checked);\n    }\n  }), h(\"label\", {\n    htmlFor: \"vomit-all\",\n    \"class\": \"crayons-field__label\"\n  }, \"Make all posts by this author less visible\", h(\"p\", {\n    \"class\": \"crayons-field__description\"\n  }, \"This author consistently posts content that violates DEV's code of conduct because it is harassing, offensive or spammy.\"))), h(\"p\", null, h(\"a\", {\n    href: \"/report-abuse?url=\".concat(modCenterArticleUrl ? \"\".concat(document.location.origin).concat(modCenterArticleUrl) : document.location),\n    className: \"crayons-link crayons-link--brand\"\n  }, \"Report other inappropriate conduct\")), h(\"div\", null, h(Button, {\n    \"class\": \"crayons-btn crayons-btn--danger mr-2\",\n    id: \"confirm-flag-user-action\",\n    onClick: function onClick(_event) {\n      var adminVomitReaction = vomitAllRef.current.dataset;\n      confirmFlagUser(adminVomitReaction);\n      enableConfirmButton(false);\n    },\n    disabled: !isConfirmButtonEnabled\n  }, \"Confirm action\"), h(Button, {\n    \"class\": \"crayons-btn crayons-btn--secondary\",\n    id: \"cancel-flag-user-action\",\n    onClick: toggleFlagUserModal\n  }, \"Cancel\"))))), h(\"div\", {\n    role: \"presentation\",\n    \"class\": \"crayons-modal__overlay\",\n    onClick: toggleFlagUserModal,\n    onKeyUp: toggleFlagUserModal\n  }));\n}\nFlagUserModal.displayName = 'FlagUserModal';\nFlagUserModal.propTypes = {\n  moderationUrl: PropTypes.string,\n  authorId: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/packs/flagUserModal.jsx"],"names":["h","render","useState","useRef","PropTypes","request","Button","confirmFlagUser","reactableType","category","reactableId","body","JSON","stringify","reactable_type","reactable_id","response","method","outcome","json","result","top","addSnackbarItem","message","addCloseButton","error","toggleFlagUserModal","modalContainer","document","getElementsByClassName","classList","toggle","contains","window","scrollTo","style","height","overflowY","initializeFlagUserModal","authorId","modContainer","getElementById","FlagUserModal","modCenterArticleUrl","isConfirmButtonEnabled","enableConfirmButton","vomitAllRef","event","target","checked","location","origin","_event","adminVomitReaction","current","dataset","displayName","propTypes","moderationUrl","string","number","isRequired"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,CAAT,EAAYC,MAAZ,QAA0B,QAA1B;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,cAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,MAAT,QAAuB,wBAAvB;;SAEeC,e;;;AA0Cf;AACA;AACA;;;;uCA5CA,iBAAyE;AAAA,QAAxCC,aAAwC,QAAxCA,aAAwC;AAAA,QAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,QAAfC,WAAe,QAAfA,WAAe;AACvE,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC1BC,MAAAA,cAAc,EAAEN,aADU;AAE1BC,MAAAA,QAAQ,EAARA,QAF0B;AAG1BM,MAAAA,YAAY,EAAEL;AAHY,KAAf,CAAb;;AAMA,QAAI;AACF,UAAMM,QAAQ,SAASX,OAAO,CAAC,YAAD,EAAe;AAC3CY,QAAAA,MAAM,EAAE,MADmC;AAE3CN,QAAAA,IAAI,EAAJA;AAF2C,OAAf,CAA9B;AAKA,UAAMO,OAAO,SAASF,QAAQ,CAACG,IAAT,EAAtB;;AAEA,UAAID,OAAO,CAACE,MAAR,KAAmB,QAAvB,EAAiC;AAC/BC,QAAAA,GAAG,CAACC,eAAJ,CAAoB;AAClBC,UAAAA,OAAO,EAAE,gDADS;AAElBC,UAAAA,cAAc,EAAE;AAFE,SAApB;AAID,OALD,MAKO,IAAIN,OAAO,CAACE,MAAR,KAAmB,IAAvB,EAA6B;AAClCC,QAAAA,GAAG,CAACC,eAAJ,CAAoB;AAClBC,UAAAA,OAAO,EACL,wEAFgB;AAGlBC,UAAAA,cAAc,EAAE;AAHE,SAApB;AAKD,OANM,MAMA;AACLH,QAAAA,GAAG,CAACC,eAAJ,CAAoB;AAClBC,UAAAA,OAAO,kCAA2BX,IAAI,CAACC,SAAL,CAAeK,OAAf,CAA3B,CADW;AAElBM,UAAAA,cAAc,EAAE;AAFE,SAApB;AAID;AACF,KAzBD,CAyBE,OAAOC,KAAP,EAAc;AACdJ,MAAAA,GAAG,CAACC,eAAJ,CAAoB;AAClBC,QAAAA,OAAO,EAAEE,KADS;AAElBD,QAAAA,cAAc,EAAE;AAFE,OAApB;AAID;;AAEDE,IAAAA,mBAAmB;AACpB,G;;;;AAKD,OAAO,SAASA,mBAAT,GAA+B;AACpC,MAAMC,cAAc,GAAGN,GAAG,CAACO,QAAJ,CAAaC,sBAAb,CACrB,2BADqB,EAErB,CAFqB,CAAvB;AAGAF,EAAAA,cAAc,CAACG,SAAf,CAAyBC,MAAzB,CAAgC,QAAhC;;AAEA,MAAI,CAACJ,cAAc,CAACG,SAAf,CAAyBE,QAAzB,CAAkC,QAAlC,CAAL,EAAkD;AAChDX,IAAAA,GAAG,CAACY,MAAJ,CAAWC,QAAX,CAAoB,CAApB,EAAuB,CAAvB;AACAb,IAAAA,GAAG,CAACO,QAAJ,CAAajB,IAAb,CAAkBwB,KAAlB,CAAwBC,MAAxB,GAAiC,OAAjC;AACAf,IAAAA,GAAG,CAACO,QAAJ,CAAajB,IAAb,CAAkBwB,KAAlB,CAAwBE,SAAxB,GAAoC,QAApC;AACD,GAJD,MAIO;AACLhB,IAAAA,GAAG,CAACO,QAAJ,CAAajB,IAAb,CAAkBwB,KAAlB,CAAwBC,MAAxB,GAAiC,SAAjC;AACAf,IAAAA,GAAG,CAACO,QAAJ,CAAajB,IAAb,CAAkBwB,KAAlB,CAAwBE,SAAxB,GAAoC,SAApC;AACD;AACF;AAED;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,QAAjC,EAA2C;AAChD;AACA,MAAMC,YAAY,GAAGZ,QAAQ,CAACa,cAAT,CAAwB,eAAxB,CAArB;;AAEA,MAAI,CAACD,YAAL,EAAmB;AACjB;AACD;;AAEDvC,EAAAA,MAAM,CACJ,EAAC,aAAD;AAAe,IAAA,QAAQ,EAAEsC;AAAzB,IADI,EAEJX,QAAQ,CAACC,sBAAT,CAAgC,2BAAhC,EAA6D,CAA7D,CAFI,CAAN;AAID;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASa,aAAT,QAA0D;AAAA,MAAjCC,mBAAiC,SAAjCA,mBAAiC;AAAA,MAAZJ,QAAY,SAAZA,QAAY;;AAAA,kBACTrC,QAAQ,CAAC,KAAD,CADC;AAAA;AAAA,MACxD0C,sBADwD;AAAA,MAChCC,mBADgC;;AAE/D,MAAMC,WAAW,GAAG3C,MAAM,CAAC,IAAD,CAA1B;AAEA,SACE;AACE,mBAAY,iBADd;AAEE,aAAM;AAFR,KAIE;AAAK,aAAM;AAAX,KACE;AAAQ,aAAM;AAAd,KACE;AAAI,aAAM;AAAV,iBADF,EAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,aAAM,0EAFR;AAGE,IAAA,OAAO,EAAEuB;AAHX,KAKE;AACE,IAAA,KAAK,EAAC,IADR;AAEE,IAAA,MAAM,EAAC,IAFT;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,aAAM,cAJR;AAKE,IAAA,KAAK,EAAC;AALR,KAOE;AAAM,IAAA,CAAC,EAAC;AAAR,IAPF,CALF,CAFF,CADF,EAmBE;AAAK,aAAM;AAAX,KACE;AAAK,aAAM;AAAX,KACE,uFADF,EAKE;AAAK,aAAM;AAAX,KACE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,EAAE,EAAC,WAFL;AAGE,IAAA,GAAG,EAAEoB,WAHP;AAIE,IAAA,IAAI,EAAC,WAJP;AAKE,aAAM,eALR;AAME,yBAAmBP,QANrB;AAOE,qBAAc,OAPhB;AAQE,2BAAoB,MARtB;AASE,IAAA,OAAO,EAAEK,sBATX;AAUE,IAAA,OAAO,EAAE,iBAACG,KAAD,EAAW;AAAA,UACVC,MADU,GACCD,KADD,CACVC,MADU;AAGlBH,MAAAA,mBAAmB,CAACG,MAAM,CAACC,OAAR,CAAnB;AACD;AAdH,IADF,EAiBE;AAAO,IAAA,OAAO,EAAC,WAAf;AAA2B,aAAM;AAAjC,mDAEE;AAAG,aAAM;AAAT,gIAFF,CAjBF,CALF,EA8BE,aACE;AACE,IAAA,IAAI,8BACFN,mBAAmB,aACZf,QAAQ,CAACsB,QAAT,CAAkBC,MADN,SACeR,mBADf,IAEff,QAAQ,CAACsB,QAHX,CADN;AAME,IAAA,SAAS,EAAC;AANZ,0CADF,CA9BF,EA0CE,eACE,EAAC,MAAD;AACE,aAAM,sCADR;AAEE,IAAA,EAAE,EAAC,0BAFL;AAGE,IAAA,OAAO,EAAE,iBAACE,MAAD,EAAY;AAAA,UAEGC,kBAFH,GAGfP,WAHe,CAEjBQ,OAFiB,CAENC,OAFM;AAKnBhD,MAAAA,eAAe,CAAC8C,kBAAD,CAAf;AACAR,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAVH;AAWE,IAAA,QAAQ,EAAE,CAACD;AAXb,sBADF,EAgBE,EAAC,MAAD;AACE,aAAM,oCADR;AAEE,IAAA,EAAE,EAAC,yBAFL;AAGE,IAAA,OAAO,EAAElB;AAHX,cAhBF,CA1CF,CADF,CAnBF,CAJF,EA6FE;AACE,IAAA,IAAI,EAAC,cADP;AAEE,aAAM,wBAFR;AAGE,IAAA,OAAO,EAAEA,mBAHX;AAIE,IAAA,OAAO,EAAEA;AAJX,IA7FF,CADF;AAsGD;AAEDgB,aAAa,CAACc,WAAd,GAA4B,eAA5B;AACAd,aAAa,CAACe,SAAd,GAA0B;AACxBC,EAAAA,aAAa,EAAEtD,SAAS,CAACuD,MADD;AAExBpB,EAAAA,QAAQ,EAAEnC,SAAS,CAACwD,MAAV,CAAiBC;AAFH,CAA1B","sourcesContent":["import { h, render } from 'preact';\nimport { useState, useRef } from 'preact/hooks';\nimport PropTypes from 'prop-types';\nimport { request } from '../utilities/http';\nimport { Button } from '@crayons/Button/Button';\n\nasync function confirmFlagUser({ reactableType, category, reactableId }) {\n  const body = JSON.stringify({\n    reactable_type: reactableType,\n    category,\n    reactable_id: reactableId,\n  });\n\n  try {\n    const response = await request('/reactions', {\n      method: 'POST',\n      body,\n    });\n\n    const outcome = await response.json();\n\n    if (outcome.result === 'create') {\n      top.addSnackbarItem({\n        message: 'All posts by this author will be less visible.',\n        addCloseButton: true,\n      });\n    } else if (outcome.result === null) {\n      top.addSnackbarItem({\n        message:\n          \"It seems you've already reduced the visibility of this author's posts.\",\n        addCloseButton: true,\n      });\n    } else {\n      top.addSnackbarItem({\n        message: `Response from server: ${JSON.stringify(outcome)}`,\n        addCloseButton: true,\n      });\n    }\n  } catch (error) {\n    top.addSnackbarItem({\n      message: error,\n      addCloseButton: true,\n    });\n  }\n\n  toggleFlagUserModal();\n}\n\n/**\n * Shows or hides the flag user modal.\n */\nexport function toggleFlagUserModal() {\n  const modalContainer = top.document.getElementsByClassName(\n    'flag-user-modal-container',\n  )[0];\n  modalContainer.classList.toggle('hidden');\n\n  if (!modalContainer.classList.contains('hidden')) {\n    top.window.scrollTo(0, 0);\n    top.document.body.style.height = '100vh';\n    top.document.body.style.overflowY = 'hidden';\n  } else {\n    top.document.body.style.height = 'inherit';\n    top.document.body.style.overflowY = 'inherit';\n  }\n}\n\n/**\n * Initializes the flag user modal for the given author ID.\n *\n * @param {number} authorId\n */\nexport function initializeFlagUserModal(authorId) {\n  // Check whether context is ModCenter or Friday-Night-Mode\n  const modContainer = document.getElementById('mod-container');\n\n  if (!modContainer) {\n    return;\n  }\n\n  render(\n    <FlagUserModal authorId={authorId} />,\n    document.getElementsByClassName('flag-user-modal-container')[0],\n  );\n}\n\n/**\n * A modal for flagging a user and their content. This can be used in the moderation\n * or on an article page.\n *\n * @param {string} props.modCenterUrl (optional) The article URL loaded when in the moderation center.\n * @param {number} props.authorId The author ID associated to the content being moderated.\n */\nexport function FlagUserModal({ modCenterArticleUrl, authorId }) {\n  const [isConfirmButtonEnabled, enableConfirmButton] = useState(false);\n  const vomitAllRef = useRef(null);\n\n  return (\n    <div\n      data-testid=\"flag-user-modal\"\n      class=\"crayons-modal crayons-modal--s absolute flag-user-modal\"\n    >\n      <div class=\"crayons-modal__box\">\n        <header class=\"crayons-modal__box__header flag-user-modal-header\">\n          <h2 class=\"crayons-modal__box__header__title\">Flag User</h2>\n          <button\n            type=\"button\"\n            class=\"crayons-btn crayons-btn--icon crayons-btn--ghost modal-header-close-icon\"\n            onClick={toggleFlagUserModal}\n          >\n            <svg\n              width=\"24\"\n              height=\"24\"\n              viewBox=\"0 0 24 24\"\n              class=\"crayons-icon\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M12 10.586l4.95-4.95 1.414 1.414-4.95 4.95 4.95 4.95-1.414 1.414-4.95-4.95-4.95 4.95-1.414-1.414 4.95-4.95-4.95-4.95L7.05 5.636l4.95 4.95z\" />\n            </svg>\n          </button>\n        </header>\n        <div class=\"crayons-modal__box__body\">\n          <div class=\"grid gap-4\">\n            <p>\n              Thanks for keeping DEV safe. Here is what you can do to flag this\n              user:\n            </p>\n            <div class=\"crayons-field crayons-field--radio\">\n              <input\n                type=\"radio\"\n                id=\"vomit-all\"\n                ref={vomitAllRef}\n                name=\"flag-user\"\n                class=\"crayons-radio\"\n                data-reactable-id={authorId}\n                data-category=\"vomit\"\n                data-reactable-type=\"User\"\n                checked={isConfirmButtonEnabled}\n                onClick={(event) => {\n                  const { target } = event;\n\n                  enableConfirmButton(target.checked);\n                }}\n              />\n              <label htmlFor=\"vomit-all\" class=\"crayons-field__label\">\n                Make all posts by this author less visible\n                <p class=\"crayons-field__description\">\n                  This author consistently posts content that violates DEV's\n                  code of conduct because it is harassing, offensive or spammy.\n                </p>\n              </label>\n            </div>\n            <p>\n              <a\n                href={`/report-abuse?url=${\n                  modCenterArticleUrl\n                    ? `${document.location.origin}${modCenterArticleUrl}`\n                    : document.location\n                }`}\n                className=\"crayons-link crayons-link--brand\"\n              >\n                Report other inappropriate conduct\n              </a>\n            </p>\n            <div>\n              <Button\n                class=\"crayons-btn crayons-btn--danger mr-2\"\n                id=\"confirm-flag-user-action\"\n                onClick={(_event) => {\n                  const {\n                    current: { dataset: adminVomitReaction },\n                  } = vomitAllRef;\n\n                  confirmFlagUser(adminVomitReaction);\n                  enableConfirmButton(false);\n                }}\n                disabled={!isConfirmButtonEnabled}\n              >\n                Confirm action\n              </Button>\n              <Button\n                class=\"crayons-btn crayons-btn--secondary\"\n                id=\"cancel-flag-user-action\"\n                onClick={toggleFlagUserModal}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        role=\"presentation\"\n        class=\"crayons-modal__overlay\"\n        onClick={toggleFlagUserModal}\n        onKeyUp={toggleFlagUserModal}\n      />\n    </div>\n  );\n}\n\nFlagUserModal.displayName = 'FlagUserModal';\nFlagUserModal.propTypes = {\n  moderationUrl: PropTypes.string,\n  authorId: PropTypes.number.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}