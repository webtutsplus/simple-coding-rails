{"ast":null,"code":"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { h, Fragment } from 'preact';\nimport PropTypes from 'prop-types';\nimport { useState } from 'preact/hooks';\nimport { reportAbuse, blockUser } from '../actions/requestActions';\nimport { addSnackbarItem } from '../../Snackbar';\nimport { Button, FormField, RadioButton } from '@crayons';\n/**\n * This component render the report abuse\n *\n * @param {object} props\n * @param {object} props.data\n * @param {function} props.closeReportAbuseForm\n *\n * @component\n *\n * @example\n *\n * <ReportAbuse\n *  data={data}\n *  closeReportAbuseForm={closeReportAbuseForm}\n * />\n *\n */\n\nfunction ReportAbuse(_ref) {\n  var data = _ref.data,\n      closeReportAbuseForm = _ref.closeReportAbuseForm;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var handleChange = function handleChange(e) {\n    setCategory(e.target.value);\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var response = yield reportAbuse(data.message, 'connect', category, data.user_id);\n      var success = response.success,\n          message = response.message;\n\n      if (success) {\n        var confirmBlock = window.confirm(\"The message will be reported.\\n\\nWould you like to block this person as well?\\n\\nThis will:\\n      - prevent them from commenting on your posts\\n      - block all notifications from them\\n      - prevent them from messaging you via chat\");\n\n        if (confirmBlock) {\n          var _response = yield blockUser(data.user_id);\n\n          if (_response.result === 'blocked') {\n            addSnackbarItem({\n              message: 'Your report has been submitted and the user has been blocked'\n            });\n          }\n        } else {\n          addSnackbarItem({\n            message: 'Your report has been submitted.'\n          });\n        }\n\n        closeReportAbuseForm();\n      } else {\n        addSnackbarItem({\n          message: message\n        });\n      }\n    });\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return h(Fragment, null, h(\"section\", {\n    className: \"mt-7 p-4 grid gap-2 crayons-card mb-4\"\n  }, h(\"h1\", {\n    className: \"lh-tight mb-4 mt-0\"\n  }, \"Report Abuse\"), h(\"p\", null, \"Thank you for reporting any abuse that violates our\", ' ', h(\"a\", {\n    href: \"/code-of-conduct\"\n  }, \"code of conduct\"), \" or\", ' ', h(\"a\", {\n    href: \"/terms\"\n  }, \"terms and conditions\"), \". We continue to try to make this environment a great one for everybody.\"), h(\"fieldset\", {\n    className: \"report__abuse-options p-4 justify-between\"\n  }, h(\"legend\", null, \"Why is this content inappropriate?\"), h(FormField, {\n    variant: \"radio\"\n  }, h(RadioButton, {\n    id: \"rude_or_vulgar\",\n    name: \"rude_or_vulgar\",\n    value: \"rude or vulgar\",\n    checked: category === 'rude or vulgar',\n    onClick: handleChange\n  }), h(\"label\", {\n    htmlFor: \"rude_or_vulgar\",\n    className: \"crayons-field__label\"\n  }, \"Rude or vulgar\")), h(FormField, {\n    variant: \"radio\"\n  }, h(RadioButton, {\n    id: \"harassment\",\n    name: \"harassment\",\n    value: \"harassment\",\n    checked: category === 'harassment',\n    onClick: handleChange\n  }), h(\"label\", {\n    htmlFor: \"harassment\",\n    className: \"crayons-field__label\"\n  }, \"Harassment or hate speech\")), h(FormField, {\n    variant: \"radio\"\n  }, h(RadioButton, {\n    id: \"spam\",\n    name: \"spam\",\n    value: \"spam\",\n    checked: category === 'spam',\n    onClick: handleChange\n  }), h(\"label\", {\n    htmlFor: \"spam\",\n    className: \"crayons-field__label\"\n  }, \"Spam or copyright issue\")), h(FormField, {\n    variant: \"radio\"\n  }, h(RadioButton, {\n    id: \"listings\",\n    name: \"listings\",\n    value: \"listings\",\n    checked: category === 'listings',\n    onClick: handleChange\n  }), h(\"label\", {\n    htmlFor: \"listings\",\n    className: \"crayons-field__label\"\n  }, \"Inappropriate listings message/category\")), h(\"h2\", null, \"Message to Report\"), h(\"div\", {\n    className: \"reported__message p-2 mt-2 mb-3\" // eslint-disable-next-line react/no-danger\n    ,\n    dangerouslySetInnerHTML: {\n      __html: data.message\n    }\n  }), h(Button, {\n    disabled: category === null,\n    size: \"s\",\n    onClick: handleSubmit\n  }, \"Report Message\"))));\n}\n\nReportAbuse.propTypes = {\n  resource: PropTypes.shape({\n    data: PropTypes.shape({\n      user_id: PropTypes.number.isRequired,\n      message: PropTypes.element.isRequired\n    })\n  }).isRequired\n};\nexport default ReportAbuse;","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/chat/ReportAbuse/index.jsx"],"names":["h","Fragment","PropTypes","useState","reportAbuse","blockUser","addSnackbarItem","Button","FormField","RadioButton","ReportAbuse","data","closeReportAbuseForm","category","setCategory","handleChange","e","target","value","handleSubmit","response","message","user_id","success","confirmBlock","window","confirm","result","__html","propTypes","resource","shape","number","isRequired","element"],"mappings":"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","sourcesContent":["import { h, Fragment } from 'preact';\nimport PropTypes from 'prop-types';\nimport { useState } from 'preact/hooks';\nimport { reportAbuse, blockUser } from '../actions/requestActions';\nimport { addSnackbarItem } from '../../Snackbar';\nimport { Button, FormField, RadioButton } from '@crayons';\n\n/**\n * This component render the report abuse\n *\n * @param {object} props\n * @param {object} props.data\n * @param {function} props.closeReportAbuseForm\n *\n * @component\n *\n * @example\n *\n * <ReportAbuse\n *  data={data}\n *  closeReportAbuseForm={closeReportAbuseForm}\n * />\n *\n */\nfunction ReportAbuse({ data, closeReportAbuseForm }) {\n  const [category, setCategory] = useState(null);\n\n  const handleChange = (e) => {\n    setCategory(e.target.value);\n  };\n\n  const handleSubmit = async () => {\n    const response = await reportAbuse(\n      data.message,\n      'connect',\n      category,\n      data.user_id,\n    );\n    const { success, message } = response;\n    if (success) {\n      const confirmBlock = window.confirm(\n        `The message will be reported.\\n\\nWould you like to block this person as well?\\n\\nThis will:\n      - prevent them from commenting on your posts\n      - block all notifications from them\n      - prevent them from messaging you via chat`,\n      );\n\n      if (confirmBlock) {\n        const response = await blockUser(data.user_id);\n        if (response.result === 'blocked') {\n          addSnackbarItem({\n            message:\n              'Your report has been submitted and the user has been blocked',\n          });\n        }\n      } else {\n        addSnackbarItem({ message: 'Your report has been submitted.' });\n      }\n      closeReportAbuseForm();\n    } else {\n      addSnackbarItem({ message });\n    }\n  };\n\n  return (\n    <Fragment>\n      <section className=\"mt-7 p-4 grid gap-2 crayons-card mb-4\">\n        <h1 className=\"lh-tight mb-4 mt-0\">Report Abuse</h1>\n        <p>\n          Thank you for reporting any abuse that violates our{' '}\n          <a href=\"/code-of-conduct\">code of conduct</a> or{' '}\n          <a href=\"/terms\">terms and conditions</a>. We continue to try to make\n          this environment a great one for everybody.\n        </p>\n        <fieldset className=\"report__abuse-options p-4 justify-between\">\n          <legend>Why is this content inappropriate?</legend>\n          <FormField variant=\"radio\">\n            <RadioButton\n              id=\"rude_or_vulgar\"\n              name=\"rude_or_vulgar\"\n              value=\"rude or vulgar\"\n              checked={category === 'rude or vulgar'}\n              onClick={handleChange}\n            />\n            <label htmlFor=\"rude_or_vulgar\" className=\"crayons-field__label\">\n              Rude or vulgar\n            </label>\n          </FormField>\n          <FormField variant=\"radio\">\n            <RadioButton\n              id=\"harassment\"\n              name=\"harassment\"\n              value=\"harassment\"\n              checked={category === 'harassment'}\n              onClick={handleChange}\n            />\n            <label htmlFor=\"harassment\" className=\"crayons-field__label\">\n              Harassment or hate speech\n            </label>\n          </FormField>\n          <FormField variant=\"radio\">\n            <RadioButton\n              id=\"spam\"\n              name=\"spam\"\n              value=\"spam\"\n              checked={category === 'spam'}\n              onClick={handleChange}\n            />\n            <label htmlFor=\"spam\" className=\"crayons-field__label\">\n              Spam or copyright issue\n            </label>\n          </FormField>\n          <FormField variant=\"radio\">\n            <RadioButton\n              id=\"listings\"\n              name=\"listings\"\n              value=\"listings\"\n              checked={category === 'listings'}\n              onClick={handleChange}\n            />\n            <label htmlFor=\"listings\" className=\"crayons-field__label\">\n              Inappropriate listings message/category\n            </label>\n          </FormField>\n          <h2>Message to Report</h2>\n          <div\n            className=\"reported__message p-2 mt-2 mb-3\"\n            // eslint-disable-next-line react/no-danger\n            dangerouslySetInnerHTML={{ __html: data.message }}\n          />\n          <Button disabled={category === null} size=\"s\" onClick={handleSubmit}>\n            Report Message\n          </Button>\n        </fieldset>\n      </section>\n    </Fragment>\n  );\n}\n\nReportAbuse.propTypes = {\n  resource: PropTypes.shape({\n    data: PropTypes.shape({\n      user_id: PropTypes.number.isRequired,\n      message: PropTypes.element.isRequired,\n    }),\n  }).isRequired,\n};\n\nexport default ReportAbuse;\n"]},"metadata":{},"sourceType":"module"}