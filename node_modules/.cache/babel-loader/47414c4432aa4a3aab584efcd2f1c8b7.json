{"ast":null,"code":"import { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport { Button } from '@crayons';\n\nfunction linksToMarkdownForm(imageLinks) {\n  return imageLinks.map(function (imageLink) {\n    return \"![Alt Text](\".concat(imageLink, \")\");\n  }).join('\\n');\n}\n\nvar CopyIcon = function CopyIcon() {\n  return h(\"svg\", {\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    className: \"crayons-icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    role: \"img\",\n    \"aria-labelledby\": \"fc5f15add1e114844f5e\"\n  }, h(\"title\", {\n    id: \"fc5f15add1e114844f5e\"\n  }, \"Copy Markdown for image\"), h(\"path\", {\n    d: \"M7 6V3a1 1 0 011-1h12a1 1 0 011 1v14a1 1 0 01-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1 1 0 013 21l.003-14c0-.552.45-1 1.007-1H7zm2 0h8v10h2V4H9v2zm-2 5v2h6v-2H7zm0 4v2h6v-2H7z\"\n  }));\n};\n\nCopyIcon.displayName = 'CopyIcon';\nexport var ClipboardButton = function ClipboardButton(_ref) {\n  var onCopy = _ref.onCopy,\n      imageUrls = _ref.imageUrls,\n      _ref$showCopyMessage = _ref.showCopyMessage,\n      showCopyMessage = _ref$showCopyMessage === void 0 ? false : _ref$showCopyMessage;\n  return h(\"clipboard-copy\", {\n    onClick: onCopy,\n    \"for\": \"image-markdown-copy-link-input\",\n    \"aria-live\": \"polite\",\n    className: \"flex items-center flex-1\",\n    \"aria-controls\": \"image-markdown-copy-link-announcer\"\n  }, h(\"input\", {\n    \"data-testid\": \"markdown-copy-link\",\n    type: \"text\",\n    className: \"crayons-textfield mr-2\",\n    id: \"image-markdown-copy-link-input\",\n    readOnly: \"true\",\n    value: linksToMarkdownForm(imageUrls)\n  }), h(Button, {\n    className: \"spec__image-markdown-copy whitespace-nowrap fw-normal\",\n    variant: \"ghost\",\n    contentType: \"icon-left\",\n    icon: CopyIcon\n  }, showCopyMessage ? 'Copied!' : 'Copy...'));\n};\nClipboardButton.displayName = 'ClipboardButton';\nClipboardButton.propTypes = {\n  onCopy: PropTypes.func.isRequired,\n  imageUrls: PropTypes.arrayOf(PropTypes.string).isRequired,\n  showCopyMessage: PropTypes.bool.isRequired\n};","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/article-form/components/ClipboardButton.jsx"],"names":["h","PropTypes","Button","linksToMarkdownForm","imageLinks","map","imageLink","join","CopyIcon","displayName","ClipboardButton","onCopy","imageUrls","showCopyMessage","propTypes","func","isRequired","arrayOf","string","bool"],"mappings":"AAAA,SAASA,CAAT,QAAkB,QAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,SAASC,mBAAT,CAA6BC,UAA7B,EAAyC;AACvC,SAAOA,UAAU,CAACC,GAAX,CAAe,UAACC,SAAD;AAAA,iCAA8BA,SAA9B;AAAA,GAAf,EAA2DC,IAA3D,CAAgE,IAAhE,CAAP;AACD;;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SACf;AACE,IAAA,KAAK,EAAC,IADR;AAEE,IAAA,MAAM,EAAC,IAFT;AAGE,IAAA,OAAO,EAAC,WAHV;AAIE,IAAA,SAAS,EAAC,cAJZ;AAKE,IAAA,KAAK,EAAC,4BALR;AAME,IAAA,IAAI,EAAC,KANP;AAOE,uBAAgB;AAPlB,KASE;AAAO,IAAA,EAAE,EAAC;AAAV,+BATF,EAUE;AAAM,IAAA,CAAC,EAAC;AAAR,IAVF,CADe;AAAA,CAAjB;;AAeAA,QAAQ,CAACC,WAAT,GAAuB,UAAvB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAC7BC,MAD6B,QAC7BA,MAD6B;AAAA,MAE7BC,SAF6B,QAE7BA,SAF6B;AAAA,kCAG7BC,eAH6B;AAAA,MAG7BA,eAH6B,qCAGX,KAHW;AAAA,SAK7B;AACE,IAAA,OAAO,EAAEF,MADX;AAEE,WAAI,gCAFN;AAGE,iBAAU,QAHZ;AAIE,IAAA,SAAS,EAAC,0BAJZ;AAKE,qBAAc;AALhB,KAOE;AACE,mBAAY,oBADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAIE,IAAA,EAAE,EAAC,gCAJL;AAKE,IAAA,QAAQ,EAAC,MALX;AAME,IAAA,KAAK,EAAER,mBAAmB,CAACS,SAAD;AAN5B,IAPF,EAeE,EAAC,MAAD;AACE,IAAA,SAAS,EAAC,uDADZ;AAEE,IAAA,OAAO,EAAC,OAFV;AAGE,IAAA,WAAW,EAAC,WAHd;AAIE,IAAA,IAAI,EAAEJ;AAJR,KAMGK,eAAe,GAAG,SAAH,GAAe,SANjC,CAfF,CAL6B;AAAA,CAAxB;AA+BPH,eAAe,CAACD,WAAhB,GAA8B,iBAA9B;AAEAC,eAAe,CAACI,SAAhB,GAA4B;AAC1BH,EAAAA,MAAM,EAAEV,SAAS,CAACc,IAAV,CAAeC,UADG;AAE1BJ,EAAAA,SAAS,EAAEX,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,MAA5B,EAAoCF,UAFrB;AAG1BH,EAAAA,eAAe,EAAEZ,SAAS,CAACkB,IAAV,CAAeH;AAHN,CAA5B","sourcesContent":["import { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport { Button } from '@crayons';\n\nfunction linksToMarkdownForm(imageLinks) {\n  return imageLinks.map((imageLink) => `![Alt Text](${imageLink})`).join('\\n');\n}\n\nconst CopyIcon = () => (\n  <svg\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    className=\"crayons-icon\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    role=\"img\"\n    aria-labelledby=\"fc5f15add1e114844f5e\"\n  >\n    <title id=\"fc5f15add1e114844f5e\">Copy Markdown for image</title>\n    <path d=\"M7 6V3a1 1 0 011-1h12a1 1 0 011 1v14a1 1 0 01-1 1h-3v3c0 .552-.45 1-1.007 1H4.007A1 1 0 013 21l.003-14c0-.552.45-1 1.007-1H7zm2 0h8v10h2V4H9v2zm-2 5v2h6v-2H7zm0 4v2h6v-2H7z\" />\n  </svg>\n);\n\nCopyIcon.displayName = 'CopyIcon';\n\nexport const ClipboardButton = ({\n  onCopy,\n  imageUrls,\n  showCopyMessage = false,\n}) => (\n  <clipboard-copy\n    onClick={onCopy}\n    for=\"image-markdown-copy-link-input\"\n    aria-live=\"polite\"\n    className=\"flex items-center flex-1\"\n    aria-controls=\"image-markdown-copy-link-announcer\"\n  >\n    <input\n      data-testid=\"markdown-copy-link\"\n      type=\"text\"\n      className=\"crayons-textfield mr-2\"\n      id=\"image-markdown-copy-link-input\"\n      readOnly=\"true\"\n      value={linksToMarkdownForm(imageUrls)}\n    />\n    <Button\n      className=\"spec__image-markdown-copy whitespace-nowrap fw-normal\"\n      variant=\"ghost\"\n      contentType=\"icon-left\"\n      icon={CopyIcon}\n    >\n      {showCopyMessage ? 'Copied!' : 'Copy...'}\n    </Button>\n  </clipboard-copy>\n);\n\nClipboardButton.displayName = 'ClipboardButton';\n\nClipboardButton.propTypes = {\n  onCopy: PropTypes.func.isRequired,\n  imageUrls: PropTypes.arrayOf(PropTypes.string).isRequired,\n  showCopyMessage: PropTypes.bool.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}