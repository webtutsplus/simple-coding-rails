{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport { organizationPropType } from '../common-prop-types';\n\nvar orgOptions = function orgOptions(organizations, organizationId, emptyLabel) {\n  var orgs = organizations.map(function (organization) {\n    if (organizationId === organization.id) {\n      return h(\"option\", {\n        value: organization.id,\n        selected: true\n      }, organization.name);\n    }\n\n    return h(\"option\", {\n      value: organization.id\n    }, organization.name);\n  });\n  var nullOrgOption = organizationId === null ? h(\"option\", {\n    value: \"\",\n    selected: true\n  }, emptyLabel) : h(\"option\", {\n    value: \"\"\n  }, emptyLabel);\n  return [nullOrgOption].concat(_toConsumableArray(orgs));\n};\n\nexport var OrganizationPicker = function OrganizationPicker(_ref) {\n  var name = _ref.name,\n      id = _ref.id,\n      className = _ref.className,\n      organizations = _ref.organizations,\n      organizationId = _ref.organizationId,\n      onToggle = _ref.onToggle,\n      emptyLabel = _ref.emptyLabel;\n  return h(\"select\", {\n    \"aria-label\": \"Select an organization\",\n    name: name,\n    id: id,\n    className: className,\n    onBlur: onToggle\n  }, orgOptions(organizations, organizationId, emptyLabel));\n};\nOrganizationPicker.defaultProps = {\n  emptyLabel: 'None'\n};\nOrganizationPicker.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  emptyLabel: PropTypes.string,\n  onToggle: PropTypes.func.isRequired,\n  organizationId: PropTypes.number.isRequired,\n  organizations: PropTypes.arrayOf(organizationPropType).isRequired\n};","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/organization/OrganizationPicker.jsx"],"names":["h","PropTypes","organizationPropType","orgOptions","organizations","organizationId","emptyLabel","orgs","map","organization","id","name","nullOrgOption","OrganizationPicker","className","onToggle","defaultProps","propTypes","string","isRequired","func","number","arrayOf"],"mappings":";;;;;;;;;;;;AAAA,SAASA,CAAT,QAAkB,QAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,oBAAT,QAAqC,sBAArC;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,aAAD,EAAgBC,cAAhB,EAAgCC,UAAhC,EAA+C;AAChE,MAAMC,IAAI,GAAGH,aAAa,CAACI,GAAd,CAAkB,UAACC,YAAD,EAAkB;AAC/C,QAAIJ,cAAc,KAAKI,YAAY,CAACC,EAApC,EAAwC;AACtC,aACE;AAAQ,QAAA,KAAK,EAAED,YAAY,CAACC,EAA5B;AAAgC,QAAA,QAAQ;AAAxC,SACGD,YAAY,CAACE,IADhB,CADF;AAKD;;AACD,WAAO;AAAQ,MAAA,KAAK,EAAEF,YAAY,CAACC;AAA5B,OAAiCD,YAAY,CAACE,IAA9C,CAAP;AACD,GATY,CAAb;AAUA,MAAMC,aAAa,GACjBP,cAAc,KAAK,IAAnB,GACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAiB,IAAA,QAAQ;AAAzB,KACGC,UADH,CADF,GAKE;AAAQ,IAAA,KAAK,EAAC;AAAd,KAAkBA,UAAlB,CANJ;AASA,UAAQM,aAAR,4BAA0BL,IAA1B;AACD,CArBD;;AAuBA,OAAO,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAChCF,IADgC,QAChCA,IADgC;AAAA,MAEhCD,EAFgC,QAEhCA,EAFgC;AAAA,MAGhCI,SAHgC,QAGhCA,SAHgC;AAAA,MAIhCV,aAJgC,QAIhCA,aAJgC;AAAA,MAKhCC,cALgC,QAKhCA,cALgC;AAAA,MAMhCU,QANgC,QAMhCA,QANgC;AAAA,MAOhCT,UAPgC,QAOhCA,UAPgC;AAAA,SAShC;AACE,kBAAW,wBADb;AAEE,IAAA,IAAI,EAAEK,IAFR;AAGE,IAAA,EAAE,EAAED,EAHN;AAIE,IAAA,SAAS,EAAEI,SAJb;AAKE,IAAA,MAAM,EAAEC;AALV,KAOGZ,UAAU,CAACC,aAAD,EAAgBC,cAAhB,EAAgCC,UAAhC,CAPb,CATgC;AAAA,CAA3B;AAoBPO,kBAAkB,CAACG,YAAnB,GAAkC;AAChCV,EAAAA,UAAU,EAAE;AADoB,CAAlC;AAIAO,kBAAkB,CAACI,SAAnB,GAA+B;AAC7BN,EAAAA,IAAI,EAAEV,SAAS,CAACiB,MAAV,CAAiBC,UADM;AAE7BT,EAAAA,EAAE,EAAET,SAAS,CAACiB,MAAV,CAAiBC,UAFQ;AAG7BL,EAAAA,SAAS,EAAEb,SAAS,CAACiB,MAAV,CAAiBC,UAHC;AAI7Bb,EAAAA,UAAU,EAAEL,SAAS,CAACiB,MAJO;AAK7BH,EAAAA,QAAQ,EAAEd,SAAS,CAACmB,IAAV,CAAeD,UALI;AAM7Bd,EAAAA,cAAc,EAAEJ,SAAS,CAACoB,MAAV,CAAiBF,UANJ;AAO7Bf,EAAAA,aAAa,EAAEH,SAAS,CAACqB,OAAV,CAAkBpB,oBAAlB,EAAwCiB;AAP1B,CAA/B","sourcesContent":["import { h } from 'preact';\nimport PropTypes from 'prop-types';\nimport { organizationPropType } from '../common-prop-types';\n\nconst orgOptions = (organizations, organizationId, emptyLabel) => {\n  const orgs = organizations.map((organization) => {\n    if (organizationId === organization.id) {\n      return (\n        <option value={organization.id} selected>\n          {organization.name}\n        </option>\n      );\n    }\n    return <option value={organization.id}>{organization.name}</option>;\n  });\n  const nullOrgOption =\n    organizationId === null ? (\n      <option value=\"\" selected>\n        {emptyLabel}\n      </option>\n    ) : (\n      <option value=\"\">{emptyLabel}</option>\n    );\n\n  return [nullOrgOption, ...orgs];\n};\n\nexport const OrganizationPicker = ({\n  name,\n  id,\n  className,\n  organizations,\n  organizationId,\n  onToggle,\n  emptyLabel,\n}) => (\n  <select\n    aria-label=\"Select an organization\"\n    name={name}\n    id={id}\n    className={className}\n    onBlur={onToggle}\n  >\n    {orgOptions(organizations, organizationId, emptyLabel)}\n  </select>\n);\n\nOrganizationPicker.defaultProps = {\n  emptyLabel: 'None',\n};\n\nOrganizationPicker.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired,\n  emptyLabel: PropTypes.string,\n  onToggle: PropTypes.func.isRequired,\n  organizationId: PropTypes.number.isRequired,\n  organizations: PropTypes.arrayOf(organizationPropType).isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}