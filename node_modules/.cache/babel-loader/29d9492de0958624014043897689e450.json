{"ast":null,"code":"/**\n * How many listings to show per page\n * @constant {number}\n */\nexport var LISTING_PAGE_SIZE = 75;\nexport var MATCH_LISTING = ['single-listing-container__inner', 'listing-filters', 'listings-modal-background', 'close-listing-modal'];\nexport function updateListings(listings) {\n  var fullListings = [];\n  listings.forEach(function (listing) {\n    if (listing.bumped_at) {\n      fullListings.push(listing);\n    }\n  });\n  return fullListings;\n}\nexport function getQueryParams() {\n  var queryString = document.location.search;\n  queryString = queryString.split('+').join(' ');\n  var params = {};\n  var tokens;\n  var re = /[?&]?([^=]+)=([^&]*)/g; // eslint-disable-next-line no-cond-assign\n\n  while (tokens = re.exec(queryString)) {\n    params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n  }\n\n  return params;\n}\n\nfunction resizeMasonryItem(item) {\n  /* Get the grid object, its row-gap, and the size of its implicit rows */\n  var grid = document.getElementsByClassName('listings-columns')[0];\n  var rowGap = parseInt(window.getComputedStyle(grid).getPropertyValue('grid-row-gap'), 10);\n  var rowHeight = 0;\n  var rowSpan = Math.ceil((item.getElementsByClassName('listing-content')[0].getBoundingClientRect().height + rowGap) / (rowHeight + rowGap));\n  /* Set the spanning as calculated above (S) */\n  // eslint-disable-next-line no-param-reassign\n\n  item.style.gridRowEnd = \"span \".concat(rowSpan);\n}\n\nexport function resizeAllMasonryItems() {\n  // Get all item class objects in one list\n  var allItems = document.getElementsByClassName('single-listing');\n  /*\n   * Loop through the above list and execute the spanning function to\n   * each list-item (i.e. each masonry item)\n   */\n  // eslint-disable-next-line vars-on-top\n\n  for (var i = 0; i < allItems.length; i += 1) {\n    resizeMasonryItem(allItems[i]);\n  }\n}\nexport function getLocation(_ref) {\n  var _ref$query = _ref.query,\n      query = _ref$query === void 0 ? '' : _ref$query,\n      _ref$tags = _ref.tags,\n      tags = _ref$tags === void 0 ? [] : _ref$tags,\n      _ref$category = _ref.category,\n      category = _ref$category === void 0 ? '' : _ref$category,\n      slug = _ref.slug;\n  var newLocation = '';\n\n  if (slug) {\n    newLocation = \"/listings/\".concat(category, \"/\").concat(slug);\n  } else if (query.length > 0 && tags.length > 0) {\n    newLocation = \"/listings/\".concat(category, \"?q=\").concat(query, \"&t=\").concat(tags);\n  } else if (query.length > 0) {\n    newLocation = \"/listings/\".concat(category, \"?q=\").concat(query);\n  } else if (tags.length > 0) {\n    newLocation = \"/listings/\".concat(category, \"?t=\").concat(tags);\n  } else if (category.length > 0) {\n    newLocation = \"/listings/\".concat(category);\n  } else {\n    newLocation = '/listings';\n  }\n\n  return newLocation;\n}","map":{"version":3,"sources":["/Users/nmadhab/hobby/forem/app/javascript/listings/utils.js"],"names":["LISTING_PAGE_SIZE","MATCH_LISTING","updateListings","listings","fullListings","forEach","listing","bumped_at","push","getQueryParams","queryString","document","location","search","split","join","params","tokens","re","exec","decodeURIComponent","resizeMasonryItem","item","grid","getElementsByClassName","rowGap","parseInt","window","getComputedStyle","getPropertyValue","rowHeight","rowSpan","Math","ceil","getBoundingClientRect","height","style","gridRowEnd","resizeAllMasonryItems","allItems","i","length","getLocation","query","tags","category","slug","newLocation"],"mappings":"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","sourcesContent":["/**\n * How many listings to show per page\n * @constant {number}\n */\nexport const LISTING_PAGE_SIZE = 75;\n\nexport const MATCH_LISTING = [\n  'single-listing-container__inner',\n  'listing-filters',\n  'listings-modal-background',\n  'close-listing-modal',\n];\n\nexport function updateListings(listings) {\n  const fullListings = [];\n\n  listings.forEach((listing) => {\n    if (listing.bumped_at) {\n      fullListings.push(listing);\n    }\n  });\n\n  return fullListings;\n}\n\nexport function getQueryParams() {\n  let queryString = document.location.search;\n  queryString = queryString.split('+').join(' ');\n\n  const params = {};\n  let tokens;\n  const re = /[?&]?([^=]+)=([^&]*)/g;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((tokens = re.exec(queryString))) {\n    params[decodeURIComponent(tokens[1])] = decodeURIComponent(tokens[2]);\n  }\n\n  return params;\n}\n\nfunction resizeMasonryItem(item) {\n  /* Get the grid object, its row-gap, and the size of its implicit rows */\n  const grid = document.getElementsByClassName('listings-columns')[0];\n  const rowGap = parseInt(\n    window.getComputedStyle(grid).getPropertyValue('grid-row-gap'),\n    10,\n  );\n  const rowHeight = 0;\n  const rowSpan = Math.ceil(\n    (item.getElementsByClassName('listing-content')[0].getBoundingClientRect()\n      .height +\n      rowGap) /\n      (rowHeight + rowGap),\n  );\n\n  /* Set the spanning as calculated above (S) */\n  // eslint-disable-next-line no-param-reassign\n  item.style.gridRowEnd = `span ${rowSpan}`;\n}\n\nexport function resizeAllMasonryItems() {\n  // Get all item class objects in one list\n  const allItems = document.getElementsByClassName('single-listing');\n\n  /*\n   * Loop through the above list and execute the spanning function to\n   * each list-item (i.e. each masonry item)\n   */\n  // eslint-disable-next-line vars-on-top\n  for (let i = 0; i < allItems.length; i += 1) {\n    resizeMasonryItem(allItems[i]);\n  }\n}\n\nexport function getLocation({ query = '', tags = [], category = '', slug }) {\n  let newLocation = '';\n  if (slug) {\n    newLocation = `/listings/${category}/${slug}`;\n  } else if (query.length > 0 && tags.length > 0) {\n    newLocation = `/listings/${category}?q=${query}&t=${tags}`;\n  } else if (query.length > 0) {\n    newLocation = `/listings/${category}?q=${query}`;\n  } else if (tags.length > 0) {\n    newLocation = `/listings/${category}?t=${tags}`;\n  } else if (category.length > 0) {\n    newLocation = `/listings/${category}`;\n  } else {\n    newLocation = '/listings';\n  }\n  return newLocation;\n}\n"]},"metadata":{},"sourceType":"module"}