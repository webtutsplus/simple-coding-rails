"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KnapsackProLogger = void 0;
var util = require("util");
var winston_1 = require("winston");
var config_1 = require("./config");
var clientName = require('../package.json').name;
var KnapsackProLogger = (function () {
    function KnapsackProLogger(logLevel) {
        if (logLevel === void 0) { logLevel = config_1.KnapsackProEnvConfig.logLevel; }
        this.logger = winston_1.createLogger({
            level: logLevel,
            format: winston_1.format.combine(winston_1.format.label({ label: clientName }), winston_1.format.timestamp(), winston_1.format.colorize(), winston_1.format.printf(function (_a) {
                var timestamp = _a.timestamp, label = _a.label, level = _a.level, message = _a.message;
                return "\n" + timestamp + " [" + label + "] " + level + ": " + message;
            })),
            transports: [new winston_1.transports.Console()],
        });
    }
    KnapsackProLogger.objectInspect = function (object) {
        return util.inspect(object, {
            showHidden: false,
            depth: null,
            colors: true,
        });
    };
    KnapsackProLogger.prototype.error = function (message) {
        this.logger.error(message);
    };
    KnapsackProLogger.prototype.warn = function (message) {
        this.logger.warn(message);
    };
    KnapsackProLogger.prototype.info = function (message) {
        this.logger.info(message);
    };
    KnapsackProLogger.prototype.verbose = function (message) {
        this.logger.verbose(message);
    };
    KnapsackProLogger.prototype.debug = function (message) {
        this.logger.debug(message);
    };
    KnapsackProLogger.prototype.silly = function (message) {
        this.logger.silly(message);
    };
    return KnapsackProLogger;
}());
exports.KnapsackProLogger = KnapsackProLogger;
