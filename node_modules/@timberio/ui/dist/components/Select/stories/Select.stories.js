"use strict";

var _react = _interopRequireDefault(require("react"));

var _react2 = require("@storybook/react");

var _Select = _interopRequireDefault(require("../Select"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var production = [{
  value: 'odin',
  label: 'Odin',
  icon: 'elixir'
}, {
  value: 'thor',
  label: 'Thor',
  icon: 'node'
}, {
  value: 'baldyr',
  label: 'Baldyr',
  icon: 'go'
}, {
  value: 'tyr',
  label: 'Tyr',
  icon: 'python'
}];
var staging = [{
  value: 'odin-staging',
  label: 'Odin',
  icon: 'elixir'
}, {
  value: 'thor-staging',
  label: 'Thor',
  icon: 'node'
}, {
  value: 'baldyr-staging',
  label: 'Baldyr',
  icon: 'go'
}, {
  value: 'tyr-staging',
  label: 'Tyr',
  icon: 'python'
}];
(0, _react2.storiesOf)('Select', module).add('Dropdown', function () {
  return _react.default.createElement(_Select.default, {
    width: 200,
    type: "single",
    onChange: console.log,
    defaultValue: {
      value: 'one',
      label: 'One'
    },
    data: [{
      value: 'one',
      label: 'One',
      icon: 'arrow-left-circle'
    }, {
      value: 'two',
      label: 'Two',
      icon: 'arrow-right-circle'
    }, {
      value: 'three',
      label: 'Three',
      icon: 'arrow-up-circle'
    }, {
      value: 'four',
      label: 'Four',
      icon: 'arrow-down-circle'
    }]
  });
}).add('Dropdown with label', function () {
  return _react.default.createElement(_Select.default, {
    width: 200,
    type: "single",
    label: "Select Something",
    onChange: console.log,
    data: [{
      value: 'one',
      label: 'One',
      icon: 'arrow-left-circle'
    }, {
      value: 'two',
      label: 'Two',
      icon: 'arrow-right-circle'
    }, {
      value: 'three',
      label: 'Three',
      icon: 'arrow-up-circle'
    }, {
      value: 'four',
      label: 'Four',
      icon: 'arrow-down-circle'
    }]
  });
}).add('Disabled', function () {
  return _react.default.createElement(_Select.default, {
    width: 200,
    type: "single",
    isDisabled: true,
    onChange: console.log,
    data: [{
      value: 'one',
      label: 'One',
      icon: 'arrow-left-circle'
    }, {
      value: 'two',
      label: 'Two',
      icon: 'arrow-right-circle'
    }, {
      value: 'three',
      label: 'Three',
      icon: 'arrow-up-circle'
    }, {
      value: 'four',
      label: 'Four',
      icon: 'arrow-down-circle'
    }]
  });
}).add('Multi Select', function () {
  return _react.default.createElement(_Select.default, {
    width: 500,
    type: "multi",
    onChange: console.log,
    data: [{
      value: 'one',
      label: 'One',
      icon: 'arrow-left-circle'
    }, {
      value: 'two',
      label: 'Two',
      icon: 'arrow-right-circle'
    }, {
      value: 'three',
      label: 'Three',
      icon: 'arrow-up-circle'
    }, {
      value: 'four',
      label: 'Four',
      icon: 'arrow-down-circle'
    }]
  });
}).add('Input Tags', function () {
  return _react.default.createElement("div", null, _react.default.createElement("p", null, "Start typing some tags. Seperate them with a comma, enter or tab key."), _react.default.createElement(_Select.default, {
    width: 500,
    type: "input",
    onChange: console.log
  }));
}).add('Mulstiselect Checkboxes', function () {
  return _react.default.createElement(_Select.default, {
    width: 500,
    type: "checkbox",
    onChange: console.log,
    data: [{
      value: 'odin',
      label: 'Odin',
      icon: 'elixir'
    }, {
      value: 'thor',
      label: 'Thor',
      icon: 'node'
    }, {
      value: 'baldyr',
      label: 'Baldyr',
      icon: 'go'
    }, {
      value: 'tyr',
      label: 'Tyr',
      icon: 'python'
    }]
  });
}).add('Custom Components', function () {
  return _react.default.createElement(_Select.default, {
    width: 500,
    type: "checkbox",
    onChange: console.log,
    data: [{
      value: 'odin',
      label: 'Odin',
      icon: 'elixir'
    }, {
      value: 'thor',
      label: 'Thor',
      icon: 'node'
    }, {
      value: 'baldyr',
      label: 'Baldyr',
      icon: 'go'
    }, {
      value: 'tyr',
      label: 'Tyr',
      icon: 'python'
    }],
    components: {
      MultiValue: function MultiValue(props) {
        return _react.default.createElement("b", null, props.children);
      },
      SingleValue: function SingleValue(props) {
        return _react.default.createElement("i", null, "Single: ", props.children);
      }
    }
  });
}).add('Mulstiselect Searchable', function () {
  return _react.default.createElement(_Select.default, {
    width: 500,
    type: "checkbox",
    onChange: console.log,
    isSearchable: true,
    data: [{
      value: 'odin',
      label: 'Odin',
      icon: 'elixir'
    }, {
      value: 'thor',
      label: 'Thor',
      icon: 'node'
    }, {
      value: 'baldyr',
      label: 'Baldyr',
      icon: 'go'
    }, {
      value: 'tyr',
      label: 'Tyr',
      icon: 'python'
    }]
  });
}).add('Replace on Option Click', function () {
  return _react.default.createElement(_Select.default, {
    width: 500,
    type: "checkbox",
    onChange: console.log,
    appendOnOptionClick: false,
    data: [{
      value: 'odin',
      label: 'Odin',
      icon: 'elixir'
    }, {
      value: 'thor',
      label: 'Thor',
      icon: 'node'
    }, {
      value: 'baldyr',
      label: 'Baldyr',
      icon: 'go'
    }, {
      value: 'tyr',
      label: 'Tyr',
      icon: 'python'
    }]
  });
}).add('Grouped', function () {
  return _react.default.createElement(_Select.default, {
    width: 500,
    type: "checkbox",
    onChange: console.log,
    data: [{
      label: 'Production',
      options: production
    }, {
      label: 'Staging',
      options: staging
    }]
  });
}).add('Search Bar', function () {
  return _react.default.createElement(_Select.default, {
    width: 500,
    type: "checkbox",
    onChange: console.log,
    appendOnOptionClick: false,
    showFilterInMenu: true,
    data: [{
      label: 'Production',
      options: production
    }, {
      label: 'Staging',
      options: staging
    }]
  });
});