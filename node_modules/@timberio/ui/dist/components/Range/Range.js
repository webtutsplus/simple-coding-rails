"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _cleanElement = _interopRequireDefault(require("clean-element"));

var _objectPath = require("object-path");

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactEmotion = _interopRequireDefault(require("react-emotion"));

var _helpers = require("../../helpers");

var _Flex = _interopRequireDefault(require("../Box/Flex"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  position: relative;\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var Bound =
/*#__PURE__*/
(0, _reactEmotion.default)('div', {
  target: "e16kkzu20"
})(function (props) {
  return {
    color: (0, _objectPath.get)(props, 'theme.colors.gray.3'),
    fontSize: 14,
    padding: '10px 5px'
  };
});
var Input =
/*#__PURE__*/
(0, _reactEmotion.default)('input', {
  target: "e16kkzu21"
})("width:100%;background:transparent;-webkit-appearance:none;outline:none;margin:0;&::-webkit-slider-thumb{-webkit-appearance:none;background:#5843CF;border:1px solid transparent;margin-top:", function (props) {
  return -props.thumbHeight / 2;
}, "px;border-radius:30px;box-shadow:0 0 1px #ddd,0 2px 8px -2px #ddd;height:", function (props) {
  return props.thumbHeight;
}, "px;width:", function (props) {
  return props.thumbWidth;
}, "px;}&::-webkit-slider-runnable-track{-webkit-appearance:none;background:", function (props) {
  return (0, _objectPath.get)(props, 'theme.colors.gray.2');
}, ";box-shadow:none;border:0;cursor:pointer;height:3px;}");
var cleaned = (0, _cleanElement.default)('div');
var Wrapper = (0, _helpers.system)(cleaned)(_templateObject()); // Component that extends the native Range input providing styles
// segmented ranges, and onChange callbacks
// use `Ranger` for more sophisticated use-cases

var Range =
/*#__PURE__*/
function (_Component) {
  _inherits(Range, _Component);

  function Range(props) {
    var _this;

    _classCallCheck(this, Range);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Range).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "updateRange", function (e) {
      var _this$props = _this.props,
          values = _this$props.values,
          onChange = _this$props.onChange;
      var value = _this.state.value;
      var closest = e.target.value; // Find the closest value in the values set

      if (values) {
        closest = values.reduce(function (prev, curr) {
          return Math.abs(curr - e.target.value) < Math.abs(prev - e.target.value) ? curr : prev;
        });
      } // No need to update the state if the current position
      // is already equal to the target position


      if (closest === value) return false;

      _this.setState({
        value: closest
      });

      if (onChange) onChange(closest);
    });

    _this.state = {
      value: _this.getInitialValue(props),
      min: _this.getMin(props),
      max: _this.getMax(props)
    };
    return _this;
  }

  _createClass(Range, [{
    key: "getInitialValue",
    value: function getInitialValue(_ref) {
      var value = _ref.value,
          values = _ref.values,
          min = _ref.min,
          initialValue = _ref.initialValue;
      if (value) return value;
      if (initialValue) return initialValue;
      return this.getMin({
        values: values,
        min: min
      });
    }
  }, {
    key: "getMax",
    value: function getMax(_ref2) {
      var values = _ref2.values,
          max = _ref2.max;
      return max !== undefined ? max : Math.max.apply(Math, _toConsumableArray(values));
    }
  }, {
    key: "getMin",
    value: function getMin(_ref3) {
      var values = _ref3.values,
          min = _ref3.min;
      return min !== undefined ? min : Math.min.apply(Math, _toConsumableArray(values));
    }
  }, {
    key: "renderValue",
    value: function renderValue(value) {
      var formatValue = this.props.formatValue;
      if (formatValue) return formatValue(value);
      return value;
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          thumbHeight = _this$props2.thumbHeight,
          thumbWidth = _this$props2.thumbWidth;
      var _this$state = this.state,
          value = _this$state.value,
          min = _this$state.min,
          max = _this$state.max;
      return _react.default.createElement(Wrapper, this.props, _react.default.createElement(Input, {
        id: "range",
        type: "range",
        value: value,
        min: min,
        max: max,
        onChange: this.updateRange,
        thumbHeight: thumbHeight,
        thumbWidth: thumbWidth
      }), _react.default.createElement(_Flex.default, {
        justifyContent: "space-between"
      }, _react.default.createElement(Bound, null, this.renderValue(min)), _react.default.createElement(Bound, null, this.renderValue(max))));
    }
  }]);

  return Range;
}(_react.Component);

Range.defaultProps = {
  values: null,
  value: null,
  thumbHeight: 20,
  thumbWidth: 20
};
Range.propTypes = {
  values: _propTypes.default.array,
  value: _propTypes.default.number,
  thumbHeight: _propTypes.default.number,
  thumbWidth: _propTypes.default.number,
  formatValue: _propTypes.default.func,
  initialValue: _propTypes.default.number,
  min: _propTypes.default.number,
  max: _propTypes.default.number,
  onChange: _propTypes.default.func
};
cleaned.propTypes = Range.propTypes;
var _default = Range;
exports.default = _default;