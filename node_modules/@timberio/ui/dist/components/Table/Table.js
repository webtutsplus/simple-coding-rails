"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.testExports = exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactEmotion = _interopRequireDefault(require("react-emotion"));

var _MicroTable = _interopRequireDefault(require("./MicroTable"));

var _components = require("./components");

var _Show = _interopRequireDefault(require("../Show"));

var _Icon = _interopRequireDefault(require("../Icon"));

var _Box = _interopRequireDefault(require("../Box"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var CELL_OFFSET = 40;
var defaultSort = {
  index: 0,
  desc: false
};

var EmptyHeaderCell = function EmptyHeaderCell() {
  return _react.default.createElement(_components.Cell, {
    header: true,
    style: {
      width: "".concat(CELL_OFFSET, "px")
    }
  });
};

var ToggleIcon =
/*#__PURE__*/
(0, _reactEmotion.default)(_Icon.default, {
  target: "e1js6s1k0"
})("transition:transform 0.2s ease-in-out;transform:rotate(", function (_ref) {
  var active = _ref.active;
  return active ? 0 : -90;
}, "deg);");

var ToggleButton = function ToggleButton(_ref2) {
  var onToggle = _ref2.onToggle,
      active = _ref2.active;
  return _react.default.createElement(_components.Cell, {
    style: {
      width: "".concat(CELL_OFFSET, "px")
    }
  }, _react.default.createElement(ToggleIcon, {
    active: active,
    onClick: onToggle,
    name: "chevron-down",
    size: 15,
    ml: 2
  }));
};

var TableRow =
/*#__PURE__*/
function (_React$Component) {
  _inherits(TableRow, _React$Component);

  function TableRow() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, TableRow);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TableRow)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      showChild: false
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "toggleShowChild", function (e) {
      e.stopPropagation();

      _this.setState(function (state) {
        return {
          showChild: !state.showChild
        };
      });
    });

    return _this;
  }

  _createClass(TableRow, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          row = _this$props.row,
          cells = _this$props.cells,
          components = _this$props.components,
          renderChildRow = _this$props.renderChildRow,
          rest = _objectWithoutProperties(_this$props, ["row", "cells", "components", "renderChildRow"]);

      var RowComponent = components.Row;
      var hasChildRow = typeof renderChildRow === 'function';
      return _react.default.createElement(_react.default.Fragment, null, _react.default.createElement(RowComponent, _extends({}, rest, {
        row: row,
        onClick: hasChildRow ? this.toggleShowChild : undefined
      }), hasChildRow && _react.default.createElement(ToggleButton, {
        onToggle: this.toggleShowChild,
        active: this.state.showChild
      }), cells.map(function (_ref3) {
        var getCellProps = _ref3.getCellProps,
            value = _ref3.value,
            column = _ref3.column;
        return _react.default.createElement(_components.Cell, getCellProps(), typeof column.renderer !== 'undefined' ? _react.default.createElement(column.renderer, {
          value: value
        }) : value);
      })), hasChildRow && _react.default.createElement(_Show.default, {
        show: this.state.showChild
      }, _react.default.createElement(_Box.default, {
        ml: CELL_OFFSET
      }, renderChildRow(row))));
    }
  }]);

  return TableRow;
}(_react.default.Component);
/* eslint-disable react/jsx-key */

/* Keys are handled by the headless table component */


var UITable =
/*#__PURE__*/
function (_React$Component2) {
  _inherits(UITable, _React$Component2);

  function UITable(props) {
    var _this2;

    _classCallCheck(this, UITable);

    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(UITable).call(this, props));
    _this2.state = {
      sortBy: props.sortBy || defaultSort
    };
    return _this2;
  }

  _createClass(UITable, [{
    key: "render",
    value: function render() {
      var _this3 = this;

      var sortBy = this.state.sortBy;
      var _this$props2 = this.props,
          data = _this$props2.data,
          columns = _this$props2.columns,
          components = _this$props2.components,
          renderChildRow = _this$props2.renderChildRow,
          showHeader = _this$props2.showHeader;
      var hasChildRows = typeof renderChildRow === 'function';
      return _react.default.createElement(_MicroTable.default, {
        data: data,
        columns: columns,
        sortBy: sortBy,
        onSortChange: function onSortChange(index) {
          return _this3.setState({
            sortBy: index
          });
        }
      }, function (_ref4) {
        var rows = _ref4.rows,
            getTableProps = _ref4.getTableProps,
            getHeaderProps = _ref4.getHeaderProps,
            headerCells = _ref4.headerCells;
        return _react.default.createElement(_components.Table, getTableProps(), showHeader && _react.default.createElement(_components.Row, getHeaderProps(), hasChildRows && _react.default.createElement(EmptyHeaderCell, null), headerCells.map(function (_ref5) {
          var column = _ref5.column,
              sorted = _ref5.sorted,
              sortedDesc = _ref5.sortedDesc,
              getHeaderCellProps = _ref5.getHeaderCellProps;
          return _react.default.createElement(_components.Cell, _extends({
            header: true,
            sorted: sorted,
            sortedDesc: sortedDesc
          }, getHeaderCellProps()), typeof column.header !== 'function' ? column.header : _react.default.createElement(column.header, column), sorted && _react.default.createElement(_Icon.default, {
            name: sortedDesc ? 'chevron-up' : 'chevron-down',
            size: 15,
            ml: 2
          }));
        })), rows.map(function (_ref6, idx) {
          var getRowProps = _ref6.getRowProps,
              cells = _ref6.cells,
              row = _ref6.row;
          return _react.default.createElement(TableRow, _extends({}, getRowProps(), {
            key: idx,
            row: row,
            cells: cells,
            renderChildRow: renderChildRow,
            components: components
          }));
        }));
      });
    }
  }]);

  return UITable;
}(_react.default.Component);

UITable.propTypes = {
  columns: _propTypes.default.array,
  data: _propTypes.default.array,
  components: _propTypes.default.object,
  renderChildRow: _propTypes.default.func,
  showHeader: _propTypes.default.bool
};
UITable.defaultProps = {
  columns: [],
  data: [],
  components: {
    Row: _components.Row,
    Cell: _components.Cell
  },
  showHeader: true
};
var _default = UITable;
exports.default = _default;
var testExports = {
  EmptyHeaderCell: EmptyHeaderCell,
  ToggleButton: ToggleButton
};
exports.testExports = testExports;