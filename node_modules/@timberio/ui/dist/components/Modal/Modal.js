"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactEmotion = _interopRequireDefault(require("react-emotion"));

var _cleanElement = _interopRequireDefault(require("clean-element"));

var _objectPath = require("object-path");

var _helpers = require("../../helpers");

var _Icon = _interopRequireDefault(require("../Icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var cleaned = (0, _cleanElement.default)('div');
var Wrapper = (0, _helpers.system)(cleaned)(function (props) {
  return {
    background: '#ffffff',
    width: '100%',
    maxWidth: '700px',
    borderRadius: '4px',
    margin: '10% auto 5%',
    position: 'relative',
    zIndex: 20,
    animation: "".concat(_helpers.animations.slideIn, " 300ms ease-out")
  };
});
var Backdrop = (0, _helpers.system)('aside')(function (props) {
  return {
    background: 'rgba(0, 0, 0, 0.8)',
    position: 'fixed',
    top: 0,
    bottom: 0,
    left: 0,
    right: 0,
    zIndex: 19,
    overflow: 'auto',
    transformOrigin: '50% 0',
    animation: "".concat(_helpers.animations.fadeIn, " 200ms linear")
  };
});
var Closer =
/*#__PURE__*/
(0, _reactEmotion.default)('div', {
  target: "ekivpc00"
})({
  position: 'absolute',
  top: 0,
  bottom: 0,
  left: 0,
  right: 0,
  zIndex: 18
});
var Title = (0, _helpers.system)('div')(function (props) {
  return {
    display: 'flex',
    justifyContent: 'space-between',
    alignItems: 'center',
    borderBottom: '1px solid',
    borderColor: (0, _objectPath.get)(props.theme, 'colors.gray.2'),
    padding: '1rem',
    fontWeight: 'bold',
    color: (0, _objectPath.get)(props.theme, 'colors.gray.6'),
    svg: {
      color: (0, _objectPath.get)(props.theme, 'colors.gray.4'),
      ':hover': {
        color: (0, _objectPath.get)(props.theme, 'colors.gray.6')
      }
    }
  };
});
var Body = (0, _helpers.system)('div')(function (props) {
  return {
    padding: '1rem'
  };
});

var Modal =
/*#__PURE__*/
function (_Component) {
  _inherits(Modal, _Component);

  function Modal(props) {
    var _this;

    _classCallCheck(this, Modal);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Modal).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "keydown", function (evt) {
      var closeWithEsc = _this.props.closeWithEsc;

      if (closeWithEsc && evt.keyCode === 27) {
        _this.closeModal();
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "openModal", function () {
      if (document.body) {
        document.body.style.overflow = 'hidden';
      }

      _this.props.onOpen();

      _this.setState({
        isOpen: true
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "closeModal", function () {
      var _this$props = _this.props,
          trigger = _this$props.trigger,
          onClose = _this$props.onClose;

      if (trigger) {
        if (document.body) {
          document.body.style.overflow = 'auto';
        }

        _this.setState({
          isOpen: false
        });
      }

      onClose();
    });

    _this.state = {
      isOpen: props.isOpen
    };
    return _this;
  }

  _createClass(Modal, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      if (this.props.closeWithEsc) {
        document.addEventListener('keydown', this.keydown, false);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.props.closeWithEsc) {
        document.removeEventListener('keydown', this.keydown, false);
      }
    }
  }, {
    key: "componentWillReceiveProps",
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.isOpen !== this.state.isOpen) {
        this.setState({
          isOpen: nextProps.isOpen
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props2 = this.props,
          trigger = _this$props2.trigger,
          closeWithBackdrop = _this$props2.closeWithBackdrop,
          backdropProps = _this$props2.backdropProps,
          titleProps = _this$props2.titleProps,
          bodyProps = _this$props2.bodyProps,
          children = _this$props2.children,
          title = _this$props2.title,
          props = _objectWithoutProperties(_this$props2, ["trigger", "closeWithBackdrop", "backdropProps", "titleProps", "bodyProps", "children", "title"]);

      var isOpen = this.state.isOpen;
      return _react.default.createElement("div", null, trigger && _react.default.createElement("span", {
        onClick: this.openModal
      }, typeof trigger === 'function' ? trigger(isOpen) : trigger), isOpen && _react.default.createElement(Backdrop, backdropProps, _react.default.createElement(Closer, {
        onClick: function onClick() {
          return closeWithBackdrop && _this2.closeModal();
        }
      }), _react.default.createElement(Wrapper, props, title && _react.default.createElement(Title, titleProps, title, _react.default.createElement(_Icon.default, {
        name: "x",
        size: 15,
        onClick: this.closeModal,
        style: {
          cursor: 'pointer'
        }
      })), _react.default.createElement(Body, bodyProps, typeof children === 'function' ? children(this.closeModal) : children))));
    }
  }]);

  return Modal;
}(_react.Component);

Modal.defaultProps = {
  isOpen: false,
  onOpen: function onOpen() {},
  onClose: function onClose() {},
  closeWithEsc: true,
  closeWithBackdrop: true,
  backdropProps: {},
  titleProps: {},
  bodyProps: {}
};
Modal.propTypes = {
  trigger: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.object]),
  isOpen: _propTypes.default.bool,
  onOpen: _propTypes.default.func,
  onClose: _propTypes.default.func,
  closeWithEsc: _propTypes.default.bool,
  closeWithBackdrop: _propTypes.default.bool,
  backdropProps: _propTypes.default.object,
  titleProps: _propTypes.default.object,
  bodyProps: _propTypes.default.object
};
cleaned.propTypes = Modal.propTypes;
Modal.displayName = 'Modal';
var _default = Modal;
exports.default = _default;