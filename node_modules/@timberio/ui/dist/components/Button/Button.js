"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactEmotion = _interopRequireDefault(require("react-emotion"));

var _cleanElement = _interopRequireDefault(require("clean-element"));

var _objectPath = require("object-path");

var _helpers = require("../../helpers");

var _Spinner = _interopRequireDefault(require("../Spinner"));

var _Show = _interopRequireDefault(require("../Show"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var buttonColor = function buttonColor(props, c) {
  return {
    backgroundColor: (0, _objectPath.get)(props, ['theme', 'colors', c, 3]),
    color: (0, _objectPath.get)(props, ['theme', 'colors', c, 0]),
    borderColor: (0, _objectPath.get)(props, ['theme', 'colors', c, 4]),
    ':hover': {
      backgroundColor: (0, _objectPath.get)(props, ['theme', 'colors', c, 4])
    },
    ':active': {
      backgroundColor: (0, _objectPath.get)(props, ['theme', 'colors', c, 5])
    },
    ':disabled': {
      opacity: '.7'
    }
  };
};

var cleaned = (0, _cleanElement.default)('button');
var BaseButton = (0, _helpers.system)(cleaned)(function (props) {
  var _get, _get2;

  return _objectSpread({
    outline: 'none',
    display: 'inline-flex',
    WebkitFontSmoothing: 'antialiased',
    verticalAlign: 'middle',
    textAlign: 'center',
    textDecoration: 'none',
    appearance: 'none',
    cursor: 'pointer',
    fontFamily: 'inherit',
    alignItems: 'center',
    justifyContent: 'center',
    transition: 'all .2s ease-in-out',
    borderWidth: 0,
    boxShadow: (0, _helpers.fromTheme)('shadows.0'),
    borderRadius: 5,
    fontWeight: 'bold'
  }, (0, _objectPath.get)((_get = {}, _defineProperty(_get, _helpers.INTENTS.primary, buttonColor(props, props.theme.intents.primary)), _defineProperty(_get, _helpers.INTENTS.info, buttonColor(props, props.theme.intents.info)), _defineProperty(_get, _helpers.INTENTS.success, buttonColor(props, props.theme.intents.success)), _defineProperty(_get, _helpers.INTENTS.danger, buttonColor(props, props.theme.intents.danger)), _defineProperty(_get, _helpers.INTENTS.warning, buttonColor(props, props.theme.intents.warning)), _defineProperty(_get, _helpers.INTENTS.secondary, {
    color: (0, _objectPath.get)(props, ['theme', 'colors', props.theme.intents.secondary, 4]),
    background: (0, _objectPath.get)(props, ['theme', 'colors', props.theme.intents.secondary, 1])
  }), _get), props.intent || 'primary'), (0, _objectPath.get)((_get2 = {}, _defineProperty(_get2, _helpers.SCALES.xs, {
    padding: '.25rem',
    fontSize: (0, _objectPath.get)(props, 'theme.fontSizes.1'),
    borderRadius: "".concat((0, _objectPath.get)(props, 'theme.radii.1'))
  }), _defineProperty(_get2, _helpers.SCALES.sm, {
    padding: '.5rem',
    fontSize: (0, _objectPath.get)(props, 'theme.fontSizes.2'),
    borderRadius: "".concat((0, _objectPath.get)(props, 'theme.radii.2'))
  }), _defineProperty(_get2, _helpers.SCALES.md, {
    padding: '.75rem',
    fontSize: (0, _objectPath.get)(props, 'theme.fontSizes.3'),
    borderRadius: "".concat((0, _objectPath.get)(props, 'theme.radii.3'))
  }), _defineProperty(_get2, _helpers.SCALES.lg, {
    padding: '1rem 1.5rem',
    fontSize: (0, _objectPath.get)(props, 'theme.fontSizes.4'),
    borderRadius: "".concat((0, _objectPath.get)(props, 'theme.radii.4'))
  }), _get2), props.scale || 'md'));
});
BaseButton.propTypes = _objectSpread({}, _helpers.INTENTS.propTypes, _helpers.SCALES.propTypes, {
  isLoading: _propTypes.default.bool
});

var Button = function Button(_ref) {
  var children = _ref.children,
      isLoading = _ref.isLoading,
      rest = _objectWithoutProperties(_ref, ["children", "isLoading"]);

  return _react.default.createElement(BaseButton, rest, children, _react.default.createElement(_Show.default, {
    show: isLoading,
    type: "width"
  }, _react.default.createElement(_Spinner.default, {
    color: "currentColor",
    mx: 1,
    size: 15
  })));
};

cleaned.propTypes = BaseButton.propTypes;
Button.propTypes = BaseButton.propTypes;
Button.defaultProps = {
  isLoading: false
};
Button.displayName = 'Button';

var _default =
/*#__PURE__*/
(0, _reactEmotion.default)(Button, {
  target: "ehsb4a0"
})();

exports.default = _default;