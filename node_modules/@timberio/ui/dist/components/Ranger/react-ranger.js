"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance"); }

function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var getBoundingClientRect = function getBoundingClientRect(element) {
  var rect = element.getBoundingClientRect();
  return {
    left: Math.ceil(rect.left),
    width: Math.ceil(rect.width)
  };
};

var ReactRanger =
/*#__PURE__*/
function (_React$Component) {
  _inherits(ReactRanger, _React$Component);

  function ReactRanger() {
    var _getPrototypeOf2;

    var _this;

    _classCallCheck(this, ReactRanger);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReactRanger)).call.apply(_getPrototypeOf2, [this].concat(args)));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "state", {
      activeHandleIndex: null
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleEls", []);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "handleDimensions", []);

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onPress", function (e, activeHandleIndex) {
      _this.setState({
        activeHandleIndex: activeHandleIndex
      });

      document.addEventListener('mousemove', _this.onDrag);
      document.addEventListener('touchmove', _this.onDrag);
      document.addEventListener('mouseup', _this.onRelease);
      document.addEventListener('touchend', _this.onRelease);

      if (_this.props.onPress) {
        _this.props.onPress(e);
      }
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onDrag", function (e) {
      var _this$props = _this.props,
          onChange = _this$props.onChange,
          onDrag = _this$props.onDrag;
      var activeHandleIndex = _this.state.activeHandleIndex;

      var values = _this.getValues();

      var newValue = _this.getValueForClientX(e.clientX);

      var newRoundedValue = _this.roundToStep(newValue);

      var newValues = _toConsumableArray(values.slice(0, activeHandleIndex)).concat([newRoundedValue], _toConsumableArray(values.slice(activeHandleIndex + 1)));

      if (onDrag) {
        onDrag(e);
      }

      onChange(newValues);
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "onRelease", function (e) {
      document.removeEventListener('mousemove', _this.onDrag);
      document.removeEventListener('touchmove', _this.onDrag);
      document.removeEventListener('mouseup', _this.onRelease);
      document.removeEventListener('touchend', _this.onRelease);

      _this.setState({
        activeHandleIndex: null
      }, function () {
        if (_this.props.onRelease) {
          _this.props.onRelease(e);
        }
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "roundToStep", function (val) {
      var _this$props2 = _this.props,
          min = _this$props2.min,
          max = _this$props2.max,
          steps = _this$props2.steps,
          stepSize = _this$props2.stepSize;
      var left = min;
      var right = max;

      if (steps) {
        steps.forEach(function (step) {
          if (step <= val && step > left) {
            left = step;
          }

          if (step >= val && step < right) {
            right = step;
          }
        });
      } else {
        if (typeof stepSize === 'undefined') {
          throw new Error('Warning: Failed prop type: The prop `stepSize` is expected in `ReactRanger`, but its value is `undefined`');
        }

        while (left < val && left + stepSize < val) {
          left += stepSize;
        }

        right = Math.min(left + stepSize, max);
      }

      if (val - left < right - val) {
        return left;
      }

      return right;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getValues", function () {
      return Array.isArray(_this.props.value) ? _this.props.value : [_this.props.value];
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getPercentageForValue", function (val) {
      var _this$props3 = _this.props,
          min = _this$props3.min,
          max = _this$props3.max;
      return Math.max(0, Math.min(100, (val - min) / (max - min) * 100));
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getValueForClientX", function (clientX) {
      var _this$props4 = _this.props,
          min = _this$props4.min,
          max = _this$props4.max;
      var trackDims = getBoundingClientRect(_this.trackEl);
      var percentageValue = (clientX - trackDims.left) / trackDims.width;
      var value = (max - min) * percentageValue;
      return value + min;
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getTicks", function () {
      var _this$props5 = _this.props,
          min = _this$props5.min,
          max = _this$props5.max,
          tickSize = _this$props5.tickSize,
          controlledTicks = _this$props5.ticks,
          controlledSteps = _this$props5.steps; // Build the ticks

      var ticks = controlledTicks;

      if (!ticks) {
        if (controlledSteps) {
          ticks = controlledSteps;
        } else {
          ticks = [min];

          while (ticks[ticks.length - 1] < max - tickSize) {
            ticks.push(ticks[ticks.length - 1] + tickSize);
          }

          ticks.push(max);
        }
      }

      return ticks.map(function (value, i) {
        return {
          value: value,
          getTickProps: function getTickProps() {
            var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                key = _ref.key,
                _ref$style = _ref.style,
                style = _ref$style === void 0 ? {} : _ref$style;

            return {
              key: typeof key !== 'undefined' ? key : i,
              style: _objectSpread({}, style, {
                position: 'absolute',
                left: "".concat(_this.getPercentageForValue(value), "%")
              })
            };
          }
        };
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getSegments", function () {
      var _this$props6 = _this.props,
          min = _this$props6.min,
          max = _this$props6.max;

      var values = _this.getValues();

      var sortedValues = _toConsumableArray(values).sort(function (a, b) {
        return a - b;
      });

      return _toConsumableArray(sortedValues).concat([max]).map(function (value, i) {
        return {
          value: value,
          getSegmentProps: function getSegmentProps() {
            var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                key = _ref2.key,
                _ref2$style = _ref2.style,
                style = _ref2$style === void 0 ? {} : _ref2$style;

            var left = _this.getPercentageForValue(sortedValues[i - 1] ? sortedValues[i - 1] : min);

            var width = _this.getPercentageForValue(value) - left;
            return {
              key: typeof key !== 'undefined' ? key : i,
              style: _objectSpread({}, style, {
                position: 'absolute',
                left: "".concat(left, "%"),
                width: "".concat(width, "%")
              })
            };
          }
        };
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getHandles", function () {
      var activeHandleIndex = _this.state.activeHandleIndex;

      var values = _this.getValues();

      return values.map(function (value, i) {
        return {
          value: value,
          active: i === activeHandleIndex,
          getHandleProps: function getHandleProps() {
            var _objectSpread2;

            var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
                key = _ref3.key,
                _ref3$refProp = _ref3.refProp,
                refProp = _ref3$refProp === void 0 ? 'ref' : _ref3$refProp,
                _ref3$innerRef = _ref3.innerRef,
                innerRef = _ref3$innerRef === void 0 ? function () {} : _ref3$innerRef,
                _ref3$onMouseDown = _ref3.onMouseDown,
                _onMouseDown = _ref3$onMouseDown === void 0 ? function () {} : _ref3$onMouseDown,
                _ref3$onTouchStart = _ref3.onTouchStart,
                _onTouchStart = _ref3$onTouchStart === void 0 ? function () {} : _ref3$onTouchStart,
                _ref3$style = _ref3.style,
                style = _ref3$style === void 0 ? {} : _ref3$style,
                rest = _objectWithoutProperties(_ref3, ["key", "refProp", "innerRef", "onMouseDown", "onTouchStart", "style"]);

            return _objectSpread((_objectSpread2 = {
              key: typeof key !== 'undefined' ? key : i
            }, _defineProperty(_objectSpread2, refProp, function (el) {
              _this.handleEls[i] = el;
              innerRef(el);
            }), _defineProperty(_objectSpread2, "onMouseDown", function onMouseDown(e) {
              e.persist();

              _this.onPress(e, i);

              _onMouseDown(e);
            }), _defineProperty(_objectSpread2, "onTouchStart", function onTouchStart(e) {
              e.persist();

              _this.onPress(e, i);

              _onTouchStart(e);
            }), _defineProperty(_objectSpread2, "tabIndex", 1), _defineProperty(_objectSpread2, "style", _objectSpread({}, style, {
              outline: 0,
              position: 'absolute',
              top: '50%',
              left: "".concat(_this.getPercentageForValue(value), "%"),
              transform: 'translate(-50%, -50%)',
              zIndex: i === activeHandleIndex ? '1' : '0'
            })), _objectSpread2), rest);
          }
        };
      });
    });

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "getTrackProps", function () {
      var _ref5;

      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref4$style = _ref4.style,
          style = _ref4$style === void 0 ? {} : _ref4$style,
          _ref4$refProp = _ref4.refProp,
          refProp = _ref4$refProp === void 0 ? 'ref' : _ref4$refProp;

      var onTrackClick = _this.props.onTrackClick;
      var activeHandleIndex = _this.state.activeHandleIndex;
      return _ref5 = {}, _defineProperty(_ref5, refProp, function (el) {
        _this.trackEl = el;
      }), _defineProperty(_ref5, "onClick", function onClick(e) {
        e.persist();

        if (activeHandleIndex !== null || !onTrackClick || _this.handleEls.find(function (d) {
          return d.contains(e.target);
        })) {
          return;
        }

        var value = _this.getValueForClientX(e.clientX);

        onTrackClick(_this.roundToStep(value), value);
      }), _defineProperty(_ref5, "style", _objectSpread({}, style, {
        position: 'relative',
        userSelect: 'none'
      })), _ref5;
    });

    return _this;
  }

  _createClass(ReactRanger, [{
    key: "render",
    value: function render() {
      var children = this.props.children;
      var activeHandleIndex = this.state.activeHandleIndex;
      var getTrackProps = this.getTrackProps;
      var ticks = this.getTicks();
      var segments = this.getSegments();
      var handles = this.getHandles();
      return children({
        getTrackProps: getTrackProps,
        ticks: ticks,
        segments: segments,
        handles: handles,
        activeHandleIndex: activeHandleIndex
      });
    }
  }]);

  return ReactRanger;
}(_react.default.Component);

_defineProperty(ReactRanger, "propTypes", {
  children: _propTypes.default.func.isRequired,
  min: _propTypes.default.number.isRequired,
  max: _propTypes.default.number.isRequired,
  value: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.arrayOf(_propTypes.default.number)]).isRequired,
  stepSize: _propTypes.default.number,
  tickSize: _propTypes.default.number,
  steps: _propTypes.default.arrayOf(_propTypes.default.number),
  ticks: _propTypes.default.arrayOf(_propTypes.default.number),
  onChange: _propTypes.default.func,
  onTrackClick: _propTypes.default.func,
  onPress: _propTypes.default.func,
  onDrag: _propTypes.default.func,
  onRelease: _propTypes.default.func
});

_defineProperty(ReactRanger, "defaultProps", {
  tickSize: 10
});

var _default = ReactRanger;
exports.default = _default;