"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shortenNumber = shortenNumber;

function fmtNumber(num) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$length = _ref.length,
      length = _ref$length === void 0 ? 0 : _ref$length,
      _ref$defaultValue = _ref.defaultValue,
      defaultValue = _ref$defaultValue === void 0 ? '-' : _ref$defaultValue;

  if (typeof num !== 'number' || Number.isNaN(num) || num === null || num === undefined) {
    return defaultValue;
  }

  var re = "\\d(?=(\\d{3})+".concat(length > 0 ? '\\D' : '$', ")");
  return num.toFixed(Math.max(0, String(length))).replace(new RegExp(re, 'g'), '$&,');
}

function shortenNumber(num) {
  var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref2$length = _ref2.length,
      length = _ref2$length === void 0 ? 1 : _ref2$length,
      defaultLength = _ref2.defaultLength,
      format = _ref2.format,
      string = _ref2.string;

  var abs = Math.abs(num);

  if (abs > 999999) {
    return "".concat(fmtNumber(num / 1000000, {
      length: length,
      string: string,
      format: format
    }), " M");
  }

  if (abs > 999) {
    return "".concat(fmtNumber(num / 1000, {
      length: length,
      string: string,
      format: format
    }), " k");
  }

  return fmtNumber(num, {
    length: defaultLength,
    format: format
  });
}