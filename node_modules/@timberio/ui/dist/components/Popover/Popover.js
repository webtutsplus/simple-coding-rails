"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _emotion = require("emotion");

var _cleanElement = _interopRequireDefault(require("clean-element"));

var _reactPopover = _interopRequireDefault(require("react-popover"));

var _objectPath = require("object-path");

var _helpers = require("../../helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var cleaned = (0, _cleanElement.default)('div');
var Wrapper = (0, _helpers.system)(cleaned)(function (props) {
  return {
    background: (0, _objectPath.get)(props, 'theme.colors.gray.0'),
    borderRadius: '5px',
    overflow: 'hidden',
    boxShadow: "\n    0 0 2px rgba(0, 0, 0, .16),\n    0 5px 9px rgba(0, 0, 0, .12)\n  "
  };
}); // See https://github.com/littlebits/react-popover/issues/98

var tipStyles = function tipStyles(color) {
  return (
    /*#__PURE__*/
    (0, _emotion.css)("&.Popover{z-index:9;}&.Popover-below .Popover-tip{filter:drop-shadow(0px -1px 0px rgba(0,0,0,.1));}&.Popover-right .Popover-tip{filter:drop-shadow(-1px 0px 0px rgba(0,0,0,.1));}&.Popover-left .Popover-tip{filter:drop-shadow(1px 0px 0px rgba(0,0,0,.1));}&.Popover-above .Popover-tip{filter:drop-shadow(-1px 0px 0px rgba(0,0,0,.1));}.Popover-tipShape{fill:", color, ";}")
  );
};

var Popover =
/*#__PURE__*/
function (_PureComponent) {
  _inherits(Popover, _PureComponent);

  function Popover(props) {
    var _this;

    _classCallCheck(this, Popover);

    _this = _possibleConstructorReturn(this, _getPrototypeOf(Popover).call(this, props));

    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), "toggle", function (e) {
      if (e) e.stopPropagation();

      _this.setState({
        isOpen: !_this.state.isOpen
      });
    });

    _this.state = {
      isOpen: props.open
    };
    return _this;
  }

  _createClass(Popover, [{
    key: "renderBody",
    value: function renderBody() {
      var isOpen = this.state.isOpen.isOpen;

      var _this$props = this.props,
          children = _this$props.children,
          rest = _objectWithoutProperties(_this$props, ["children"]);

      return _react.default.createElement(Wrapper, _extends({}, rest, {
        onClick: function onClick(e) {
          return e.stopPropagation();
        }
      }), typeof children === 'function' ? this.props.children(this.toggle, isOpen) : this.props.children);
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          placement = _this$props2.placement,
          trigger = _this$props2.trigger,
          on = _this$props2.on,
          tip = _this$props2.tip,
          tipColor = _this$props2.tipColor;
      var isOpen = this.state.isOpen;
      return _react.default.createElement(_reactPopover.default, {
        tipSize: tip ? 7 : 1 / 100,
        isOpen: isOpen,
        onOuterAction: this.toggle,
        preferPlace: placement,
        className: tipStyles(tipColor),
        body: this.renderBody()
      }, _react.default.createElement("span", {
        onClick: on === 'click' ? this.toggle : null,
        onMouseEnter: on === 'hover' ? this.toggle : null,
        onMouseLeave: on === 'hover' ? this.toggle : null
      }, typeof trigger === 'function' ? trigger(isOpen) : trigger));
    }
  }]);

  return Popover;
}(_react.PureComponent);

Popover.defaultProps = {
  open: false,
  placement: 'above',
  on: 'click',
  tip: false,
  tipColor: 'hsl(0, 0%, 27%)'
};
Popover.propTypes = {
  open: _propTypes.default.bool,
  placement: _propTypes.default.string,
  trigger: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.node]),
  on: _propTypes.default.oneOf(['click', 'hover']),
  tip: _propTypes.default.bool,
  tipColor: _propTypes.default.string
};
cleaned.propTypes = Popover.propTypes;
Popover.displayName = 'Popover';
var _default = Popover;
exports.default = _default;