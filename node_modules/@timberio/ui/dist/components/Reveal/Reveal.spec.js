"use strict";

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _Reveal = _interopRequireDefault(require("./Reveal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('Reveal component', function () {
  var wrapper;
  var mockOnTrigger;
  beforeEach(function () {
    mockOnTrigger = jest.fn();
    wrapper = (0, _enzyme.shallow)(_react.default.createElement(_Reveal.default, {
      onTrigger: mockOnTrigger,
      trigger: function trigger(open) {
        return _react.default.createElement("button", null, open ? 'Hide' : 'Show');
      }
    }, "Foo"));
  });
  it('should reveal the component correctly', function () {
    expect(wrapper.state('open')).toBeFalsy();
    expect(wrapper.find('button').text()).toEqual('Show');
    wrapper.find('span').simulate('click');
    expect(wrapper.state('open')).toBeTruthy();
    expect(wrapper.find('button').text()).toEqual('Hide');
    expect(mockOnTrigger).toBeCalledWith(true);
  });
});
describe('Reveal component -- prop: open', function () {
  var wrapper;
  beforeEach(function () {
    wrapper = (0, _enzyme.shallow)(_react.default.createElement(_Reveal.default, {
      open: true,
      trigger: function trigger() {}
    }));
  });
  it('should change the open state based on prop updates', function () {
    expect(wrapper.state('open')).toBeTruthy();
    wrapper.setProps({
      open: false
    });
    expect(wrapper.state('open')).toBeFalsy();
  });
});