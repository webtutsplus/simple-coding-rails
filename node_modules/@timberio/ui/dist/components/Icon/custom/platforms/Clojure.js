"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var Clojure = function Clojure(props) {
  return _react.default.createElement("svg", _extends({
    style: {
      fill: 'currentColor'
    },
    viewBox: "0 0 80 80",
    width: props.size,
    height: props.size
  }, props), _react.default.createElement("path", {
    d: "M30.369 1.195c11.124-2.788 23.441-.52 32.745 6.22 11.519 8.014 18.188 22.464 16.673 36.43-.69 5.656-4.509 10.945-9.914 12.944-3.729 1.55-7.826 1.38-11.779 1.398 9.448-9.08 10.022-25.52 1.094-35.138-7.037-8.32-19.452-10.83-29.402-6.67-6.615-3.908-15.077-4.015-21.854-.421C13.651 8.876 21.423 3.292 30.369 1.195z"
  }), _react.default.createElement("path", {
    d: "M33.623 19.813c4.984-1.336 10.416-1.228 15.113 1.03 7.996 3.631 13.285 12.55 12.209 21.335-.502 6.006-4.025 11.286-8.605 15.015-3.801-1.776-5.63-5.73-7.306-9.314-4.392-9.125-4.868-19.972-11.411-28.066z"
  }), _react.default.createElement("path", {
    d: "M6.166 25.469c4.312-4.312 10.784-5.737 16.682-4.697-5.1 4.867-8.489 11.626-8.47 18.76-.314 8.947 4.589 17.723 12.208 22.348 7.35 4.607 16.915 4.805 24.723 1.228 6.912 2.044 14.217 1.855 21.2.251-5.612 7.557-13.778 13.249-22.966 15.481-11.358 2.86-23.925.359-33.283-6.696C6.041 64.722-.27 52.19.017 39.542c-.26-5.324 2.492-10.38 6.15-14.073z"
  }), _react.default.createElement("path", {
    d: "M19.289 44.024c-1.766-8.014 2.026-16.503 8.525-21.298 4.966 3.11 6.974 8.874 9.053 14.046-3.182 6.714-7.27 13.043-9.51 20.178-3.98-3.299-7.154-7.754-8.068-12.926zM32.762 59.98c-.457-6.75 2.994-12.8 5.504-18.824 2.053 6.57 3.343 13.795 8.13 19.057-4.49 1.174-9.188 1.076-13.634-.233z"
  }));
};

var _default = Clojure;
exports.default = _default;