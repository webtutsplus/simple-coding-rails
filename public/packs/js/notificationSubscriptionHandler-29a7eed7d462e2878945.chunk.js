(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["notificationSubscriptionHandler"],{

/***/ "./app/javascript/packs/notificationSubscriptionHandler.js":
/*!*****************************************************************!*\
  !*** ./app/javascript/packs/notificationSubscriptionHandler.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function loadFunctionality() {\n  if (!document.getElementById('notification-subscriptions-area')) {\n    return;\n  }\n\n  var notifiableId = document.getElementById('notification-subscriptions-area').dataset.notifiableId;\n  var notifiableType = document.getElementById('notification-subscriptions-area').dataset.notifiableType;\n  var userStatus = document.body.getAttribute('data-user-status');\n\n  if (userStatus === 'logged-in') {\n    fetch(\"/notification_subscriptions/\".concat(notifiableType, \"/\").concat(notifiableId), {\n      headers: {\n        Accept: 'application/json',\n        'X-CSRF-Token': window.csrfToken,\n        'Content-Type': 'application/json'\n      },\n      credentials: 'same-origin'\n    }).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      document.getElementById(\"notification-subscription-label_\".concat(result.config)).classList.add('selected'); // checkbox.checked = result;\n    });\n  }\n\n  var updateStatus = function updateStatus() {};\n\n  if (userStatus === 'logged-out') {\n    updateStatus = function updateStatus() {\n      // Disabled because showModal() is globally defined in asset pipeline\n      // eslint-disable-next-line no-undef\n      showModal('notification-subscription');\n    };\n  } else {\n    updateStatus = function updateStatus(target) {\n      var payload = '';\n      var shouldUnsubscribeToNotifications = target.classList.contains('selected') || target.classList.contains('selected-emoji');\n      var allButtons = document.getElementsByClassName('notification-subscription-label');\n\n      for (var i = 0; i < allButtons.length; i += 1) {\n        allButtons[i].classList.remove('selected');\n      }\n\n      if (shouldUnsubscribeToNotifications) {\n        var unsubscribeButton = allButtons.namedItem('unsubscribe');\n        unsubscribeButton.classList.add('selected');\n        payload = unsubscribeButton.dataset.payload;\n      } else {\n        target.classList.add('selected');\n        payload = target.dataset.payload;\n      }\n\n      fetch(\"/notification_subscriptions/\".concat(notifiableType, \"/\").concat(notifiableId), {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'X-CSRF-Token': window.csrfToken,\n          'Content-Type': 'application/json'\n        },\n        credentials: 'same-origin',\n        body: JSON.stringify({\n          config: payload // notifiable params are passed via URL\n\n        })\n      });\n    };\n  }\n\n  var subscriptionButtons = document.getElementsByClassName('notification-subscription-label');\n\n  for (var i = 0; i < subscriptionButtons.length; i += 1) {\n    subscriptionButtons[i].addEventListener('click', function (e) {\n      e.preventDefault();\n      updateStatus(e.target);\n\n      if (typeof window.sendHapticMessage !== 'undefined') {\n        window.sendHapticMessage('medium');\n      }\n    });\n    subscriptionButtons[i].addEventListener('keydown', function (e) {\n      if (e.key === 'Enter') {\n        updateStatus(e.target);\n      }\n    });\n  }\n}\n\nwindow.InstantClick.on('change', function () {\n  loadFunctionality();\n});\nloadFunctionality();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./app/javascript/packs/notificationSubscriptionHandler.js\n");

/***/ })

},[["./app/javascript/packs/notificationSubscriptionHandler.js","runtime~notificationSubscriptionHandler"]]]);